package org.opentestsystem.rdw.olap.service;

import com.google.common.collect.ImmutableList;
import org.opentestsystem.rdw.olap.model.AggregateReportResult;
import org.opentestsystem.rdw.reporting.common.model.AggregateQuery;
import org.opentestsystem.rdw.reporting.common.web.security.User;

import javax.validation.constraints.NotNull;
import java.util.List;

/**
 * Implementations of this interface are responsible for accepting
 * and handling AggregateQuery implementations.
 *
 * @param <T> The aggregate report content type
 */
public interface AggregateQueryHandler<T, R extends AggregateReportResult<List<T>>, Q extends AggregateQuery> {

    /**
     * @param query A query
     * @return True if this handler can process the given query
     */
    boolean handles(@NotNull AggregateQuery query);

    /**
     * Produce a report for the given query.
     *
     * @param user  the {@link User} creating the report
     * @param query A query
     * @return An aggregate report result
     */
    R findByQuery(@NotNull User user, @NotNull Q query);

    /**
     * Estimates number of the rows in a custom aggregate report for the given query
     *
     * @param user  the {@link User} creating the report
     * @param query the query for the report
     * @return an estimated number of rows
     */
    int estimateReportRowCount(@NotNull User user, @NotNull Q query);
}
