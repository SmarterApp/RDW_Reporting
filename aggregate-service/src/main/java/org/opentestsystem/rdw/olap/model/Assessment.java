package org.opentestsystem.rdw.olap.model;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Objects;

/**
 * Represents an assessment data in the custom aggregate report row
 */
public class Assessment {
    private int id;
    private int gradeId;
    private String subjectCode;
    private String label;
    private int examSchoolYear;

    public int getId() {
        return id;
    }

    /**
     * if there are exams for this assessment, then it is a year in which it was administered;
     * otherwise it is a year it is designed for
     */
    public int getExamSchoolYear() {
        return examSchoolYear;
    }

    public int getGradeId() {
        return gradeId;
    }

    public String getSubjectCode() {
        return subjectCode;
    }

    public String getLabel() {
        return label;
    }

    public static Assessment map(final ResultSet row) throws SQLException {
        return Assessment.builder()
                .id(row.getInt("asmt_id"))
                .gradeId(row.getInt("asmt_grade_id"))
                .subjectCode(row.getString("subject_code"))
                .label(row.getString("asmt_label"))
                .examSchoolYear(row.getInt("school_year"))
                .build();
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        final Assessment that = (Assessment) o;
        return id == that.id &&
                gradeId == that.gradeId &&
                examSchoolYear == that.examSchoolYear &&
                Objects.equals(subjectCode, that.subjectCode) &&
                Objects.equals(label, that.label);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, gradeId, subjectCode, label, examSchoolYear);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder {
        private int id;
        private int gradeId;
        private String subjectCode;
        private String label;
        private int examSchoolYear;

        public Assessment build() {
            final Assessment assessment = new Assessment();
            assessment.id = id;
            assessment.gradeId = gradeId;
            assessment.subjectCode = subjectCode;
            assessment.label = label;
            assessment.examSchoolYear = examSchoolYear;
            return assessment;
        }

        public Builder id(final int id) {
            this.id = id;
            return this;
        }

        public Builder examSchoolYear(final int examSchoolYear) {
            this.examSchoolYear = examSchoolYear;
            return this;
        }

        public Builder gradeId(final int gradeId) {
            this.gradeId = gradeId;
            return this;
        }

        public Builder subjectCode(final String subjectCode) {
            this.subjectCode = subjectCode;
            return this;
        }

        public Builder label(final String label) {
            this.label = label;
            return this;
        }
    }
}