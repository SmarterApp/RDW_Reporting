package org.opentestsystem.rdw.olap.model;

import org.opentestsystem.rdw.reporting.common.model.AggregateRow;

import java.util.Collection;
import java.util.List;

import static com.google.common.collect.Lists.newArrayList;


/**
 * This class represents common functionality for the implementations of {@link AggregateReportResult}
 */
@SuppressWarnings("unchecked")
public abstract class AggregateRowReportResult<T extends AggregateRow> extends AggregateReportResult<List<T>> {

    /**
     * Returns a builder of this class pre-loaded with the data
     **/
    public abstract <B extends Builder> B copy();

    public static abstract class Builder<T extends AggregateRow, B extends Builder, R extends AggregateRowReportResult<T>>
            extends AggregateReportResult.Builder<B, AggregateRowReportResult<T>, List<T>> {
        protected List<T> rows = newArrayList();

        @Override
        public R build() {
            super.payload(this.rows);
            super.resultCount(rows.size());
            return (R) super.build();
        }

        public B merge(final AggregateRowReportResult<T> report) {
            super.merge(report);
            rows(report.getPayload());
            return (B) this;
        }

        public B rows(final Collection<T> rows) {
            this.rows.addAll(rows);
            return (B) this;
        }

        public B row(final T row) {
            this.rows.add(row);
            return (B) this;
        }
    }
}