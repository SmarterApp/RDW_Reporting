package org.opentestsystem.rdw.olap.repository.impl;

import org.opentestsystem.rdw.olap.model.AggregateServiceCache;
import org.opentestsystem.rdw.olap.repository.EmbargoRepository;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
class JdbcEmbargoRepository implements EmbargoRepository {

    private final NamedParameterJdbcTemplate template;

    @Value("${sql.embargo.isStateEmbargoed}")
    private String isStateEmbargoedQuery;

    @Value("${sql.embargo.findAllEmbargoedDistrictIds}")
    private String findAllEmbargoedDistrictIdsQuery;

    JdbcEmbargoRepository(final NamedParameterJdbcTemplate template) {
        this.template = template;
    }

    @Cacheable(value = AggregateServiceCache.Embargo, key = "#root.methodName")
    @Override
    public boolean isStateEmbargoed() {
        return template.getJdbcOperations().queryForObject(isStateEmbargoedQuery, Boolean.class);
    }

    @Cacheable(value = AggregateServiceCache.Embargo, key = "#root.methodName")
    @Override
    public List<Long> findAllEmbargoedDistrictIds() {
        return template.getJdbcOperations().queryForList(findAllEmbargoedDistrictIdsQuery, Long.class);
    }
}
