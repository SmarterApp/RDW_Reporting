package org.opentestsystem.rdw.olap.service;

import org.opentestsystem.rdw.olap.model.CodedEntity;
import org.opentestsystem.rdw.reporting.common.model.ReportQuery;
import org.opentestsystem.rdw.reporting.common.web.security.User;

import javax.validation.constraints.NotNull;
import java.util.Collection;
import java.util.Set;

/**
 * Service responsible for holding aggregate report security logic
 */
public interface AuthorizationService {

    /**
     * Ensures that the given user has the authority to create the given report based on the query content
     *
     * @param user  the {@link User} creating the report
     * @param query the {@link ReportQuery} that the user would like the create the report with
     * @throws RuntimeException when the user is not authorized to create the report
     */
    void checkAuthorization(@NotNull User user, @NotNull ReportQuery query);

    /**
     * Filters the provided assessment types given the user's aggregate report permissions
     *
     * @param user            the {@link User}
     * @param assessmentTypes all assessment types of the system
     * @return assessment types that the user is entitled to create reports for
     */
    Set<CodedEntity> getAuthorizedAssessmentTypes(@NotNull User user, @NotNull Collection<CodedEntity> assessmentTypes);

}
