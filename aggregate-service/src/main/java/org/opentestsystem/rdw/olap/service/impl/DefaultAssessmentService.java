package org.opentestsystem.rdw.olap.service.impl;

import com.google.common.collect.ImmutableList;
import org.opentestsystem.rdw.olap.model.Assessment;
import org.opentestsystem.rdw.olap.model.AssessmentQuery;
import org.opentestsystem.rdw.olap.repository.AssessmentRepository;
import org.opentestsystem.rdw.olap.service.AssessmentService;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.function.Predicate;

import static com.google.common.collect.ImmutableList.toImmutableList;

@Service
class DefaultAssessmentService implements AssessmentService {

    private final AssessmentRepository repository;

    DefaultAssessmentService(final AssessmentRepository repository) {
        this.repository = repository;
    }

    @Override
    public List<Assessment> getAssessments() {
        return ImmutableList.copyOf(repository.findAll());
    }

    @Override
    public List<Assessment> getAssessments(final AssessmentQuery query) {

        if (query == null) {
            return getAssessments();
        }

        final List<Predicate<Assessment>> filters = new ArrayList<>();
        if (query.getIds() != null) {
            filters.add(assessment -> query.getIds().contains(assessment.getId()));
        }

        return repository.findAll().stream()
                .filter(filters.stream().reduce(assessment -> true, Predicate::and))
                .collect(toImmutableList());
    }

}
