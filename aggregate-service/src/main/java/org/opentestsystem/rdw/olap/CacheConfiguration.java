package org.opentestsystem.rdw.olap;

import org.opentestsystem.rdw.common.model.AssessmentType;
import org.opentestsystem.rdw.olap.repository.ActiveAssessmentRepository;
import org.opentestsystem.rdw.olap.repository.AdministrationConditionRepository;
import org.opentestsystem.rdw.olap.repository.AssessmentGradeRepository;
import org.opentestsystem.rdw.olap.repository.BooleanRepository;
import org.opentestsystem.rdw.olap.repository.EthnicityRepository;
import org.opentestsystem.rdw.olap.repository.GenderRepository;
import org.opentestsystem.rdw.olap.repository.OrganizationRepository;
import org.opentestsystem.rdw.olap.repository.SchoolYearRepository;
import org.opentestsystem.rdw.olap.repository.StrictBooleanRepository;
import org.opentestsystem.rdw.olap.repository.SubjectRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cache.annotation.CacheEvict;
import org.springframework.cache.annotation.EnableCaching;
import org.springframework.context.annotation.Configuration;
import org.springframework.scheduling.annotation.EnableScheduling;
import org.springframework.scheduling.annotation.Scheduled;

import static org.opentestsystem.rdw.olap.model.AggregateServiceCache.AdministrationConditions;
import static org.opentestsystem.rdw.olap.model.AggregateServiceCache.AssessmentGrades;
import static org.opentestsystem.rdw.olap.model.AggregateServiceCache.AssessmentTypes;
import static org.opentestsystem.rdw.olap.model.AggregateServiceCache.Booleans;
import static org.opentestsystem.rdw.olap.model.AggregateServiceCache.CompletenessCodes;
import static org.opentestsystem.rdw.olap.model.AggregateServiceCache.Ethnicities;
import static org.opentestsystem.rdw.olap.model.AggregateServiceCache.Genders;
import static org.opentestsystem.rdw.olap.model.AggregateServiceCache.Organizations;
import static org.opentestsystem.rdw.olap.model.AggregateServiceCache.SchoolYears;
import static org.opentestsystem.rdw.olap.model.AggregateServiceCache.StrictBooleans;
import static org.opentestsystem.rdw.olap.model.AggregateServiceCache.Subjects;

@Configuration
@EnableCaching
@EnableScheduling
public class CacheConfiguration {

    @Autowired
    private OrganizationRepository organizationRepository;

    @Autowired
    private EthnicityRepository ethnicityRepository;

    @Autowired
    private SubjectRepository subjectRepository;

    @Autowired
    private AssessmentGradeRepository assessmentGradeRepository;

    @Autowired
    private GenderRepository genderRepository;

    @Autowired
    private SchoolYearRepository schoolYearRepository;

    @Autowired
    private AdministrationConditionRepository administrationConditionRepository;

    @Autowired
    private BooleanRepository booleanRepository;

    @Autowired
    private StrictBooleanRepository strictBooleanRepository;


    @Autowired
    private ActiveAssessmentRepository activeAssessmentRepository;

    /**
     * Refreshes the contents of the report organizations cache
     */
    @Scheduled(cron = "${app.cache.repository.refresh-cron}", zone = "GMT")
    @CacheEvict(cacheNames = {Organizations,
            AdministrationConditions,
            AssessmentGrades,
            AssessmentTypes,
            Booleans,
            StrictBooleans,
            Organizations,
            CompletenessCodes,
            Ethnicities,
            Genders,
            SchoolYears,
            Subjects}, beforeInvocation = true, allEntries = true)
    public void refreshRepositoryCache() {
        organizationRepository.findMapOfDistrictsByIds();
        organizationRepository.findMapOfSchoolsById();
        organizationRepository.findAllSchoolsByDistrictId();

        ethnicityRepository.findAll();
        subjectRepository.findAll();
        assessmentGradeRepository.findAll();
        genderRepository.findAll();
        schoolYearRepository.findAll();
        administrationConditionRepository.findAll();
        booleanRepository.findAll();
        strictBooleanRepository.findAll();

        for (final AssessmentType assessmentType : AssessmentType.values()) {
            activeAssessmentRepository.findAllByTypeCode(assessmentType.code());
        }
    }
}
