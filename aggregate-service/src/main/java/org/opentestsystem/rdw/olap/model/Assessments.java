package org.opentestsystem.rdw.olap.model;


import com.google.common.collect.ImmutableList;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

/**
 * Holds utility methods for mapping SQL query results to {@link org.opentestsystem.rdw.reporting.common.model.Assessment}
 */
public final class Assessments {

    private static final String[] CLAIM_CODE_COLUMN_NAMES = {
            "claim1_score_code",
            "claim2_score_code",
            "claim3_score_code",
            "claim4_score_code"
    };

    private Assessments() {
    }

    public static Assessment map(final ResultSet row) throws SQLException {
        return map(row, "");
    }

    public static Assessment map(final ResultSet row, final String prefix) throws SQLException {

        final Assessment.Builder builder = Assessment.builder()
                .id(row.getInt(prefix + "id"))
                .name(row.getString(prefix + "name"))
                .label(row.getString(prefix + "label"))
                .typeCode(row.getString(prefix + "type_code"))
                .subjectCode(row.getString(prefix + "subject_code"))
                .gradeCode(row.getString(prefix + "grade_code"))
                .schoolYear(row.getInt(prefix + "school_year"))
                .cutPoints(ImmutableList.of(
                        row.getInt(prefix + "min_score"),
                        row.getInt(prefix + "cut_point_1"),
                        row.getInt(prefix + "cut_point_2"),
                        row.getInt(prefix + "cut_point_3"),
                        row.getInt(prefix + "max_score")
                ));

        final ArrayList<String> claimCodes = new ArrayList<>();
        for (final String claimCodeColumnName : CLAIM_CODE_COLUMN_NAMES) {
            final String claimCode = row.getString(prefix + claimCodeColumnName);
            if (claimCode == null) {
                break;
            }
            claimCodes.add(claimCode);
        }
        if (!claimCodes.isEmpty()) {
            builder.claimCodes(claimCodes);
        }
        return builder.build();
    }

}