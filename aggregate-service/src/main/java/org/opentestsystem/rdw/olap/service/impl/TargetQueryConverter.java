package org.opentestsystem.rdw.olap.service.impl;

import org.opentestsystem.rdw.olap.model.TargetOrganizationQuery;
import org.opentestsystem.rdw.olap.model.TargetOrganizationQuery.Builder;
import org.opentestsystem.rdw.olap.sqlbuilder.impl.QueryProviderRepositoryHelper;
import org.opentestsystem.rdw.reporting.common.model.StudentFilters;
import org.opentestsystem.rdw.reporting.common.model.TargetReportQuery;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import static com.google.common.base.Preconditions.checkArgument;

/**
 * Responsible for converting {@link TargetReportQuery} into a collection
 * of corresponding {@link TargetOrganizationQuery} queries
 */
@Component
class TargetQueryConverter extends AbstractQueryConverter<TargetReportQuery, TargetOrganizationQuery, Builder> {

    @Autowired
    TargetQueryConverter(final QueryProviderRepositoryHelper repositoryHelper) {
        super(repositoryHelper);
    }

    @Override
    protected Builder getOrganizationTypeQueryBuilder(final TargetReportQuery reportQuery, final StudentFilters filters) {

        checkArgument(reportQuery.getAssessmentGradeCodes().size() == 1, "must include exactly one assessment grade");

        return TargetOrganizationQuery.builder()
                .assessmentGradeCode(reportQuery.getAssessmentGradeCodes().iterator().next())
                .subjectCode(reportQuery.getSubjectCode())
                .schoolYear(reportQuery.getSchoolYear());
    }
}