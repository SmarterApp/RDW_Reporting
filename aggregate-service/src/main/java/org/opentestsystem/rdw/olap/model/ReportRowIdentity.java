package org.opentestsystem.rdw.olap.model;

import org.opentestsystem.rdw.reporting.common.model.ActiveAssessment;
import org.opentestsystem.rdw.reporting.common.model.AggregateRow;
import org.opentestsystem.rdw.reporting.common.model.Dimension;
import org.opentestsystem.rdw.reporting.common.model.Organization;

import java.util.Objects;

/**
 * Provides an identity for instances of {@link AggregateRow}
 * This is used to back-filled missing reports data.
 * Note that assessment id is ignored for non IABs. Since this is used only when there is
 * no data available, it is enough to return an assessment to represent
 * a missing report row.
 */
public class ReportRowIdentity {
    private final Organization organization;
    private final Dimension dimension;
    private final String subjectCode;
    private final String asmtGradeCode;
    private final int examSchoolYear;
    private final Integer asmtId;

    public ReportRowIdentity(final AggregateRow reportRow, final boolean considerAsmtIdAsPartOfIdentity) {
        final ActiveAssessment assessment = reportRow.getAssessment();
        this.subjectCode = assessment.getSubjectCode();
        this.asmtGradeCode = assessment.getGradeCode();
        this.examSchoolYear = assessment.getExamSchoolYear();

        this.asmtId = considerAsmtIdAsPartOfIdentity ? assessment.getId() : null;

        this.organization = reportRow.getOrganization();
        this.dimension = reportRow.getDimension();
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        final ReportRowIdentity that = (ReportRowIdentity) o;
        return Objects.equals(organization, that.organization) &&
                Objects.equals(dimension, that.dimension) &&
                Objects.equals(subjectCode, that.subjectCode) &&
                Objects.equals(asmtGradeCode, that.asmtGradeCode) &&
                Objects.equals(asmtId, that.asmtId) &&
                examSchoolYear == that.examSchoolYear;
    }

    @Override
    public int hashCode() {
        return Objects.hash(organization, dimension, subjectCode, asmtGradeCode, examSchoolYear, asmtId);
    }
}