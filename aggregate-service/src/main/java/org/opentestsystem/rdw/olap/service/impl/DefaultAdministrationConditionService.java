package org.opentestsystem.rdw.olap.service.impl;

import com.google.common.collect.ImmutableSet;
import org.opentestsystem.rdw.olap.repository.AdministrationConditionRepository;
import org.opentestsystem.rdw.olap.service.AdministrationConditionService;
import org.opentestsystem.rdw.reporting.common.model.CodedEntity;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Set;

import static com.google.common.collect.ImmutableList.toImmutableList;

@Service
class DefaultAdministrationConditionService implements AdministrationConditionService {

    // TODO make this data driven by possibly adding a relationship table or column to admin condition table
    private static final Set<String> InterimConditionCodes = ImmutableSet.of("SD", "NS");
    private static final Set<String> SummativeConditionCodes = ImmutableSet.of("Valid", "IN");
    private final AdministrationConditionRepository repository;

    @Autowired
    DefaultAdministrationConditionService(final AdministrationConditionRepository repository) {
        this.repository = repository;
    }

    @Override
    public List<CodedEntity> getInterimConditions() {
        return repository.findAll().stream()
                .filter(condition -> InterimConditionCodes.contains(condition.getCode()))
                .collect(toImmutableList());
    }

    @Override
    public List<CodedEntity> getSummativeConditions() {
        return repository.findAll().stream()
                .filter(condition -> SummativeConditionCodes.contains(condition.getCode()))
                .collect(toImmutableList());
    }

}
