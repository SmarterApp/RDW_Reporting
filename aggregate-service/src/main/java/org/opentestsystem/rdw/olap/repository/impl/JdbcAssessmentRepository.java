package org.opentestsystem.rdw.olap.repository.impl;

import com.google.common.collect.ImmutableList;
import org.opentestsystem.rdw.olap.model.AggregateServiceCache;
import org.opentestsystem.rdw.olap.model.Assessment;
import org.opentestsystem.rdw.olap.repository.AssessmentRepository;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
class JdbcAssessmentRepository implements AssessmentRepository {

    private final NamedParameterJdbcTemplate template;

    @Value("${sql.assessment.findAll}")
    private String findAllQuery;

    JdbcAssessmentRepository(final NamedParameterJdbcTemplate template) {
        this.template = template;
    }

    @Cacheable(AggregateServiceCache.Assessments)
    @Override
    public List<Assessment> findAll() {
        return template.query(
                findAllQuery,
                (row, index) -> Assessment.builder()
                        .id(row.getInt("id"))
                        .name(row.getString("name"))
                        .label(row.getString("label"))
                        .typeCode(row.getString("type_code"))
                        .subjectCode(row.getString("subject_code"))
                        .gradeCode(row.getString("grade_code"))
                        .schoolYear(row.getInt("school_year"))
                        .cutPoints(ImmutableList.of(
                                row.getInt("min_score"),
                                row.getInt("cut_point_1"),
                                row.getInt("cut_point_2"),
                                row.getInt("cut_point_3"),
                                row.getInt("max_score")
                        ))
                        .build()
        );
    }

}
