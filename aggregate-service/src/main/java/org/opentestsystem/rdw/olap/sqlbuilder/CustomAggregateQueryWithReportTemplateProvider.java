package org.opentestsystem.rdw.olap.sqlbuilder;

import org.opentestsystem.rdw.common.model.AssessmentType;
import org.opentestsystem.rdw.olap.model.AggregateReportQuery;
import org.opentestsystem.rdw.olap.sqlbuilder.QueryWithReportTemplate.Builder;
import org.opentestsystem.rdw.reporting.common.model.ActiveAssessment;
import org.opentestsystem.rdw.reporting.common.model.Organization;
import org.opentestsystem.rdw.reporting.common.security.PermissionSource;
import org.opentestsystem.rdw.reporting.common.sqlbuilder.QueryProvider;

import static org.opentestsystem.rdw.reporting.common.jdbc.QueryUtils.padIntToSize;

/**
 * This implementation is responsible for converting {@link AggregateReportQuery} into a {@link QueryWithReportTemplate}
 */
public class CustomAggregateQueryWithReportTemplateProvider
        extends OrganizationQueryWithReportTemplateProvider<AggregateReportQuery, ActiveAssessment> {

    private static final String customAggregateTemplateSql = "customAggregate";
    private static final String iabAddOn = "iab";
    private static final String icaOrSummativeAddOn = "icaOrSummative";

    public CustomAggregateQueryWithReportTemplateProvider(final Organization state,
                                                          final int organizationPartitionSize,
                                                          final QueryProvider queryProvider,
                                                          final QueryProviderRepositoryHelper repositoryHelper,
                                                          final PermissionSource permissionSource) {
        super(state, organizationPartitionSize, queryProvider, repositoryHelper, permissionSource);
    }

    @Override
    protected String getTemplateSql() {
        return customAggregateTemplateSql;
    }

    @Override
    public Builder createBuilderWithCommonAttributes(final AggregateReportQuery query) {
        return addFiltersAndDimension(super.createBuilderWithCommonAttributes(query), query)
                .addOn(query.getAssessmentTypeCode().equals(AssessmentType.IAB.code()) ? iabAddOn : icaOrSummativeAddOn)
                .parameter("school_years", padIntToSize(query.getSchoolYears(), getRepositoryHelper().maxSchoolYears()))
                .parameter("asmt_grade_ids", padIntToSize(getRepositoryHelper().toGradeIds(query.getAssessmentGradeCodes()), getRepositoryHelper().maxAssessmentGrades()))
                .parameter("subject_ids", padIntToSize(getRepositoryHelper().toSubjectIds(query.getSubjectCodes()), getRepositoryHelper().maxSubjects()))
                .parameter("asmt_type_id", getRepositoryHelper().toAssessmentTypeId(query.getAssessmentTypeCode()));
    }
}