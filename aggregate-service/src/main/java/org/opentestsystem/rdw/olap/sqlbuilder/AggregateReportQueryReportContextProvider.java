package org.opentestsystem.rdw.olap.sqlbuilder;

import org.opentestsystem.rdw.olap.model.AggregateReportQuery;
import org.opentestsystem.rdw.reporting.common.model.Organization;

import static com.google.common.base.Preconditions.checkArgument;
import static org.springframework.util.CollectionUtils.isEmpty;

/**
 * This implementation is responsible for converting {@link AggregateReportQuery} into {@link ReportContext}
 */
@SuppressWarnings("unchecked")
public class AggregateReportQueryReportContextProvider<B extends ReportContext.Builder, T extends ReportContext> extends OrganizationQueryReportContextProvider<B, T, AggregateReportQuery> {

    public AggregateReportQueryReportContextProvider(final Organization state,
                                                     final QueryProviderRepositoryHelper repositoryHelper) {
        super(state, repositoryHelper);
    }

    @Override
    public B createBuilderWithCommonAttributes(final AggregateReportQuery query) {
        return (B) super
                .createBuilderWithCommonAttributes(query)
                .assessments(getRepositoryHelper().findAssessments(query.getAssessmentTypeCode(), query.getSchoolYears(), query.getSubjectCodes(), query.getAssessmentGradeCodes()));
    }

    @Override
    protected void validate(final AggregateReportQuery query) {
        super.validate(query);
        checkArgument(!isEmpty(query.getSubjectCodes()), "invalid query, missing a subject");
        checkArgument(!isEmpty(query.getAssessmentGradeCodes()), "invalid query,, missing an assessment grade");
        checkArgument(!isEmpty(query.getSchoolYears()), "invalid query, missing a school year");
    }
}