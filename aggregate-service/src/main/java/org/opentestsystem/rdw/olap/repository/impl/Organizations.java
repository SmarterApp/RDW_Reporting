package org.opentestsystem.rdw.olap.repository.impl;

import org.opentestsystem.rdw.reporting.common.model.District;
import org.opentestsystem.rdw.reporting.common.model.Organization;
import org.opentestsystem.rdw.reporting.common.model.OrganizationType;
import org.opentestsystem.rdw.reporting.common.model.School;

import java.sql.ResultSet;
import java.sql.SQLException;

import static org.opentestsystem.rdw.reporting.common.jdbc.QueryUtils.getNullable;

/**
 * Holds common JDBC row mapping methods
 */
public final class Organizations {

    private Organizations() {
    }

    /**
     * Maps the given SQL result set or row into an {@link Organization}
     *
     * @param row the result set row
     * @return the row as an {@link Organization}
     * @throws SQLException when the row cannot be parsed correctly
     */
    public static Organization map(final ResultSet row) throws SQLException {
        final OrganizationType type = OrganizationType.valueOf(row.getString("organization_type"));
        switch (type) {
            case School:
                return School.builder()
                        .id(row.getLong("organization_id"))
                        .name(row.getString("organization_name"))
                        .naturalId(row.getString("organization_natural_id"))
                        .districtId(row.getLong("organization_parent_id"))
                        .build();
            case District:
                return District.builder()
                        .id(row.getLong("organization_id"))
                        .name(row.getString("organization_name"))
                        .id(getNullable(row, row.getLong("organization_id")))
                        .naturalId(row.getString("organization_natural_id"))
                        .build();
            case State:
                return Organization.builder()
                        .organizationType(type)
                        .id(row.getLong("organization_id"))
                        .name(row.getString("organization_name"))
                        .id(getNullable(row, row.getLong("organization_id")))
                        .naturalId(row.getString("organization_natural_id"))
                        .build();
            default:
                throw new IllegalStateException("Not supported organization type: " + type);

        }
    }
}