package org.opentestsystem.rdw.olap.service.impl;

import org.opentestsystem.rdw.olap.model.AggregateServiceCache;
import org.opentestsystem.rdw.olap.model.ReportOptions;
import org.opentestsystem.rdw.olap.repository.BooleanRepository;
import org.opentestsystem.rdw.olap.repository.StrictBooleanRepository;
import org.opentestsystem.rdw.olap.service.AdministrationConditionService;
import org.opentestsystem.rdw.olap.service.AssessmentGradeService;
import org.opentestsystem.rdw.olap.service.ClaimService;
import org.opentestsystem.rdw.olap.service.CompletenessService;
import org.opentestsystem.rdw.olap.service.ElasService;
import org.opentestsystem.rdw.olap.service.EthnicityService;
import org.opentestsystem.rdw.olap.service.GenderService;
import org.opentestsystem.rdw.olap.service.ReportOptionService;
import org.opentestsystem.rdw.olap.service.SchoolYearService;
import org.opentestsystem.rdw.olap.service.SubjectService;
import org.opentestsystem.rdw.reporting.common.model.DimensionType;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.stereotype.Service;

import java.util.List;

import static org.opentestsystem.rdw.olap.model.CodedEntities.codesOf;

/**
 * This implementation caches the generated report options
 */
@Service
class DefaultReportOptionService implements ReportOptionService {

    private final AdministrationConditionService administrationConditionService;
    private final AssessmentGradeService assessmentGradeService;
    private final BooleanRepository booleanRepository;
    private final CompletenessService completenessService;
    private final EthnicityService ethnicityService;
    private final ElasService elasService;
    private final GenderService genderService;
    private final SchoolYearService schoolYearService;
    private final StrictBooleanRepository strictBooleanRepository;
    private final SubjectService subjectService;
    private final ClaimService claimService;

    DefaultReportOptionService(
            final AdministrationConditionService administrationConditionService,
            final AssessmentGradeService assessmentGradeService,
            final BooleanRepository booleanRepository,
            final CompletenessService completenessService,
            final EthnicityService ethnicityService,
            final ElasService elasService,
            final GenderService genderService,
            final SchoolYearService schoolYearService,
            final StrictBooleanRepository strictBooleanRepository,
            final SubjectService subjectService,
            final ClaimService claimService) {
        this.administrationConditionService = administrationConditionService;
        this.assessmentGradeService = assessmentGradeService;
        this.booleanRepository = booleanRepository;
        this.completenessService = completenessService;
        this.ethnicityService = ethnicityService;
        this.elasService = elasService;
        this.genderService = genderService;
        this.schoolYearService = schoolYearService;
        this.strictBooleanRepository = strictBooleanRepository;
        this.subjectService = subjectService;
        this.claimService = claimService;
    }

    @Cacheable(AggregateServiceCache.ReportOptions)
    @Override
    public ReportOptions getReportOptions() {
        final List<String> booleans = codesOf(booleanRepository.findAll());
        final List<String> strictBooleans = codesOf(strictBooleanRepository.findAll());
        return ReportOptions.builder()
                .assessmentGrades(codesOf(assessmentGradeService.getAssessmentGrades()))
                .completenesses(codesOf(completenessService.getCompletenesses()))
                .claims(claimService.findAll())
                .dimensionTypes(DimensionType.orderedDisplayValues())
                .economicDisadvantages(strictBooleans)
                .ethnicities(codesOf(ethnicityService.getEthnicities()))
                .genders(codesOf(genderService.getGenders()))
                .individualEducationPlans(strictBooleans)
                .interimAdministrationConditions(codesOf(administrationConditionService.getInterimConditions()))
                .limitedEnglishProficiencies(strictBooleans)
                .englishLanguageAcquisitionStatuses(codesOf(elasService.getElases()))
                .migrantStatuses(booleans)
                .schoolYears(schoolYearService.getSchoolYears())
                .section504s(booleans)
                .subjects(codesOf(subjectService.getSubjects()))
                .summativeAdministrationConditions(codesOf(administrationConditionService.getSummativeConditions()))
                .build();
    }

}
