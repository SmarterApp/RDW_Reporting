package org.opentestsystem.rdw.olap.service.impl;

import org.opentestsystem.rdw.olap.model.CodedEntity;
import org.opentestsystem.rdw.olap.model.ReportOptions;
import org.opentestsystem.rdw.olap.repository.StrictBooleanRepository;
import org.opentestsystem.rdw.olap.service.AdministrationConditionService;
import org.opentestsystem.rdw.olap.service.AssessmentGradeService;
import org.opentestsystem.rdw.olap.service.CompletenessService;
import org.opentestsystem.rdw.olap.service.EthnicityService;
import org.opentestsystem.rdw.olap.service.GenderService;
import org.opentestsystem.rdw.olap.service.ReportOptionService;
import org.opentestsystem.rdw.olap.service.SchoolYearService;
import org.opentestsystem.rdw.olap.service.SubjectService;
import org.opentestsystem.rdw.reporting.common.model.DimensionType;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * This implementation caches the generated report options
 */
@Service
class DefaultReportOptionService implements ReportOptionService {

    private final AdministrationConditionService administrationConditionService;
    private final AssessmentGradeService assessmentGradeService;
    private final CompletenessService completenessService;
    private final EthnicityService ethnicityService;
    private final GenderService genderService;
    private final SchoolYearService schoolYearService;
    private final StrictBooleanRepository strictBooleanRepository;
    private final SubjectService subjectService;

    DefaultReportOptionService(
            final AdministrationConditionService administrationConditionService,
            final AssessmentGradeService assessmentGradeService,
            final CompletenessService completenessService,
            final EthnicityService ethnicityService,
            final GenderService genderService,
            final SchoolYearService schoolYearService,
            final StrictBooleanRepository strictBooleanRepository,
            final SubjectService subjectService) {
        this.administrationConditionService = administrationConditionService;
        this.assessmentGradeService = assessmentGradeService;
        this.ethnicityService = ethnicityService;
        this.completenessService = completenessService;
        this.genderService = genderService;
        this.schoolYearService = schoolYearService;
        this.strictBooleanRepository = strictBooleanRepository;
        this.subjectService = subjectService;
    }

    @Override
    public ReportOptions getReportOptions() {
        final List<CodedEntity> strictBooleans = strictBooleanRepository.findAll();
        return ReportOptions.builder()
                .assessmentGrades(assessmentGradeService.getAssessmentGrades())
                .completenesses(completenessService.getCompletenesses())
                .dimensionTypes(DimensionType.orderedDisplayValues())
                .economicDisadvantages(strictBooleans)
                .ethnicities(ethnicityService.getEthnicities())
                .genders(genderService.getGenders())
                .individualEducationPlans(strictBooleans)
                .interimAdministrationConditions(administrationConditionService.getInterimConditions())
                .limitedEnglishProficiencies(strictBooleans)
                .migrantStatuses(strictBooleans)
                .schoolYears(schoolYearService.getSchoolYears())
                .section504s(strictBooleans)
                .subjects(subjectService.getSubjects())
                .summativeAdministrationConditions(administrationConditionService.getSummativeConditions())
                .build();
    }

}
