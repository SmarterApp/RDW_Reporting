package org.opentestsystem.rdw.olap.service.impl;

import org.opentestsystem.rdw.common.model.AssessmentType;
import org.opentestsystem.rdw.olap.AggregateReportSettings;
import org.opentestsystem.rdw.olap.model.LongitudinalReportQuery;
import org.opentestsystem.rdw.olap.model.LongitudinalReportResult;
import org.opentestsystem.rdw.olap.repository.LongitudinalReportRepository;
import org.opentestsystem.rdw.olap.service.AuthorizationService;
import org.opentestsystem.rdw.olap.service.FilteredSubgroupLongitudinalService;
import org.opentestsystem.rdw.reporting.common.model.AggregateQuery;
import org.opentestsystem.rdw.reporting.common.model.FilteredSubgroupLongitudinalReportQuery;
import org.opentestsystem.rdw.reporting.common.model.LongitudinalRow;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.task.TaskExecutor;
import org.springframework.stereotype.Service;

import static org.opentestsystem.rdw.reporting.common.model.AggregateQueryType.FilteredSubgroupLongitudinal;

/**
 * Default implementation of {@link FilteredSubgroupLongitudinalService} backed by a repository
 */
@Service
class DefaultFilteredSubgroupLongitudinalService extends AbstractFilteredSubgroupAggregateService<LongitudinalRow,
        LongitudinalReportResult,
        FilteredSubgroupLongitudinalReportQuery,
        LongitudinalReportResult.Builder,
        LongitudinalReportQuery,
        LongitudinalReportQuery.Builder> implements FilteredSubgroupLongitudinalService {

    @Autowired
    DefaultFilteredSubgroupLongitudinalService(
            final LongitudinalReportRepository repository,
            final AuthorizationService authorizationService,
            final AggregateReportSettings settings,
            final FilteredSubgroupLongitudinalQueryAdapter queryAdapter,
            final TaskExecutor threadPoolTaskExecutor) {
        super(repository, authorizationService, settings, queryAdapter, threadPoolTaskExecutor);
    }

    @Override
    public boolean handles(final AggregateQuery query) {
        return FilteredSubgroupLongitudinal.equals(query.getQueryType());
    }

    @Override
    protected LongitudinalReportResult.Builder getReportResultBuilder() {
        return LongitudinalReportResult.builder();
    }

    @Override
    protected FilteredSubgroupLongitudinalReportQuery checkIsValid(final FilteredSubgroupLongitudinalReportQuery query) {
        if (query.getAssessmentTypeCode() == null) return super.checkIsValid(query.copy().assessmentTypeCode(AssessmentType.SUMMATIVE.code()).build());

        if (!query.getAssessmentTypeCode().equals(AssessmentType.SUMMATIVE.code())) throw new IllegalArgumentException("Longitudinal report supports summative assessments only");

        return super.checkIsValid(query);
    }
}