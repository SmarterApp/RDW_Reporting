package org.opentestsystem.rdw.olap.repository;

import org.opentestsystem.rdw.olap.model.AggregateRowReportResult;
import org.opentestsystem.rdw.olap.model.AggregateReportQuery;
import org.opentestsystem.rdw.reporting.common.model.OrganizationType;
import org.opentestsystem.rdw.reporting.common.security.PermissionSource;

import javax.validation.constraints.NotNull;

/**
 * Repository responsible for the custom aggregate report
 */
public interface AggregateReportRepository<R extends AggregateRowReportResult> {
    /**
     * Creates a custom aggregate report for the given {@link AggregateReportQuery} with the result
     * grouped by the given {@link OrganizationType}
     *
     * @param permissionSource        the security information to prepare the SQL query parameters for
     * @param query                   the {@link AggregateReportQuery} for the report
     * @param groupByOrganizationType the {@link OrganizationType} to group the result data by
     * @return an instance of {@link AggregateRowReportResult}
     */
    R findByOrganizationType(@NotNull PermissionSource permissionSource, @NotNull AggregateReportQuery query, OrganizationType groupByOrganizationType);

    /**
     * Estimates the number of rows in a custom aggregate report for the given {@link AggregateReportQuery} with the result
     * grouped by the given {@link OrganizationType}
     *
     * @param query                   the {@link AggregateReportQuery} for the report
     * @param groupByOrganizationType the {@link OrganizationType} to group the result data by
     * @return an estimated number of rows
     */
    int estimateReportRowCountByOrganizationType(@NotNull AggregateReportQuery query, @NotNull OrganizationType groupByOrganizationType);
}