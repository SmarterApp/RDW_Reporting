package org.opentestsystem.rdw.olap.service.impl;

import org.opentestsystem.rdw.olap.AggregateReportSettings;
import org.opentestsystem.rdw.olap.model.AggregateOrganizationQuery;
import org.opentestsystem.rdw.olap.model.CustomAggregateReportResult;
import org.opentestsystem.rdw.olap.model.CustomAggregateReportResult.Builder;
import org.opentestsystem.rdw.olap.repository.CustomAggregateReportRepository;
import org.opentestsystem.rdw.olap.service.AuthorizationService;
import org.opentestsystem.rdw.reporting.common.model.AggregateQuery;
import org.opentestsystem.rdw.reporting.common.model.AggregateRow;
import org.opentestsystem.rdw.reporting.common.model.CustomAggregateReportQuery;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.task.TaskExecutor;
import org.springframework.stereotype.Service;

import static org.opentestsystem.rdw.reporting.common.model.AggregateReportType.CustomAggregate;

/**
 * Responsible for handling of {@link CustomAggregateReportQuery}
 */
@Service
class CustomAggregateReportQueryHandler extends AbstractAggregateQueryHandler<AggregateRow,
        CustomAggregateReportResult,
        CustomAggregateReportQuery,
        Builder,
        AggregateOrganizationQuery,
        AggregateOrganizationQuery.Builder> {

    @Autowired
    CustomAggregateReportQueryHandler(
            final CustomAggregateReportRepository repository,
            final AuthorizationService authorizationService,
            final AggregateReportSettings settings,
            final CustomAggregateQueryConverter queryConverter,
            final TaskExecutor threadPoolTaskExecutor) {
        super(repository, queryConverter, authorizationService, settings, threadPoolTaskExecutor);
    }

    @Override
    public boolean handles(final AggregateQuery query) {
        return CustomAggregate.equals(query.getReportType());
    }

    @Override
    protected Builder getReportResultBuilder() {
        return CustomAggregateReportResult.builder();
    }
}