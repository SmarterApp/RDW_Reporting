package org.opentestsystem.rdw.olap.service.impl;

import com.google.common.collect.ImmutableMap;
import org.opentestsystem.rdw.olap.repository.BooleanRepository;
import org.opentestsystem.rdw.olap.repository.StrictBooleanRepository;
import org.opentestsystem.rdw.olap.service.ElasService;
import org.opentestsystem.rdw.olap.service.EthnicityService;
import org.opentestsystem.rdw.olap.service.GenderService;
import org.opentestsystem.rdw.olap.service.LanguageService;
import org.opentestsystem.rdw.olap.service.MilitaryConnectedCodeService;
import org.opentestsystem.rdw.olap.service.UserStudentFilterService;
import org.opentestsystem.rdw.reporting.common.model.CodedEntity;
import org.opentestsystem.rdw.reporting.common.model.ImmutableStudentFilter;
import org.opentestsystem.rdw.reporting.common.model.StudentFieldType;
import org.opentestsystem.rdw.reporting.common.model.StudentFilter;
import org.opentestsystem.rdw.reporting.common.security.User;
import org.opentestsystem.rdw.reporting.common.service.UserStudentFieldService;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;
import java.util.function.Supplier;

import static java.util.stream.Collectors.toList;
import static org.opentestsystem.rdw.reporting.common.model.StudentFieldType.EconomicDisadvantage;
import static org.opentestsystem.rdw.reporting.common.model.StudentFieldType.EnglishLanguageAcquisitionStatus;
import static org.opentestsystem.rdw.reporting.common.model.StudentFieldType.Ethnicity;
import static org.opentestsystem.rdw.reporting.common.model.StudentFieldType.Gender;
import static org.opentestsystem.rdw.reporting.common.model.StudentFieldType.IndividualEducationPlan;
import static org.opentestsystem.rdw.reporting.common.model.StudentFieldType.LimitedEnglishProficiency;
import static org.opentestsystem.rdw.reporting.common.model.StudentFieldType.MigrantStatus;
import static org.opentestsystem.rdw.reporting.common.model.StudentFieldType.MilitaryStudentIdentifier;
import static org.opentestsystem.rdw.reporting.common.model.StudentFieldType.PrimaryLanguage;
import static org.opentestsystem.rdw.reporting.common.model.StudentFieldType.Section504;

@Service
class DefaultUserStudentFilterService implements UserStudentFilterService {

    private final UserStudentFieldService userStudentFieldService;
    private final Map<StudentFieldType, Supplier<List<CodedEntity>>> studentFieldValueSuppliersByField;

    DefaultUserStudentFilterService(
            final UserStudentFieldService userStudentFieldService,
            final BooleanRepository booleanRepository,
            final EthnicityService ethnicityService,
            final ElasService elasService,
            final LanguageService languageService,
            final MilitaryConnectedCodeService militaryStudentIdentifierService,
            final GenderService genderService,
            final StrictBooleanRepository strictBooleanRepository) {
        this.userStudentFieldService = userStudentFieldService;
        this.studentFieldValueSuppliersByField = ImmutableMap.<StudentFieldType, Supplier<List<CodedEntity>>>builder()
                .put(EconomicDisadvantage, strictBooleanRepository::findAll)
                .put(EnglishLanguageAcquisitionStatus, elasService::getElases)
                .put(Ethnicity, ethnicityService::getEthnicities)
                .put(Gender, genderService::getGenders)
                .put(IndividualEducationPlan, strictBooleanRepository::findAll)
                .put(LimitedEnglishProficiency, strictBooleanRepository::findAll)
                .put(MigrantStatus, booleanRepository::findAll)
                .put(MilitaryStudentIdentifier, militaryStudentIdentifierService::getMilitaryConnectedCodes)
                .put(PrimaryLanguage, languageService::getLanguages)
                .put(Section504, booleanRepository::findAll)
                .build();
    }

    @Override
    public List<StudentFilter> get(final User user) {
        return userStudentFieldService.get(user).stream()
                .map(field ->
                        ImmutableStudentFilter.builder()
                                .id(field)
                                .values(
                                        studentFieldValueSuppliersByField.get(field).get().stream()
                                                .map(CodedEntity::getCode)
                                                .collect(toList()))
                                .build()
                )
                .collect(toList());
    }
}
