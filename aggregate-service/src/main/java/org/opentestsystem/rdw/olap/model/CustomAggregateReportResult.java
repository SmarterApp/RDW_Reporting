package org.opentestsystem.rdw.olap.model;

import com.google.common.collect.ImmutableList;
import org.opentestsystem.rdw.reporting.common.model.AggregateRow;

import java.util.Collection;
import java.util.List;

import static com.google.common.collect.ImmutableList.builder;


/**
 * This class represents common functionality for implementations of the {@link CustomAggregateReportResult}
 */
@SuppressWarnings("unchecked")
public abstract class CustomAggregateReportResult<T extends AggregateRow> extends AggregateReportResult<List<T>> {

    public static abstract class Builder<T extends AggregateRow, B extends Builder, R extends CustomAggregateReportResult<T>> extends AggregateReportResult.Builder<B, CustomAggregateReportResult<T>, List<T>> {
        private final ImmutableList.Builder<T> rowsBuilder = builder();

        @Override
        public R build() {
            final ImmutableList<T> rows = rowsBuilder.build();
            super.payload(rows);
            super.resultCount(rows.size());
            return (R) super.build();
        }

        public void merge(final CustomAggregateReportResult<T> report) {
            rows(report.getPayload());
            createdWhileDataEmbargoed(this.isCreatedWhileDataEmbargoed() || report.isCreatedWhileDataEmbargoed());
            hasResults(this.isHasResults() || report.isHasResults());
        }

        public B rows(final Collection<T> rows) {
            this.rowsBuilder.addAll(rows);
            return (B) this;
        }

        public B row(final T row) {
            this.rowsBuilder.add(row);
            return (B) this;
        }
    }
}