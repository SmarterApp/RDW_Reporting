package org.opentestsystem.rdw.olap.service.impl;

import com.google.common.collect.ImmutableSet;
import org.opentestsystem.rdw.olap.service.OrganizationService;
import org.opentestsystem.rdw.reporting.common.model.Organization;
import org.opentestsystem.rdw.reporting.common.model.OrganizationQuery;
import org.opentestsystem.rdw.reporting.common.model.OrganizationType;
import org.opentestsystem.rdw.reporting.common.repository.OrganizationRepository;
import org.opentestsystem.rdw.security.PermissionScope;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.stereotype.Service;

import java.util.Set;

import static org.opentestsystem.rdw.olap.model.AggregateServiceCache.ReportOrganizations;

@Service
class CachingOrganizationService implements OrganizationService {

    private final OrganizationRepository repository;

    @Autowired
    CachingOrganizationService(final OrganizationRepository repository) {
        this.repository = repository;
    }

    @Override
    @Cacheable(ReportOrganizations)
    public Set<Organization> getSchoolsAndDistricts() {
        // TODO uncomment when repository is corrected to match olap schema
        return ImmutableSet.of();
//        return ImmutableSet.copyOf(repository.findAll(
//                PermissionScope.STATEWIDE,
//                OrganizationQuery.builder()
//                        .types(ImmutableSet.of(
//                                OrganizationType.District,
//                                OrganizationType.School
//                        ))
//                        .limit(Integer.MAX_VALUE)
//                        .build()
//        ));
    }

}
