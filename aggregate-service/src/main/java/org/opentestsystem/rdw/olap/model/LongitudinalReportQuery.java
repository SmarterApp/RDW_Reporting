package org.opentestsystem.rdw.olap.model;

import java.util.List;
import java.util.Objects;

import static com.google.common.collect.Lists.newArrayList;

/**
 * Represents query parameters for the Longitudinal repository.
 */
public class LongitudinalReportQuery extends OrganizationTypeQuery {

    private List<GradeYearPair> gradeYearPairs;
    private String subjectCode;

    public String getSubjectCode() {
        return subjectCode;
    }

    public List<GradeYearPair> getGradeYearPairs() {
        return gradeYearPairs == null ? newArrayList() : newArrayList(gradeYearPairs);
    }

    public Builder copy() {
        return builder().copy(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) return true;
        if (o == null || !(o instanceof LongitudinalReportQuery)) return false;
        final LongitudinalReportQuery that = (LongitudinalReportQuery) o;
        return super.equals(that)
                && Objects.equals(subjectCode, that.subjectCode)
                && Objects.equals(gradeYearPairs, that.gradeYearPairs);
    }

    @Override
    public int hashCode() {
        return Objects.hash(super.hashCode(), subjectCode, gradeYearPairs);
    }

    public static class Builder extends OrganizationTypeQuery.Builder<Builder, LongitudinalReportQuery> {
        private List<GradeYearPair> gradeYearPairs;
        private String subjectCode;

        @Override
        LongitudinalReportQuery createInstance() {
            return new LongitudinalReportQuery();
        }

        public LongitudinalReportQuery build() {
            final LongitudinalReportQuery query = super.build();
            query.subjectCode = subjectCode;
            query.gradeYearPairs = gradeYearPairs;
            return query;
        }

        public Builder copy(final LongitudinalReportQuery query) {
            super.copy(query);
            subjectCode = query.getSubjectCode();
            gradeYearPairs = query.getGradeYearPairs();
            return this;
        }

        public Builder subjectCode(final String subjectCode) {
            this.subjectCode = subjectCode;
            return this;
        }

        public Builder gradeYearPairs(final List<GradeYearPair> gradeYearPairs) {
            this.gradeYearPairs = gradeYearPairs;
            return this;
        }
    }
}