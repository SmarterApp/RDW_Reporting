package org.opentestsystem.rdw.olap;

import com.google.common.cache.CacheBuilder;
import com.google.common.cache.CacheBuilderSpec;
import org.opentestsystem.rdw.common.status.StatusConfiguration;
import org.opentestsystem.rdw.reporting.common.jdbc.SecurityParameterProvider;
import org.opentestsystem.rdw.reporting.common.model.Organization;
import org.opentestsystem.rdw.reporting.common.repository.OrganizationRepository;
import org.opentestsystem.rdw.reporting.common.repository.impl.ReportingJdbcOrganizationRepository;
import org.opentestsystem.rdw.reporting.common.sqlbuilder.QueryProvider;
import org.opentestsystem.rdw.reporting.common.sqlbuilder.SqlBuilderConfig;
import org.opentestsystem.rdw.reporting.common.web.WebExecptionHandlerConfiguration;
import org.opentestsystem.rdw.reporting.common.web.security.jwt.JwtWebSecurityConfiguration;
import org.opentestsystem.rdw.utils.YamlPropertiesConfigurator;
import org.springframework.cache.Cache;
import org.springframework.cache.annotation.EnableCaching;
import org.springframework.cache.guava.GuavaCache;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Import;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;

import java.util.concurrent.TimeUnit;

import static org.opentestsystem.rdw.olap.model.AggregateServiceCache.ReportOptions;
import static org.opentestsystem.rdw.olap.model.AggregateServiceCache.ReportOrganizations;

@Configuration
@Import({
        YamlPropertiesConfigurator.class,
        StatusConfiguration.class,
        QueryProvider.class,
        SqlBuilderConfig.class,
        SecurityParameterProvider.class,
        JwtWebSecurityConfiguration.class,
        WebExecptionHandlerConfiguration.class
})
@EnableCaching
public class ApplicationConfiguration {

    @Bean
    public OrganizationRepository repository(final NamedParameterJdbcTemplate template,
                                             final SecurityParameterProvider securityParameterProvider) {
        return new ReportingJdbcOrganizationRepository(template, securityParameterProvider);
    }

    @Bean
    public Cache reportOptions() {
        return new GuavaCache(ReportOptions, CacheBuilder.newBuilder().build());
    }

    @Bean
    public Cache reportOrganizations() {
        return new GuavaCache(ReportOrganizations, CacheBuilder.newBuilder()
                .expireAfterWrite(1, TimeUnit.DAYS)
                .build());
    }

}
