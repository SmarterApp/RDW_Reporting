package org.opentestsystem.rdw.olap.service.impl;

import com.google.common.collect.ImmutableSet;
import org.opentestsystem.rdw.olap.AggregateReportSettings;
import org.opentestsystem.rdw.olap.model.AggregateServiceCache;
import org.opentestsystem.rdw.olap.model.CodedEntity;
import org.opentestsystem.rdw.olap.service.AssessmentTypeService;
import org.opentestsystem.rdw.olap.service.UserAssessmentTypeService;
import org.opentestsystem.rdw.reporting.common.web.security.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.stereotype.Service;

import java.util.Set;

import static com.google.common.collect.ImmutableSet.toImmutableSet;
import static org.opentestsystem.rdw.olap.model.AggregateServicePermission.AggregateRead;

@Service
class DefaultUserAssessmentTypeService implements UserAssessmentTypeService {

    // TODO assessment type should carry this information
    private static final Set<String> InterimAssessmentTypeCodes = ImmutableSet.of("iab", "ica");
    private final AssessmentTypeService service;
    private final AggregateReportSettings settings;

    @Autowired
    DefaultUserAssessmentTypeService(
            final AssessmentTypeService service,
            final AggregateReportSettings settings) {
        this.service = service;
        this.settings = settings;
    }

    @Override
    @Cacheable(AggregateServiceCache.AssessmentTypes)
    public Set<CodedEntity> getAssessmentTypes(final User user) {
        return service.getAssessmentTypes().stream()
                .filter(type ->
                        settings.isStatewideInterimEnabled()
                        || !user.getPermissionScopeByPermissionId(AggregateRead).isStatewide()
                        || !InterimAssessmentTypeCodes.contains(type.getCode().toLowerCase())
                )
                .collect(toImmutableSet());
    }

}
