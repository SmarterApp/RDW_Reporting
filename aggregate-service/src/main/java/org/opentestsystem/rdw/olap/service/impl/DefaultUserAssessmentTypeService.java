package org.opentestsystem.rdw.olap.service.impl;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import org.opentestsystem.rdw.olap.service.AssessmentTypeService;
import org.opentestsystem.rdw.olap.service.UserAssessmentTypeService;
import org.opentestsystem.rdw.reporting.common.configuration.AggregateReportingProperties;
import org.opentestsystem.rdw.reporting.common.model.CodedEntity;
import org.opentestsystem.rdw.reporting.common.security.User;

import static com.google.common.collect.ImmutableList.toImmutableList;
import static org.opentestsystem.rdw.olap.model.AggregateServicePermission.AggregateRead;

@Service
class DefaultUserAssessmentTypeService implements UserAssessmentTypeService {

    private final AssessmentTypeService service;
    private final AggregateReportingProperties aggregateReportingProperties;

    @Autowired
    DefaultUserAssessmentTypeService(
            final AssessmentTypeService service,
            final AggregateReportingProperties aggregateReportingProperties) {
        this.service = service;
        this.aggregateReportingProperties = aggregateReportingProperties;
    }

    @Override
    public List<CodedEntity> getAssessmentTypes(final User user) {
        final List<String> userAssessmentTypeCodes = user.getPermissionScopeByPermissionId(AggregateRead).isStatewide()
                ? aggregateReportingProperties.getStatewideUserAssessmentTypes()
                : aggregateReportingProperties.getAssessmentTypes();

        return service.getAssessmentTypes().stream()
                .filter(type -> userAssessmentTypeCodes.contains(type.getCode()))
                .collect(toImmutableList());
    }

}
