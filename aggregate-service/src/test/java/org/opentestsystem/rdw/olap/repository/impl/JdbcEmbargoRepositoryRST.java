package org.opentestsystem.rdw.olap.repository.impl;

import org.junit.Test;
import org.opentestsystem.rdw.olap.repository.EmbargoRepository;
import org.opentestsystem.rdw.reporting.common.test.CachingTest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Import;
import org.springframework.test.context.jdbc.Sql;

import static org.assertj.core.api.Assertions.assertThat;

@CachingTest
@Import(JdbcEmbargoRepository.class)
public class JdbcEmbargoRepositoryRST extends RepositoryBackedIT {
    @Autowired
    private EmbargoRepository repository;

    @Test
    public void itShouldReturnFalseWhenStateIsNotEmbargoed() {
        assertThat(repository.isStateEmbargoed()).isFalse();
    }

    @Sql(statements = {"INSERT INTO state_embargo (aggregate, migrate_id) VALUES (1, -10)"})
    @Test
    public void itShouldReturnTrueWhenStateIsEmbargoed() {
        assertThat(repository.isStateEmbargoed()).isTrue();
    }

    @Sql(statements = {"INSERT INTO school (id, district_group_id, district_id, school_group_id, name, natural_id, external_id, embargo_enabled, updated, update_import_id, migrate_id) VALUES " +
            "  (-7, -1, -17, -1, 'School-7', 'id-7', 'externalId-7', 1, '2016-08-14 19:05:33.000000', -1, -1), " +
            "  (-8, -1, -18, -1, 'School-8', 'id-8', 'externalId-8', 1, '2016-08-14 19:05:33.000000', -1, -1), " +
            "  (-9, -1, -19, -1, 'School-9', 'id-9', 'externalId-9', 0, '2016-08-14 19:05:33.000000', -1, -1), " +
            "  (-10, -1, -19, -1, 'School-10','id-10', 'externalId-10', 0, '2016-08-14 19:05:33.000000', -1, -1); ",
            "INSERT INTO district (id, name, natural_id, external_id, migrate_id) VALUES " +
                    "  (-17, 'District-7', 'id-7', 'externalId-7', -1), " +
                    "  (-18, 'District-8', 'id-8', 'externalId-8', -1), " +
                    "  (-19, 'District-9', 'id-9', 'externalId-9', -1);"})
    @Test
    public void itShouldReturnEmbargoedDistrictIds() {
        assertThat(repository.findAllEmbargoedDistrictIds()).containsExactlyInAnyOrder(-17L, -18L);
    }
}