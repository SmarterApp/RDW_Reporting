package org.opentestsystem.rdw.olap.repository.impl;

import org.junit.Test;
import org.opentestsystem.rdw.olap.model.CodedEntity;
import org.opentestsystem.rdw.olap.repository.EthnicityRepository;
import org.opentestsystem.rdw.reporting.common.test.CachingTest;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.cache.CacheProperties;
import org.springframework.cache.CacheManager;
import org.springframework.context.annotation.Import;
import org.springframework.test.context.jdbc.Sql;

import static org.assertj.core.api.Assertions.assertThat;

@Import(JdbcEthnicityRepository.class)
@Sql(scripts = {"classpath:OlapEntitiesSetup.sql"})
@CachingTest
public class JdbcEthnicityRepositoryRST extends RepositoryBackedIT {
    private static final Logger logger = LoggerFactory.getLogger(JdbcEthnicityRepository.class);

    @Autowired
    private EthnicityRepository repository;

    @Autowired
    private CacheProperties cacheProperties;

    @Autowired
    private CacheManager cacheManager;

    @Test
    public void itShouldFindAll() {
        logger.warn("Pre Cache Manager Class: {}", cacheManager.getClass());
        logger.warn("Pre Cache Manager names: {}", cacheManager.getCacheNames());
        logger.warn("Pre Cache names {}", cacheProperties.getCacheNames());
        try {
            assertThat(repository.findAll())
                    .usingFieldByFieldElementComparator()
                    .containsExactlyInAnyOrder(
                            CodedEntity.builder().id(-29).code("ethnicity-29").build(),
                            CodedEntity.builder().id(-28).code("ethnicity-28").build()
                    );
        } catch (final Exception e) {}
        logger.warn("Post Cache Manager Class: {}", cacheManager.getClass());
        logger.warn("Post Cache Manager names: {}", cacheManager.getCacheNames());
        logger.warn("Post Cache names {}", cacheProperties.getCacheNames());
    }
}