package org.opentestsystem.rdw.olap.repository.impl;

import org.junit.Test;
import org.opentestsystem.rdw.olap.repository.EthnicityRepository;
import org.opentestsystem.rdw.reporting.common.model.CodedEntity;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Import;
import org.springframework.test.context.jdbc.Sql;

import static org.assertj.core.api.Assertions.assertThat;
import static org.opentestsystem.rdw.olap.model.AggregateServiceCache.Ethnicities;

@Sql(scripts = {"classpath:OlapEntitiesSetup.sql"})
@Import(JdbcEthnicityRepository.class)
public class JdbcEthnicityRepositoryRST extends CachedRepositoryBackedIT {

    @Autowired
    private EthnicityRepository repository;

    @Test
    public void itShouldFindAll() {
        assertThat(repository.findAll())
                .usingFieldByFieldElementComparator()
                .containsExactlyInAnyOrder(
                        CodedEntity.builder().id(-29).code("ethnicity-29").build(),
                        CodedEntity.builder().id(-28).code("ethnicity-28").build(),
                        CodedEntity.builder().id(-27).code("ethnicity-27").build(),
                        CodedEntity.builder().id(-26).code("ethnicity-26").build()
                );
    }

    @Test
    public void findAllShouldBeCached() {
        assertThat(this.cacheManager.getCache(Ethnicities).get("findAll")).isNull();

        repository.findAll();
        assertThat(this.cacheManager.getCache(Ethnicities).get("findAll")).isNotNull();

        cacheConfiguration.clearRepositoryCache();
        assertThat(this.cacheManager.getCache(Ethnicities).get("findAll")).isNull();
    }
}