package org.opentestsystem.rdw.olap.repository.impl;

import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Import;
import org.springframework.test.context.jdbc.Sql;

import java.util.List;
import org.opentestsystem.rdw.olap.repository.LanguageRepository;
import org.opentestsystem.rdw.reporting.common.model.CodedEntity;

import static org.assertj.core.api.Assertions.assertThat;
import static org.opentestsystem.rdw.olap.model.AggregateServiceCache.Languages;

@Import(JdbcLanguageRepository.class)
@Sql(scripts = {"classpath:OlapEntitiesSetup.sql"})
public class JdbcLanguageRepositoryRST extends CachedRepositoryBackedIT {

    @Autowired
    private LanguageRepository repository;

    @Test
    public void itShouldFindAll() {
        final List<CodedEntity> all = repository.findAll();
        assertThat(all).usingFieldByFieldElementComparator().containsExactlyInAnyOrder(
                CodedEntity.builder().id(-21).code("abc").build(),
                CodedEntity.builder().id(-22).code("cba").build(),
                CodedEntity.builder().id(-23).code("a23").build(),
                CodedEntity.builder().id(-24).code("a24").build(),
                CodedEntity.builder().id(-25).code("a25").build()
        );
    }

    @Test
    public void findAllShouldBeCached() {
        assertThat(getCachedValue(Languages, "findAll")).isNull();

        repository.findAll();
        assertThat(getCachedValue(Languages, "findAll")).isNotNull();

        cacheConfiguration.clearRepositoryCache();
        assertThat(getCachedValue(Languages, "findAll")).isNull();
    }
}
