package org.opentestsystem.rdw.olap.repository.impl;

import org.junit.Test;
import org.opentestsystem.rdw.olap.model.Assessment;
import org.opentestsystem.rdw.olap.model.AssessmentQuery;
import org.opentestsystem.rdw.reporting.common.test.CachingTest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Import;
import org.springframework.test.context.jdbc.Sql;

import static com.google.common.collect.Lists.newArrayList;
import static com.google.common.collect.Sets.newHashSet;
import static org.assertj.core.api.Assertions.assertThat;

@Import(JdbcAssessmentRepository.class)
@Sql(scripts = {"classpath:OlapEntitiesSetup.sql"})
@CachingTest
public class JdbcAssessmentRepositoryRST extends RepositoryBackedIT {

    @Autowired
    private JdbcAssessmentRepository repository;

    @Test
    public void itShouldFindAllWhenNoIdFilterSpecified() {
        final AssessmentQuery query = AssessmentQuery.builder().build();
        assertThat(repository.findAll(query)).hasSize(8);
    }

    @Test
    public void itShouldFindAllWithMatchingIdsWhenIdsSpecified() {

        final AssessmentQuery query = AssessmentQuery.builder()
                .ids(newHashSet(-5, -6))
                .build();

        assertThat(repository.findAll(query))
                .usingRecursiveFieldByFieldElementComparator()
                .containsExactlyInAnyOrder(
                        Assessment.builder()
                                .id(-5)
                                .name("asmt-5")
                                .label("asmt-5")
                                .typeCode("ica")
                                .subjectCode("Math")
                                .gradeCode("-5")
                                .schoolYear(1888)
                                .cutPoints(newArrayList(/*TODO*/0, 1000, 2000, 3000, /*TODO*/0))
                                .build(),
                        Assessment.builder()
                                .id(-6)
                                .name("asmt-6")
                                .label("asmt-6")
                                .typeCode("ica")
                                .subjectCode("ELA")
                                .gradeCode("-5")
                                .schoolYear(1888)
                                .cutPoints(newArrayList(/*TODO*/0, 1000, 2000, 3000, /*TODO*/0))
                                .build()
                 );
    }
}