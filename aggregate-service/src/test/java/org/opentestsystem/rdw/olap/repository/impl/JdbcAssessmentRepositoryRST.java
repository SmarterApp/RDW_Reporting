package org.opentestsystem.rdw.olap.repository.impl;

import org.junit.Test;
import org.opentestsystem.rdw.olap.model.Assessment;
import org.opentestsystem.rdw.olap.repository.AssessmentRepository;
import org.opentestsystem.rdw.reporting.common.test.CachingTest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Import;
import org.springframework.test.context.jdbc.Sql;

import java.util.List;

import static com.google.common.collect.Lists.newArrayList;
import static org.assertj.core.api.Assertions.assertThat;

@Import(JdbcAssessmentRepository.class)
@Sql(scripts = {"classpath:OlapEntitiesSetup.sql"})
@CachingTest
public class JdbcAssessmentRepositoryRST extends RepositoryBackedIT {

    @Autowired
    private AssessmentRepository repository;

    @Test
    public void itShouldFindAll() {
        final List<Assessment> actual = repository.findAll();
        assertThat(actual)
                .usingRecursiveFieldByFieldElementComparator()
                .containsExactlyInAnyOrder(
                        assessment(-6)
                                .typeCode("ica")
                                .subjectCode("ELA")
                                .gradeCode("-5")
                                .schoolYear(1888)
                                .build(),
                        assessment(-5)
                                .typeCode("ica")
                                .subjectCode("Math")
                                .gradeCode("-5")
                                .schoolYear(1888)
                                .build(),
                        assessment(-8)
                                .typeCode("ica")
                                .subjectCode("Math")
                                .gradeCode("-4")
                                .schoolYear(1999)
                                .build(),
                        assessment(-18)
                                .name("asmt-8")
                                .label("asmt-8")
                                .typeCode("ica")
                                .subjectCode("Math")
                                .gradeCode("-4")
                                .schoolYear(2000)
                                .build(),
                        assessment(-9)
                                .typeCode("ica")
                                .subjectCode("ELA")
                                .gradeCode("-3")
                                .schoolYear(1888)
                                .build(),
                        assessment(-10)
                                .name("asmt-9-again")
                                .label("asmt-9-again")
                                .typeCode("ica")
                                .subjectCode("ELA")
                                .gradeCode("-3")
                                .schoolYear(1888)
                                .build(),
                        assessment(-11)
                                .typeCode("sum")
                                .subjectCode("ELA")
                                .gradeCode("-3")
                                .schoolYear(1888)
                                .build(),
                        assessment(-12)
                                .name("asmt-iab-12")
                                .label("asmt-iab-12")
                                .typeCode("iab")
                                .subjectCode("ELA")
                                .gradeCode("-3")
                                .schoolYear(1888)
                                .build(),
                        assessment(-13)
                                .name("asmt-iab-13")
                                .label("asmt-iab-13")
                                .typeCode("iab")
                                .subjectCode("ELA")
                                .gradeCode("-3")
                                .schoolYear(1999)
                                .build()
                );
    }

    private Assessment.Builder assessment(final int id) {
        final String idString = Integer.toString(Math.abs(id));
        return Assessment.builder()
                .id(id)
                .name("asmt-" + idString)
                .label("asmt-" + idString)
                .cutPoints(newArrayList(2000, 2300, 2500, 2700, 2800));
    }

}