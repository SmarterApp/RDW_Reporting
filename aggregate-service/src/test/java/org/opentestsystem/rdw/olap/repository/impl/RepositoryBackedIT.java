package org.opentestsystem.rdw.olap.repository.impl;

import org.junit.runner.RunWith;
import org.opentestsystem.rdw.olap.repository.DataSourceConfiguration;
import org.opentestsystem.rdw.reporting.common.configuration.ReportingSystemPropertiesImpl;
import org.opentestsystem.rdw.reporting.common.jdbc.QueryUtils;
import org.opentestsystem.rdw.reporting.common.multitenant.ReportingTenantIdResolver;
import org.opentestsystem.rdw.utils.YamlPropertiesConfigurator;
import org.springframework.boot.autoconfigure.ImportAutoConfiguration;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.EnableConfigurationProperties;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.cloud.autoconfigure.RefreshAutoConfiguration;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.transaction.annotation.Transactional;

@RunWith(SpringRunner.class)
@SpringBootTest(classes = {
        DataSourceConfiguration.class,
        YamlPropertiesConfigurator.class,
        QueryUtils.class,
        RepositoryBackedIT.Config .class
})
@ContextConfiguration(classes = {TestDataSourceConfiguration.class})
@ActiveProfiles("redshift")
@Transactional(transactionManager = "txManager")
@ImportAutoConfiguration(RefreshAutoConfiguration.class)
@EnableConfigurationProperties
public abstract class RepositoryBackedIT {

    @Configuration
    public static class Config {
        @Bean
        ReportingTenantIdResolver tenantIdResolver() {
            return new ReportingTenantIdResolver();
        }

        @Bean
        @ConfigurationProperties("reporting")
        ReportingSystemPropertiesImpl reportingSystemPropertiesResolver() {
            return new ReportingSystemPropertiesImpl();
        }
    }

}
