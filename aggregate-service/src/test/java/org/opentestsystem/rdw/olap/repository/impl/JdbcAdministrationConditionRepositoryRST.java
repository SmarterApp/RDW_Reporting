package org.opentestsystem.rdw.olap.repository.impl;

import org.junit.Test;
import org.opentestsystem.rdw.olap.repository.AdministrationConditionRepository;
import org.opentestsystem.rdw.reporting.common.model.CodedEntity;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Import;
import org.springframework.test.context.jdbc.Sql;

import static org.assertj.core.api.Assertions.assertThat;
import static org.opentestsystem.rdw.olap.model.AggregateServiceCache.AdministrationConditions;

@Import(JdbcAdministrationConditionRepository.class)
@Sql(scripts = {"classpath:OlapEntitiesSetup.sql"})
public class JdbcAdministrationConditionRepositoryRST extends CachedRepositoryBackedIT {

    @Autowired
    private AdministrationConditionRepository repository;

    @Test
    public void itShouldFindAll() {
        assertThat(repository.findAll()).usingFieldByFieldElementComparator().containsExactlyInAnyOrder(
                CodedEntity.builder().id(-99).code("IN").build(),
                CodedEntity.builder().id(-98).code("SD").build(),
                CodedEntity.builder().id(-97).code("NS").build(),
                CodedEntity.builder().id(-96).code("Valid").build()
        );
    }

    @Test
    public void findAllShouldBeCached() {
        assertThat(getCachedValue(AdministrationConditions, "findAll")).isNull();

        repository.findAll();
        assertThat(getCachedValue(AdministrationConditions, "findAll")).isNotNull();

        cacheConfiguration.clearRepositoryCache();
        assertThat(getCachedValue(AdministrationConditions, "findAll")).isNull();
    }
}
