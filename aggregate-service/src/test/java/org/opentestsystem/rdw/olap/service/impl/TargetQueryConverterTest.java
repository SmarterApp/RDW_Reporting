package org.opentestsystem.rdw.olap.service.impl;

import org.junit.Test;
import org.opentestsystem.rdw.olap.model.OrganizationTypeQuery;
import org.opentestsystem.rdw.olap.sqlbuilder.impl.QueryProviderRepositoryHelper;
import org.opentestsystem.rdw.reporting.common.model.DimensionType;
import org.opentestsystem.rdw.reporting.common.model.StudentFilters;
import org.opentestsystem.rdw.reporting.common.model.TargetReportQuery;
import org.opentestsystem.rdw.reporting.common.model.TargetReportQuery.Builder;

import static com.google.common.collect.ImmutableSet.of;
import static org.opentestsystem.rdw.common.model.AssessmentType.SUMMATIVE;
import static org.opentestsystem.rdw.common.model.Subject.MATH;

public class TargetQueryConverterTest extends AbstractQueryConverterTest<TargetReportQuery, Builder> {
    private TargetQueryConverter queryConverter;

    @Override
    protected AbstractQueryConverter createQueryConverterUnderTest(final QueryProviderRepositoryHelper repositoryHelper) {
        queryConverter = new TargetQueryConverter(repositoryHelper);
        return queryConverter;
    }

    @Override
    protected Builder getAggregateReportQueryBuilder() {
        return TargetReportQuery.builder()
                .dimensionType(DimensionType.Overall)
                .assessmentGradeCodes(of("-8"))
                .schoolIds(of(123L))
                .schoolYear(1999)
                .subjectCode(MATH.code())
                .assessmentTypeCode(SUMMATIVE.code());
    }

    @Override
    protected OrganizationTypeQuery.Builder toQueryBuilderWithCommonAttributes(final TargetReportQuery reportQuery,
                                                                               final StudentFilters filters) {
        return AggregateTestUtils.toQueryClaimBuilderWithCommonAttributes(reportQuery, filters);
    }

    @Test(expected = IllegalArgumentException.class)
    public void itShouldFailForQueryWithMultipleGrades() {
        final TargetReportQuery query = getAggregateReportQueryBuilder()
                .assessmentGradeCodes(of("-8", "-7"))
                .build();

        queryConverter.getOrganizationTypeQueryBuilder(query, query.getStudentFilters());
    }
}