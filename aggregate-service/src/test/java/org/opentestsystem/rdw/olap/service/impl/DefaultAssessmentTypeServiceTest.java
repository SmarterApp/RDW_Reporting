package org.opentestsystem.rdw.olap.service.impl;

import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.rdw.olap.AggregateReportSettings;
import org.opentestsystem.rdw.olap.model.CodedEntity;
import org.opentestsystem.rdw.olap.repository.AssessmentTypeRepository;

import java.util.List;

import static com.google.common.collect.Lists.newArrayList;
import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class DefaultAssessmentTypeServiceTest {

    private AssessmentTypeRepository repository;
    private List<CodedEntity> assessmentTypes = newArrayList(
            CodedEntity.builder().id(1).code("ica").build(),
            CodedEntity.builder().id(2).code("iab").build(),
            CodedEntity.builder().id(3).code("sum").build()
    );

    @Before
    public void before() {
        repository = mock(AssessmentTypeRepository.class);
        when(repository.findAll()).thenReturn(assessmentTypes);
    }

    @Test
    public void getAssessmentTypesShouldReturnSummativeWhenEnabled() throws Exception {
        assertThat(service(true).getAssessmentTypes())
                .containsExactlyElementsOf(assessmentTypes);
    }

    @Test
    public void getAssessmentTypesShouldNotReturnSummativeWhenDisabled() throws Exception {
        assertThat(service(false).getAssessmentTypes())
                .containsExactly(assessmentTypes.get(0), assessmentTypes.get(1));
    }

    private DefaultAssessmentTypeService service(final boolean summativeEnabled) {
        final AggregateReportSettings settings = new AggregateReportSettings();
        settings.setSummativeEnabled(summativeEnabled);
        return new DefaultAssessmentTypeService(repository, settings);
    }

}