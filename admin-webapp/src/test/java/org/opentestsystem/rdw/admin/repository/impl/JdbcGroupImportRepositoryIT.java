package org.opentestsystem.rdw.admin.repository.impl;

import com.google.common.collect.ImmutableMap;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.admin.repository.GroupImportRepository;
import org.opentestsystem.rdw.admin.repository.RepositoryIT;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit4.SpringRunner;

import java.util.Map;

import static org.assertj.core.api.Assertions.assertThat;

@RunWith(SpringRunner.class)
@RepositoryIT
@ContextConfiguration(classes = {JdbcGroupImportRepository.class})
@Sql(scripts = {"classpath:integration-test-data.sql"})
@ActiveProfiles("test")
public class JdbcGroupImportRepositoryIT {

    @Autowired
    public GroupImportRepository repository;

    @Autowired
    public NamedParameterJdbcTemplate template;

    @Test
    public void itShouldCreateAnImport() {
        final long importId = repository.create("digest", "batch");

        final Map<String, Object> importMap = template.queryForMap(
                "SELECT * from import where id = :import_id",
                ImmutableMap.of("import_id", importId));

        assertThat(importMap.get("status")).isEqualTo(0);
    }

    @Test
    public void itShouldTriggerAnImport() {
        final long importId = repository.create("digest", "batch");
        repository.setProcessed(importId);

        final Map<String, Object> importMap = template.queryForMap(
                "SELECT * from import where id = :import_id",
                ImmutableMap.of("import_id", importId));

        assertThat(importMap.get("status")).isEqualTo(1);
    }
}