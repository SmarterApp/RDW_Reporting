sql:
  admin:
    findWarehouseImports: >-
      SELECT i.id, i.digest FROM import i limit 10;

  group:
    findAllDistinctSchoolYears: >-
      select distinct sg.school_year
      from student_group sg
        join school sc on sc.id = sg.school_id
      where sg.deleted = 0
        and (1=:statewide or sc.district_group_id in (:district_group_ids) or sc.district_id in (:district_ids) or sc.school_group_id in (:school_group_ids) or sg.school_id in (:school_ids))

    findAllByQuery: >-
      select sg.id,
        sg.name as group_name,
        sc.name as school_name,
        sg.subject_id,
        sg.school_year,
        (select count(*) from student_group_membership sgm where sgm.student_group_id = sg.id) as student_count
      from student_group sg
        join school sc on sc.id = sg.school_id
      where sg.school_id = :school_id
        and sg.deleted = 0
        and (sg.subject_id is null or sg.subject_id in (:subject_ids))
        and sg.school_year = :school_year
        and (1=:statewide or sc.district_group_id in (:district_group_ids) or sc.district_id in (:district_ids) or sc.school_group_id in (:school_group_ids) or sg.school_id in (:school_ids))

    delete: >-
      update student_group sg
        join school s on sg.school_id = s.id
      set sg.deleted = 1,
        sg.update_import_id = :import_id
      where sg.id = :id
        and (1=:statewide or s.district_group_id in (:district_group_ids) or s.district_id in (:district_ids) or s.school_group_id in (:school_group_ids) or sg.school_id in (:school_ids))

  school:
    findAll: >-
      select name, id, natural_id
      from school
      where (1=:statewide or district_group_id in (:district_group_ids) or district_id in (:district_ids) or school_group_id in (:school_group_ids) or id in (:school_ids))

  status:
    readTest: >-
      SELECT ist.name FROM import_status ist

  student_group_batch:
    create: >-
      INSERT INTO upload_student_group_batch (status, digest, creator, message, filename)
        VALUES (:status, :digest, :creator, :message, :filename)

    findOne: >-
      SELECT * FROM upload_student_group_batch WHERE id=:id

    findOneByDigest: >-
      SELECT * FROM upload_student_group_batch WHERE digest=:digest LIMIT 1

    sqlFindByCreator: >-
      SELECT * FROM upload_student_group_batch WHERE creator=:creator

  import:
    createQuery: >-
      INSERT INTO import (status, content, contentType, digest, batch) VALUES
        (0, 5, 'admin group modification', :digest, :batch)

    triggerQuery: >-
      UPDATE import
      SET status = 1
      WHERE id = :import_id
