# actuator end-points should be served from a different port than the API/web content
management:
  port: 8008
  security:
    enabled: false
  health:
    redis:
      enabled: false

saml:
  # SAML keystore path: file:/some/path/saml.jks
  key-store-file: ${rdw.admin.keystore.path}
  key-store-password: ${rdw.admin.keystore.password}
  private-key-entry-alias: ${rdw.admin.keystore.alias}
  private-key-entry-password: ${rdw.admin.keystore.entry.password}
  idp-metadata-url: ${rdw.admin.idp}
  sp-entity-id: ${rdw.admin.entityId}
  # SAML settings when hosting behind a load balancer or reverse proxy
  load-balance:
    enabled: false
    scheme: https
    hostname:
    context-path: /
    port: 8080
    include-server-port: false

server:
  # tomcat settings for reasonable performance: adjust for tiny/huge configurations
  tomcat:
    max-connections: 0
    max-threads: 4
    accept-count: 10
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,text/csv

spring:
  reporting_datasource:
    url: "\
      jdbc:mysql://${spring.reporting_datasource.url-server:localhost:3306}/${spring.reporting_datasource.url-schema:reporting}\
      ?useSSL=${spring.reporting_datasource.use-ssl:false}\
      &useLegacyDatetimeCode=${spring.reporting_datasource.use-legacy-datetime-code:false}\
      &characterEncoding=${spring.reporting_datasource.character-encoding:utf8}\
      &rewriteBatchedStatements=${spring.reporting_datasource.rewrite-batched-statements:true}\
      "
    username: root
    password:
    testWhileIdle: true
    validationQuery: SELECT 1
    driverClassName: com.mysql.jdbc.Driver
    initialize: false
    maxActive: 10
    initialSize: 4

  warehouse_datasource:
    url: "\
      jdbc:mysql://${spring.warehouse_datasource.url-server:localhost:3306}/${spring.warehouse_datasource.url-schema:warehouse}\
      ?useSSL=${spring.warehouse_datasource.use-ssl:false}\
      &useLegacyDatetimeCode=${spring.warehouse_datasource.use-legacy-datetime-code:false}\
      &characterEncoding=${spring.warehouse_datasource.character-encoding:utf8}\
      "
    username: root
    password:
    testWhileIdle: true
    validationQuery: SELECT 1
    driverClassName: com.mysql.jdbc.Driver
    initialize: false
    maxActive: 10
    initialSize: 4

  http:
    multipart:
      max-file-size: 500MB
      max-request-size: 500MB

  jackson:
    default-property-inclusion: non_null
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false

  cache:
    type: SIMPLE
    cache-names: permissionsByRole, mergeTranslations

    # Force the (rabbit) queues to be created when posting messages so, even if
    # there are no consumers running, the messages will not get lost. Routing is
    # dynamic based on content but there is no way to do that here so we must
    # explicitly declare all possible output channels here (EXAM, PACKAGE, etc.).
    # The group names must be coordinated with the consumer application configs.
  cloud:
    stream:
      bindings:
        output:
          destination: GROUPS
          group: default

  session:
    store-type: none

# spring auto-configured aws defense
cloud:
  aws:
    # there must be a default region when running locally
    region:
      auto: false
      static: us-west-2
    # disable CloudFormation stuff
    stack:
      auto: false
    credentials:
      instance-profile: false

# Needed for access to S3

# Location of import archive.
archive:
  root: file:///tmp/

permissionservice:
  component: Reporting
  endpoint: ${rdw.permission.service}

app:
  state:
    code: CA

  home-url: /

  # google analytics configuration
  analytics:
    trackingId: ${rdw.admin.analytics.trackingId:}
