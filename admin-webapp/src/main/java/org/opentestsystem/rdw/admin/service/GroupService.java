package org.opentestsystem.rdw.admin.service;

import org.opentestsystem.rdw.admin.model.Group;
import org.opentestsystem.rdw.admin.model.GroupFilterOptions;
import org.opentestsystem.rdw.admin.model.GroupQuery;
import org.opentestsystem.rdw.admin.security.User;
import org.springframework.security.access.prepost.PreAuthorize;

import java.util.Set;

@PreAuthorize("hasAuthority('PERM_GROUP_WRITE')")
public interface GroupService {
    /**
     * Gets a set of groups by a given query.
     * @param user  The user requesting the groups
     * @param query The query to filter the groups by
     * @return  set of groups
     */
    Set<Group> getByQuery(User user, GroupQuery query);

    /**
     * Gets the filter options in which groups can be queried
     * @param user  The user requesting the filter options
     * @return  the filter options
     */
    GroupFilterOptions getFilterOptions(User user);

    /**
     * Deletes the group by id if the user is authorized to do so.
     * @param user  The user updating the group
     * @param id    The group id being deleted
     */
    void delete(User user, long id);
}
