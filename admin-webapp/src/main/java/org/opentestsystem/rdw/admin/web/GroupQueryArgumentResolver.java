package org.opentestsystem.rdw.admin.web;

import org.opentestsystem.rdw.admin.model.GroupQuery;
import org.opentestsystem.rdw.common.model.Subject;
import org.springframework.core.MethodParameter;
import org.springframework.web.bind.support.WebDataBinderFactory;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.method.support.HandlerMethodArgumentResolver;
import org.springframework.web.method.support.ModelAndViewContainer;

import java.util.stream.Collectors;
import java.util.stream.Stream;

import static java.lang.Integer.parseInt;


/**
 * An argument resolve for the group query object.
 */
public class GroupQueryArgumentResolver implements HandlerMethodArgumentResolver {
    @Override
    public boolean supportsParameter(final MethodParameter parameter) {
        return parameter.getParameterType().equals(GroupQuery.class);
    }

    @Override
    public Object resolveArgument(final MethodParameter parameter,
                                  final ModelAndViewContainer mavContainer,
                                  final NativeWebRequest webRequest,
                                  final WebDataBinderFactory binderFactory) throws Exception {
        return GroupQuery.builder()
                .schoolId(parseInt(webRequest.getParameter("schoolId")))
                .schoolYear(parseInt(webRequest.getParameter("schoolYear")))
                .subjects(Stream
                        .of(webRequest.getParameterValues("subject"))
                        .map(x-> {
                            try {
                                return Subject.valueOf(x.toUpperCase());
                            }
                            catch(IllegalArgumentException ignore) {
                                return null;
                            }
                        })
                        .collect(Collectors.toSet()))
                .build();
    }
}
