package org.opentestsystem.rdw.admin.model;

import org.apache.commons.lang.StringUtils;

import java.time.Instant;
import java.util.Objects;

/**
 * A Student Groups Batch
 */
public class StudentGroupBatch {
    private Long id;
    private String digest;
    private ImportStatus status;
    private String creator;
    private Instant created;
    private Instant updated;
    private String message;
    private String filename;

    /**
     * @return system id of the batch
     */
    public Long getId() {
        return id;
    }

    /**
     * @return content digest, as a 32 character hex string
     */
    public String getDigest() {
        return digest;
    }

    /**
     * @return The current processing status
     */
    public ImportStatus getStatus() {
        return status;
    }

    /**
     * @return The user who created this batch
     */
    public String getCreator() {
        return creator;
    }

    /**
     * @return A system processing message, if it exists
     */
    public String getMessage() {
        return message;
    }

    /**
     * @return The creation date
     */
    public Instant getCreated() {
        return created;
    }

    /**
     * @return The last update date
     */
    public Instant getUpdated() {
        return updated;
    }

    /**
     * @return The original upload filename
     */
    public String getFilename() {
        return filename;
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) return true;
        if (!(o instanceof StudentGroupBatch)) return false;

        final StudentGroupBatch that = (StudentGroupBatch) o;
        return (status == that.status) &&
                Objects.equals(id, that.id) &&
                Objects.equals(digest, that.digest) &&
                Objects.equals(created, that.created) &&
                Objects.equals(updated, that.updated) &&
                Objects.equals(creator, that.creator) &&
                Objects.equals(message, that.message);
    }

    @Override
    public int hashCode() {
        return Objects.hash(StudentGroupBatch.class, id, status, digest, created, creator, updated, message);
    }

    public Builder copy() {
        return builder().copy(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder {
        private Long id;
        private String digest;
        private ImportStatus status;
        private String creator;
        private Instant created;
        private Instant updated;
        private String message;
        private String filename;

        public StudentGroupBatch build() {
            final StudentGroupBatch studentGroupBatch = new StudentGroupBatch();
            studentGroupBatch.id = id;
            studentGroupBatch.digest = digest;
            studentGroupBatch.status = status;
            studentGroupBatch.creator = creator;
            studentGroupBatch.created = created;
            studentGroupBatch.updated = updated;
            studentGroupBatch.message = message;
            studentGroupBatch.filename = filename;
            return studentGroupBatch;
        }

        public Builder copy(final StudentGroupBatch studentGroupBatch) {
            this.id = studentGroupBatch.id;
            this.digest = studentGroupBatch.digest;
            this.status = studentGroupBatch.status;
            this.creator = studentGroupBatch.creator;
            this.created = studentGroupBatch.created;
            this.updated = studentGroupBatch.updated;
            this.message = studentGroupBatch.message;
            this.filename = studentGroupBatch.filename;
            return this;
        }

        public Builder id(final Long id) {
            this.id = id;
            return this;
        }

        public Builder digest(final String digest) {
            this.digest = digest;
            return this;
        }

        public Builder status(final ImportStatus status) {
            this.status = status;
            return this;
        }

        public Builder creator(final String creator) {
            this.creator = creator;
            return this;
        }

        public Builder created(final Instant created) {
            this.created = created;
            return this;
        }

        public Builder updated(final Instant updated) {
            this.updated = updated;
            return this;
        }

        public Builder message(final String message) {
            this.message = message;
            return this;
        }

        public Builder filename(final String filename) {
            this.filename = StringUtils.abbreviateMiddle(filename, "...", 255);
            return this;
        }
    }
}
