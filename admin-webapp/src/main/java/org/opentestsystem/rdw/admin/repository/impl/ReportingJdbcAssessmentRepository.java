package org.opentestsystem.rdw.admin.repository.impl;

import org.opentestsystem.rdw.admin.model.AssessmentQuery;
import org.opentestsystem.rdw.admin.repository.AssessmentRepository;
import org.opentestsystem.rdw.reporting.common.jdbc.Assessments;
import org.opentestsystem.rdw.reporting.common.model.Assessment;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Collection;

/**
 *  JDBC implementation of an AssessmentRepository.
 */
@Repository
class ReportingJdbcAssessmentRepository implements AssessmentRepository {

    @Value("${sql.assessment.reporting.findAll}")
    private String findAllQuery;

    private final NamedParameterJdbcTemplate template;

    public ReportingJdbcAssessmentRepository(@Qualifier("reportingJdbcTemplate") final NamedParameterJdbcTemplate template) {
        this.template = template;
    }

    @Override
    public Collection<Assessment> findAll(final AssessmentQuery query) {
        return template.query(
                findAllQuery,
                queryParams(query),
                (row, rowNum) -> mapAssessment(row));
    }

    private MapSqlParameterSource queryParams(final AssessmentQuery query) {
        return new MapSqlParameterSource()
                .addValue("label_query", query.getLabel())
                .addValue("limit", query.getLimit());
    }

    private Assessment mapAssessment(final ResultSet resultSet) throws SQLException {
        final Assessment.Builder builder =  Assessment.builder()
                .name(resultSet.getString("name"));
        return Assessments.map(resultSet, builder).build();
    }
}
