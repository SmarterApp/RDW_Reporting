package org.opentestsystem.rdw.reporting.group;

import com.google.common.collect.ImmutableSet;
import org.opentestsystem.rdw.reporting.common.web.security.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import javax.validation.constraints.NotNull;
import java.util.NoSuchElementException;
import java.util.Set;

import static org.opentestsystem.rdw.reporting.common.security.ReportingPermission.GroupPiiRead;

@Service
public class DefaultGroupService implements GroupService {

    private final GroupRepository groupRepository;

    @Autowired
    public DefaultGroupService(@NotNull final GroupRepository groupRepository) {
        this.groupRepository = groupRepository;
    }

    public Set<Group> getGroups(@NotNull final User user) {
        if (!user.getPermissionsById().containsKey(GroupPiiRead)) {
            return ImmutableSet.of();
        }
        return ImmutableSet.copyOf(groupRepository.findAllForUsername(user.getUsername()));
    }

    public Group getGroup(@NotNull final User user, final int groupId) {
        if (!user.getPermissionsById().containsKey(GroupPiiRead)) {
            return Group.builder().build();
        }
        final Group group = groupRepository.findOneByUsernameAndId(user.getUsername(), groupId);
        if (group == null) {
            throw new NoSuchElementException(String.format("%s did not have access to %d, or no group with that id exists", user.getUsername(), groupId));
        }
        return group;
    }
}
