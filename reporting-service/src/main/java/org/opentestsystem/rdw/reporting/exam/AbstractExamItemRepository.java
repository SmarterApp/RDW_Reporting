package org.opentestsystem.rdw.reporting.exam;

import com.google.common.collect.ImmutableMap;
import org.opentestsystem.rdw.reporting.common.jdbc.SecurityParameterProvider;
import org.opentestsystem.rdw.reporting.common.model.ExamItem;
import org.opentestsystem.rdw.reporting.common.model.ExamItems;
import org.opentestsystem.rdw.security.Permission;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;

import javax.validation.constraints.NotNull;
import java.util.List;
import java.util.Map;

public abstract class AbstractExamItemRepository<T extends AbstractExamSearch> implements ExamItemRepository<T> {

    private final NamedParameterJdbcTemplate template;
    private final SecurityParameterProvider securityParameterProvider;
    private final String findAllExamItemScoresForAssessmentQuery;

    protected AbstractExamItemRepository(
            @NotNull final NamedParameterJdbcTemplate template,
            @NotNull final SecurityParameterProvider securityParameterProvider,
            @NotNull final String findAllExamItemScoresForAssessmentQuery) {
        this.template = template;
        this.securityParameterProvider = securityParameterProvider;
        this.findAllExamItemScoresForAssessmentQuery = findAllExamItemScoresForAssessmentQuery;
    }

    abstract protected Map<String, Object> getParameters(final T search);

    @Override
    public List<ExamItem> findAllExamItemScoresForAssessment(
            @NotNull final Map<String, Permission> permissions,
            @NotNull final T search) {

        return template.query(
                findAllExamItemScoresForAssessmentQuery,
                ImmutableMap.<String, Object>builder()
                        .putAll(securityParameterProvider.getSecurityParameters(permissions))
                        .put("school_year", search.getSchoolYear())
                        .put("assessment_id", search.getAssessmentId())
                        .putAll(getParameters(search))
                        .build(),
                (row, index) -> ExamItems.map(row)
        );
    }

}
