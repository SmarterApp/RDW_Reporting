package org.opentestsystem.rdw.reporting.assessment;

import java.time.LocalDate;
import java.util.List;

import static com.google.common.collect.Lists.newArrayList;

public class Percentile {
    private int assessmentId;
    private LocalDate startDate;
    private LocalDate endDate;
    private int count;
    private int mean;
    private int standardDeviation;
    private List<PercentileScore> scores;

    public int getAssessmentId() {
        return assessmentId;
    }

    public LocalDate getStartDate() {
        return startDate;
    }

    public LocalDate getEndDate() {
        return endDate;
    }

    public int getCount() {
        return count;
    }

    public int getMean() {
        return mean;
    }

    public int getStandardDeviation() {
        return standardDeviation;
    }

    public List<PercentileScore> getScores() {
        return scores == null ? newArrayList() : newArrayList(scores);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder {
        private int assessmentId;
        private LocalDate startDate;
        private LocalDate endDate;
        private int count;
        private int mean;
        private int standardDeviation;
        private List<PercentileScore> percentileScores = newArrayList();

        public Percentile build() {
            final Percentile percentile = new Percentile();
            percentile.assessmentId = assessmentId;
            percentile.startDate = startDate;
            percentile.endDate = endDate;
            percentile.count = count;
            percentile.mean = mean;
            percentile.standardDeviation = standardDeviation;
            percentile.scores = percentileScores;
            return percentile;
        }

        public Builder assessmentId(final int assessmentId) {
            this.assessmentId = assessmentId;
            return this;
        }

        public Builder startDate(final LocalDate startDate) {
            this.startDate = startDate;
            return this;
        }

        public Builder endDate(final LocalDate endDate) {
            this.endDate = endDate;
            return this;
        }

        public Builder count(final int count) {
            this.count = count;
            return this;
        }

        public Builder mean(final int mean) {
            this.mean = mean;
            return this;
        }

        public Builder standardDeviation(final int standardDeviation) {
            this.standardDeviation = standardDeviation;
            return this;
        }

        public Builder percentileScore(final PercentileScore percentileScore) {
            this.percentileScores.add(percentileScore);
            return this;
        }

        public Builder percentileScores(final List<PercentileScore> percentileScores) {
            this.percentileScores = percentileScores == null ? newArrayList() : percentileScores;
            return this;
        }
    }
}