package org.opentestsystem.rdw.reporting.exam.student;

import org.opentestsystem.rdw.reporting.common.model.Student;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.dao.EmptyResultDataAccessException;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;

import javax.validation.constraints.NotNull;

@Repository("examStudentRepository")
public class JdbcStudentRepository implements StudentRepository {

    private final NamedParameterJdbcTemplate template;

    @Value("${sql.student.findOneById}")
    private String findOneByIdQuery;

    @Autowired
    JdbcStudentRepository(final NamedParameterJdbcTemplate template) {
        this.template = template;
    }

    @Override
    public Student findOneById(@NotNull final long studentId) {
        try {
            return template.queryForObject(
                    findOneByIdQuery,
                    new MapSqlParameterSource("studentId", studentId),
                    (row, index) -> Student.builder()
                            .id(row.getLong("id"))
                            .ssid(row.getString("ssid"))
                            .firstName(row.getString("first_name"))
                            .lastName(row.getString("last_or_surname"))
                            .build()
            );
        } catch (final EmptyResultDataAccessException exception) {
            return null;
        }
    }
}
