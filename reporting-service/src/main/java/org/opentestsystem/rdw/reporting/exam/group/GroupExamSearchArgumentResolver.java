package org.opentestsystem.rdw.reporting.exam.group;

import com.google.common.collect.ImmutableList;
import org.apache.commons.lang.ArrayUtils;
import org.springframework.core.MethodParameter;
import org.springframework.web.bind.support.WebDataBinderFactory;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.method.support.HandlerMethodArgumentResolver;
import org.springframework.web.method.support.ModelAndViewContainer;

class GroupExamSearchArgumentResolver implements HandlerMethodArgumentResolver {

    @Override
    public boolean supportsParameter(final MethodParameter parameter) {
        return parameter.getParameterType().equals(GroupExamSearch.class);
    }

    @Override
    public Object resolveArgument(
            final MethodParameter parameter,
            final ModelAndViewContainer mavContainer,
            final NativeWebRequest request,
            final WebDataBinderFactory binderFactory) {

        final GroupExamSearch.Builder search = GroupExamSearch.builder();

        final String schoolYear = request.getParameter("schoolYear");
        if (schoolYear != null) {
            search.schoolYear(Integer.parseInt(schoolYear));
        }

        final String assessmentId = request.getParameter("assessmentId");
        if (assessmentId != null) {
            search.assessmentId(Integer.parseInt(assessmentId));
        }

        final String groupId = request.getParameter("groupId");
        if (groupId != null) {
            search.groupId(Long.parseLong(groupId));
        }

        final String userGroupId = request.getParameter("userGroupId");
        if (userGroupId != null) {
            search.userGroupId(Long.parseLong(userGroupId));
        }

        final String[] itemTypes = ArrayUtils.nullToEmpty(request.getParameterValues("types"));
        search.itemTypes(ImmutableList.copyOf(itemTypes));

        return search.build();
    }

}