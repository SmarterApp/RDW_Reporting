package org.opentestsystem.rdw.reporting.exam.group;

import com.google.common.collect.ImmutableList;
import com.google.common.primitives.Ints;
import com.google.common.primitives.Longs;
import org.apache.commons.lang3.ArrayUtils;
import org.opentestsystem.rdw.reporting.common.model.UserGroupId;
import org.springframework.core.MethodParameter;
import org.springframework.web.bind.support.WebDataBinderFactory;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.method.support.HandlerMethodArgumentResolver;
import org.springframework.web.method.support.ModelAndViewContainer;

class GroupExamSearchArgumentResolver implements HandlerMethodArgumentResolver {

    @Override
    public boolean supportsParameter(final MethodParameter parameter) {
        return parameter.getParameterType().equals(GroupExamSearch.class);
    }

    @Override
    public Object resolveArgument(
            final MethodParameter parameter,
            final ModelAndViewContainer mavContainer,
            final NativeWebRequest request,
            final WebDataBinderFactory binderFactory) {

        return GroupExamSearch.builder()
                .itemTypes(ImmutableList.copyOf(ArrayUtils.nullToEmpty(request.getParameterValues("types"))))
                .schoolYear(tryToParseInt(request.getParameter("schoolYear")))
                .assessmentId(tryToParseInt(request.getParameter("assessmentId")))
                .groupId(new UserGroupId(tryToParseLong(request.getParameter("groupId")), tryToParseLong(request.getParameter("userGroupId"))))
                .build();

    }

    private static Long tryToParseLong(final String value) {
        if (value == null) return null;
        return Longs.tryParse(value);
    }

    private static Integer tryToParseInt(final String value) {
        if (value == null) return null;
        return Ints.tryParse(value);
    }
}