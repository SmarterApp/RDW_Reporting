package org.opentestsystem.rdw.reporting.group;

import com.google.common.collect.ImmutableSet;
import org.opentestsystem.rdw.reporting.common.model.School;
import org.opentestsystem.rdw.reporting.student.Student;

import java.util.Set;

/**
 * Represents a teacher created group.
 */
public class TeacherGroup {

    private Long id;
    private String name;
    private long schoolId;
    private School school;
    private Set<String> subjectCodes;
    private Set<Long> studentIds;
    private Set<Student> students;

    /**
     * @return the group's entity ID
     */
    public Long getId() {
        return id;
    }

    /**
     * @return the group's name
     */
    public String getName() {
        return name;
    }

    /**
     * @return the group's school entity ID
     */
    public long getSchoolId() {
        return schoolId;
    }

    /**
     * @return the group's school.
     */
    public School getSchool() {
        return school;
    }

    /**
     * @return the group's subject codes
     */
    public Set<String> getSubjectCodes() {
        return subjectCodes;
    }

    /**
     * @return the group's student IDs
     */
    public Set<Long> getStudentIds() {
        return studentIds;
    }

    /**
     * @return the group's students
     */
    public Set<Student> getStudents() {
        return students;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder {

        private Long id;
        private String name;
        private long schoolId;
        private School school;
        private Set<String> subjectCodes;
        private Set<Long> studentIds;
        private Set<Student> students;

        public Builder id(final Long id) {
            this.id = id;
            return this;
        }

        public Builder name(final String name) {
            this.name = name;
            return this;
        }

        public Builder schoolId(final long schoolId) {
            this.schoolId = schoolId;
            return this;
        }

        public Builder school(final School school) {
            this.school = school;
            return this;
        }

        public Builder subjectCodes(final Set<String> subjectCodes) {
            this.subjectCodes = subjectCodes;
            return this;
        }

        public Builder studentIds(final Set<Long> studentIds) {
            this.studentIds = studentIds;
            return this;
        }

        public Builder students(final Set<Student> students) {
            this.students = students;
            return this;
        }

        public TeacherGroup build() {
            final TeacherGroup group = new TeacherGroup();
            group.id = id;
            group.name = name;
            group.schoolId = schoolId;
            group.school = school;
            group.subjectCodes = safeSetCopy(subjectCodes);
            group.studentIds = safeSetCopy(studentIds);
            group.students = safeSetCopy(students);
            return group;
        }

        private <T> ImmutableSet<T> safeSetCopy(final Set<T> source) {
            return source != null ? ImmutableSet.copyOf(source) : ImmutableSet.of();
        }


    }

}
