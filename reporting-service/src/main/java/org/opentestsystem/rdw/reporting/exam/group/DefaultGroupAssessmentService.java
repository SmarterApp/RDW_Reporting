package org.opentestsystem.rdw.reporting.exam.group;

import com.google.common.collect.ImmutableList;
import org.opentestsystem.rdw.reporting.common.model.Assessment;
import org.opentestsystem.rdw.reporting.common.model.Exam;
import org.opentestsystem.rdw.reporting.common.web.security.User;
import org.opentestsystem.rdw.reporting.exam.GroupAssessment;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import javax.validation.constraints.NotNull;
import java.util.List;
import java.util.Optional;

import static org.opentestsystem.rdw.reporting.common.security.ReportingPermission.GroupPiiRead;

@Service
class DefaultGroupAssessmentService implements GroupAssessmentService {

    private final GroupAssessmentRepository repository;
    private final GroupExamService examService;

    @Autowired
    DefaultGroupAssessmentService(
            final GroupAssessmentRepository repository,
            final GroupExamService examService) {
        this.repository = repository;
        this.examService = examService;
    }

    public Optional<GroupAssessment> getLatestAssessment(@NotNull final User user, @NotNull final GroupAssessmentSearch search) {
        final Assessment assessment = repository.findLatest(user.getPermissionsById().get(GroupPiiRead).getScope(), search);
        if (assessment == null) {
            return Optional.empty();
        }

        final GroupExamSearch examSearch = GroupExamSearch.builder()
                .schoolYear(search.getSchoolYear())
                .groupGrant(search.getGroupGrant())
                .assessmentId(assessment.getId())
                .build();

        final List<Exam> exams = examService.getExams(user, examSearch);
        return Optional.of(new GroupAssessment(assessment, exams));
    }

    public List<Assessment> getAllAssessments(@NotNull final User user, @NotNull final GroupAssessmentSearch search) {
        return ImmutableList.copyOf(repository.findAll(user.getPermissionsById().get(GroupPiiRead).getScope(), search));
    }

}
