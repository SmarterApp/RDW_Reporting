package org.opentestsystem.rdw.reporting.filter;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import javax.validation.constraints.NotNull;
import org.opentestsystem.rdw.reporting.elas.ElasService;
import org.opentestsystem.rdw.reporting.ethnicity.EthnicityService;
import org.opentestsystem.rdw.reporting.gender.GenderService;
import org.opentestsystem.rdw.reporting.language.LanguageService;
import org.opentestsystem.rdw.reporting.militaryconnected.MilitaryConnectedService;
import org.opentestsystem.rdw.reporting.schoolyear.SchoolYearService;
import org.opentestsystem.rdw.reporting.subject.SubjectService;

@Service
public class DefaultExamFilterOptionService implements ExamFilterOptionService {

    private final SchoolYearService schoolYearService;
    private final EthnicityService ethnicityService;
    private final GenderService genderService;
    private final ElasService elasService;
    private final LanguageService languageService;
    private final MilitaryConnectedService militaryConnectedService;
    private final SubjectService subjectService;

    @Autowired
    public DefaultExamFilterOptionService(
            @NotNull final SchoolYearService schoolYearService,
            @NotNull final EthnicityService ethnicityService,
            @NotNull final GenderService genderService,
            @NotNull final ElasService elasService,
            @NotNull final LanguageService languageService,
            @NotNull final MilitaryConnectedService militaryConnectedService,
            @NotNull final SubjectService subjectService) {
        this.schoolYearService = schoolYearService;
        this.ethnicityService = ethnicityService;
        this.genderService = genderService;
        this.elasService = elasService;
        this.languageService = languageService;
        this.militaryConnectedService = militaryConnectedService;
        this.subjectService = subjectService;
    }

    @Override
    public ExamFilterOptions getExamFilterOptions() {
        return ExamFilterOptions.builder()
                .schoolYears(schoolYearService.getSchoolYears())
                .ethnicities(ethnicityService.getEthnicityCodes())
                .genders(genderService.getGenderCodes())
                .elasCodes(elasService.getElasCodes())
                .languages(languageService.getLanguageCodes())
                .militaryConnectedCodes(militaryConnectedService.getMilitaryConnectedCodes())
                .subjects(subjectService.getSubjectCodes())
                .build();
    }

}
