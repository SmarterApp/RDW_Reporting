package org.opentestsystem.rdw.reporting;

import org.opentestsystem.rdw.common.status.StatusConfiguration;
import org.opentestsystem.rdw.reporting.common.jdbc.SecurityParameterProvider;
import org.opentestsystem.rdw.reporting.common.repository.DataSourceConfiguration;
import org.opentestsystem.rdw.reporting.common.repository.OrganizationRepository;
import org.opentestsystem.rdw.reporting.common.repository.impl.ReportingJdbcOrganizationRepository;
import org.opentestsystem.rdw.reporting.common.web.WebExecptionHandlerConfiguration;
import org.opentestsystem.rdw.reporting.common.web.security.SecurityConfiguration;
import org.opentestsystem.rdw.reporting.common.web.security.jwt.JwtWebSecurityConfiguration;
import org.opentestsystem.rdw.security.repository.JdbcOrganizationRepository;
import org.opentestsystem.rdw.utils.ResourceLoaderConfiguration;
import org.opentestsystem.rdw.utils.YamlPropertiesConfigurator;
import org.springframework.boot.actuate.autoconfigure.EndpointAutoConfiguration;
import org.springframework.boot.context.properties.EnableConfigurationProperties;
import org.springframework.cache.annotation.EnableCaching;
import org.springframework.cloud.netflix.zuul.EnableZuulProxy;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Import;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;

@Configuration
@EnableCaching
@EnableZuulProxy
@Import({
        ResourceLoaderConfiguration.class,
        EndpointAutoConfiguration.class,
        StatusConfiguration.class,
        YamlPropertiesConfigurator.class,
        DataSourceConfiguration.class,
        SecurityConfiguration.class, // TODO remove when adding qualified package to reporting-service
        JdbcOrganizationRepository.class, // TODO remove when adding qualified package to reporting-service
        SecurityParameterProvider.class,
        WebExecptionHandlerConfiguration.class,
        JwtWebSecurityConfiguration.class
})
@EnableGlobalMethodSecurity(prePostEnabled = true)
@EnableConfigurationProperties(ApplicationProperties.class)
public class ApplicationConfiguration {

    @Bean
    public OrganizationRepository repository(final NamedParameterJdbcTemplate template,
                                             final SecurityParameterProvider securityParameterProvider) {
        return new ReportingJdbcOrganizationRepository(template, securityParameterProvider);
    }

}

