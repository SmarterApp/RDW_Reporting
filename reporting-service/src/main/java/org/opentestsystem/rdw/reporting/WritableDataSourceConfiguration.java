package org.opentestsystem.rdw.reporting;

import org.opentestsystem.rdw.multitenant.TenantKeyResolver;
import org.opentestsystem.rdw.multitenant.datasource.DataSourceElements;
import org.opentestsystem.rdw.multitenant.datasource.DataSourceElementsProperties;
import org.opentestsystem.rdw.multitenant.datasource.DataSourceElementsResolver;
import org.opentestsystem.rdw.multitenant.datasource.TenantDynamicRoutingDataSource;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.cloud.context.config.annotation.RefreshScope;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.jdbc.datasource.DataSourceTransactionManager;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.annotation.EnableTransactionManagement;

import javax.sql.DataSource;

@Configuration
@EnableTransactionManagement
public class WritableDataSourceConfiguration {

    /**
     * DataSourceProperties
     *
     * @return DataSourceProperties
     */
    @Bean(name = "writableDataSourceElementsProperties")
    @ConfigurationProperties("datasources.reporting_rw")
    @RefreshScope
    public DataSourceElementsProperties dataSourceElementsProperties() {
        return new DataSourceElementsProperties();
    }

    /**
     * writable DataSourceElementsResolver
     *
     * @param tenantIdResolver             id resolver
     * @param dataSourceElementsProperties config properties
     * @return DataSourceElementsResolver
     */
    @Bean(name = "writableDataSourceElementsResolver")
    @RefreshScope
    public DataSourceElementsResolver writableDataSourceElementsResolver(TenantKeyResolver tenantIdResolver,
                                                                         @Qualifier("writableDataSourceElementsProperties") DataSourceElementsProperties dataSourceElementsProperties) {
        return new DataSourceElementsResolver(tenantIdResolver, dataSourceElementsProperties);
    }

    /**
     * Data source for the data warehouse.
     *
     * @param dataSourceElementsResolver reporting DataSourceElementsResolver
     * @param tenantKeyResolver          reporting tenant id resolver
     * @return DataSource
     */
    @Bean(name = "writableDataSource")
    @RefreshScope
    public DataSource dataSource(@Qualifier("writableDataSourceElementsResolver") DataSourceElements dataSourceElementsResolver,
                                 TenantKeyResolver tenantKeyResolver) {
        return new TenantDynamicRoutingDataSource(dataSourceElementsResolver, tenantKeyResolver);
    }

    /**
     * The jdbc template used for reading from the data warehouse.
     *
     * @return DataSource
     */
    @Bean
    public NamedParameterJdbcTemplate writableJdbcTemplate(
            @Qualifier("writableDataSource") final DataSource dataSource) {
        return new NamedParameterJdbcTemplate(dataSource);
    }

    /**
     * @return The reporting transaction manager
     */
    @Bean
    public PlatformTransactionManager writableDatasourceTransactionManager(
            @Qualifier("writableDataSource") final DataSource dataSource) {
        return new DataSourceTransactionManager(dataSource);
    }

}
