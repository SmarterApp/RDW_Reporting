package org.opentestsystem.rdw.reporting.group;


import org.opentestsystem.rdw.reporting.common.security.PermissionSource;
import org.opentestsystem.rdw.reporting.common.security.ReportingPermission;
import org.opentestsystem.rdw.security.Permission;
import org.opentestsystem.rdw.security.PermissionScope;
import org.springframework.stereotype.Service;

/**
 * Grants access to users with only school-level PII and Group PII access
 */
@Service
class DefaultTeacherCreatedGroupAuthorizationService implements TeacherCreatedGroupAuthorizationService {

    @Override
    public boolean isAuthorized(final PermissionSource permissionSource) {
        final Permission individualPermission = permissionSource.getPermissionsById().get(ReportingPermission.IndividualPiiRead);
        final Permission groupPermission = permissionSource.getPermissionsById().get(ReportingPermission.GroupPiiRead);
        return (individualPermission == null || isSchoolLevel(individualPermission.getScope()))
                && (groupPermission == null || isSchoolLevel(groupPermission.getScope()));
    }

    /**
     * Checks if the provided permission scope is limited to school level access
     *
     * @param permissionScope the permission scope to check
     * @return <code>true</code> if the provided permission scope is limited to schools
     */
    boolean isSchoolLevel(final PermissionScope permissionScope) {
        return !permissionScope.isStatewide()
                && permissionScope.getDistrictGroupIds().isEmpty()
                && permissionScope.getDistrictIds().isEmpty()
                && permissionScope.getInstitutionGroupIds().isEmpty()
                && !permissionScope.getInstitutionIds().isEmpty();
    }

}
