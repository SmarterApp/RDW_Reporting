package org.opentestsystem.rdw.reporting.student;

import com.google.common.collect.ImmutableMap;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;

import java.util.Collection;
import java.util.Map;
import java.util.Set;

import static com.google.common.collect.Maps.newHashMap;
import static com.google.common.collect.Sets.newHashSet;

@Repository
public class JdbcStudentEthnicityRepository implements StudentEthnicityRepository {

    private final NamedParameterJdbcTemplate template;

    @Value("${sql.ethnicity.findEthnicityCodesByStudentIds}")
    private String findEthnicityCodesByStudentIdsQuery;

    JdbcStudentEthnicityRepository(final NamedParameterJdbcTemplate template) {
        this.template = template;
    }

    @Override
    public Map<Long, Set<String>> findEthnicityCodesByStudentIds(final Collection<Long> studentIds) {
        if (studentIds == null || studentIds.isEmpty()) return ImmutableMap.of();

        final Map<Long, Set<String>> ethnicityCodesByStudentId = newHashMap();
        template.query(
                findEthnicityCodesByStudentIdsQuery,
                new MapSqlParameterSource("student_ids", studentIds),
                row -> {
                    ethnicityCodesByStudentId.computeIfAbsent(row.getLong("student_id"),
                            id -> newHashSet()).add(row.getString("ethnicity_code"));

                });
        return ethnicityCodesByStudentId;
    }
}