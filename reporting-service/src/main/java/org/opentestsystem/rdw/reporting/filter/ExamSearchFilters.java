package org.opentestsystem.rdw.reporting.filter;

import org.opentestsystem.rdw.reporting.common.model.StudentFilter;

import java.util.List;

import static org.opentestsystem.rdw.reporting.common.util.CollectionUtils.safeImmutableOf;

/**
 * Represents all of the possible attributes a reporting client can filter exams on
 */
public class ExamSearchFilters {

    private List<Integer> schoolYears;
    private List<StudentFilter> studentFilters;
    private List<String> subjects;

    private ExamSearchFilters() {}

    /**
     * @return all school years available for searching and filtering
     */
    public List<Integer> getSchoolYears() {
        return schoolYears;
    }

    /**
     * @return all enabled student filters
     */
    public List<StudentFilter> getStudentFilters() {
        return studentFilters;
    }

    /**
     * @return all subject codes for searching and filtering
     */
    public List<String> getSubjects() {
        return subjects;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder {
        private List<Integer> schoolYears;
        private List<StudentFilter> studentFilters;
        private List<String> subjects;

        private Builder() {
        }

        public Builder schoolYears(final List<Integer> schoolYears) {
            this.schoolYears = safeImmutableOf(schoolYears);
            return this;
        }

        public Builder studentFilters(final List<StudentFilter> studentFilters) {
            this.studentFilters = safeImmutableOf(studentFilters);
            return this;
        }

        public Builder subjects(final List<String> subjects) {
            this.subjects = safeImmutableOf(subjects);
            return this;
        }

        public ExamSearchFilters build() {
            final ExamSearchFilters options = new ExamSearchFilters();
            options.schoolYears = schoolYears;
            options.studentFilters = studentFilters;
            options.subjects = subjects;
            return options;
        }
    }
}
