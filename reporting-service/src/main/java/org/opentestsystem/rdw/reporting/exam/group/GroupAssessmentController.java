package org.opentestsystem.rdw.reporting.exam.group;

import org.opentestsystem.rdw.reporting.common.model.Assessment;
import org.opentestsystem.rdw.reporting.common.web.security.User;
import org.opentestsystem.rdw.reporting.exam.GroupAssessment;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.context.config.ResourceNotFoundException;
import org.springframework.http.HttpStatus;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;
import java.util.NoSuchElementException;

@RestController
class GroupAssessmentController {

    private final GroupAssessmentService service;

    @Autowired
    GroupAssessmentController(final GroupAssessmentService service) {
        this.service = service;
    }

    @GetMapping("/groups/{groupId}/latestassessment")
    public GroupAssessment getLatestGroupAssessment(
            @AuthenticationPrincipal final User user,
            final GroupAssessmentSearch search) {

        return service.getLatestAssessment(user, search)
                .orElseThrow(NoSuchElementException::new);
    }

    @GetMapping("/groups/{groupId}/assessments")
    public List<Assessment> getGroupAssessments(
            @AuthenticationPrincipal final User user,
            final GroupAssessmentSearch search) {

        return service.getAllAssessments(user, search);
    }

    @ExceptionHandler({
            ResourceNotFoundException.class,
            NoSuchElementException.class
    })
    @ResponseStatus(HttpStatus.NOT_FOUND)
    public void ignore() {
    }

}
