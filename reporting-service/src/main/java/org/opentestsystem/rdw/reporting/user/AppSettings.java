package org.opentestsystem.rdw.reporting.user;

import org.opentestsystem.rdw.reporting.ApplicationProperties;
import org.opentestsystem.rdw.reporting.common.configuration.TenantProperties;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.util.List;

@Component
class AppSettings {

    private final ApplicationProperties applicationProperties;
    private final TenantProperties tenantProperties;

    @Autowired
    private AppSettings(final ApplicationProperties applicationProperties,
                        final TenantProperties tenantProperties) {
        this.applicationProperties = applicationProperties;
        this.tenantProperties = tenantProperties;
    }

    /**
     * @return the Iris vendor id passed to the Iris iframe
     */
    public String getIrisVendorId() {
        return applicationProperties.getIris().getVendorId();
    }

    /**
     * @return the Google Analytics tracking ID
     */
    public String getAnalyticsTrackingId() {
        return applicationProperties.getAnalytics().getTrackingId();
    }

    /**
     * @return external link to the Intepretive Guide and Best Practices Guidance
     */
    public String getInterpretiveGuideUrl() {
        return applicationProperties.getExternalLinks().getInterpretiveGuide();
    }

    /**
     * @return external link to the User Guide
     */
    public String getUserGuideUrl() {
        return applicationProperties.getExternalLinks().getUserGuide();
    }

    /**
     * @return minimum year where there is item level response data
     */
    public int getMinItemDataYear() {
        return applicationProperties.getMinItemDataYear();
    }

    /**
     * @return The available report languages
     */
    public List<String> getReportLanguages() {
        return applicationProperties.getReportLanguages();
    }

    /**
     * @return The avialable UI languages
     */
    public List<String> getUiLanguages() {
        return applicationProperties.getUiLanguages();
    }

    /**
     * @return True if transfer access is enabled
     */
    public boolean isTransferAccess() {
        return tenantProperties.isTransferAccessEnabled();
    }

    /**
     * @return True if UI should display norms percentile information
     */
    public boolean isEnablePercentileDisplay() {
        return tenantProperties.isEnablePercentileDisplay();
    }
}
