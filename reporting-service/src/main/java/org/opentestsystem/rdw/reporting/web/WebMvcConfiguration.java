package org.opentestsystem.rdw.reporting.web;

import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer;
import org.springframework.boot.context.embedded.EmbeddedServletContainerCustomizer;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;
import org.springframework.web.servlet.resource.GzipResourceResolver;

@Configuration
public class WebMvcConfiguration extends WebMvcConfigurerAdapter implements EmbeddedServletContainerCustomizer {
    private final static int SecondsInMonth = 3600 * 24 * 30;

    @Override
    public void addResourceHandlers(ResourceHandlerRegistry registry) {
        registry.addResourceHandler("/index.html")
                .addResourceLocations("classpath:static/index.html")
                .setCachePeriod(0);

        registry.addResourceHandler("/landing.html")
                .addResourceLocations("classpath:static/assets/public/landing.html")
                .setCachePeriod(0);

        registry.addResourceHandler("/assets/i18n/**")
                .addResourceLocations("classpath:static/assets/i18n/")
                .setCachePeriod(0);

        registry.addResourceHandler("/**")
                .addResourceLocations("classpath:static/")
                .setCachePeriod(SecondsInMonth)
                .resourceChain(true).addResolver(new GzipResourceResolver());

        registry.addResourceHandler("/assets/public/**")
                .addResourceLocations("classpath:static/assets/public/")
                .setCachePeriod(SecondsInMonth);
    }

    @Override
    public void customize(ConfigurableEmbeddedServletContainer container) {
    }
}