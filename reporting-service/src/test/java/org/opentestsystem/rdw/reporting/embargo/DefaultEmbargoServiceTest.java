package org.opentestsystem.rdw.reporting.embargo;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;
import org.opentestsystem.rdw.reporting.common.security.PermissionSource;
import org.opentestsystem.rdw.reporting.common.security.User;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.ArgumentMatchers.eq;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

@RunWith(MockitoJUnitRunner.class)
public class DefaultEmbargoServiceTest {

    @Mock
    private EmbargoRepository repository;

    private User user;
    private DefaultEmbargoService service;

    @Before
    public void setup() {
        user = User.builderExt()
                .id("userId")
                .username("someone-10@somewhere.com")
                .password("redacted")
                .build();

        service = new DefaultEmbargoService(repository);
    }

    @Test
    public void itShouldDelegateHasEmbargoedOrganizationsToRepository() {
        when(repository.hasEmbargoAccess(any(PermissionSource.class))).thenReturn(true);

        assertThat(service.hasEmbargoedOrganizations(user)).isTrue();
        verify(repository).hasEmbargoAccess(eq(user));
    }
}
