package org.opentestsystem.rdw.reporting.target;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.reporting.common.test.ITDataSourceConfiguration;
import org.opentestsystem.rdw.reporting.common.test.RepositoryIT;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit4.SpringRunner;

import static org.assertj.core.api.Assertions.assertThat;

@RunWith(SpringRunner.class)
@RepositoryIT
@ContextConfiguration(classes = {ITDataSourceConfiguration.class, JdbcTargetDescriptionRepository.class})
@Sql(scripts = {"classpath:integration-test-data.sql"})
@ActiveProfiles("test")
public class JdbcTargetDescriptionRepositoryIT {
    @Autowired
    private JdbcTargetDescriptionRepository repository;

    @Test
    public void findAllByItemIdNotFoundShouldReturnEmpty() throws Exception {
        assertThat(repository.findOneById(0)).isNull();
    }

    @Test
    public void findAllByItemIdShouldReturnTarget() throws Exception {
        final TargetDescription actual = repository.findOneById(-11);

        assertThat(actual.getId()).isEqualTo(-11);
        assertThat(actual.getDescription()).isEqualTo("NBT|E-3-1");
    }
}
