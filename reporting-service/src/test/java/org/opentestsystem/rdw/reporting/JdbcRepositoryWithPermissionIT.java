package org.opentestsystem.rdw.reporting;

import com.google.common.collect.ImmutableMap;
import org.junit.After;
import org.junit.Before;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.reporting.common.configuration.ReportingSystemSettings;
import org.opentestsystem.rdw.reporting.common.test.ITDataSourceConfiguration;
import org.opentestsystem.rdw.reporting.common.test.RepositoryIT;
import org.opentestsystem.rdw.reporting.common.security.User;
import org.opentestsystem.rdw.security.Permission;
import org.opentestsystem.rdw.security.PermissionScope;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringRunner;

import java.util.Map;

import static org.opentestsystem.rdw.reporting.common.test.support.PermissionScopes.groupOf;
import static org.opentestsystem.rdw.reporting.common.test.support.PermissionScopes.individualOf;
import static org.opentestsystem.rdw.reporting.common.test.support.PermissionScopes.permissions;

@RunWith(SpringRunner.class)
@RepositoryIT
@ContextConfiguration(classes = {ITDataSourceConfiguration.class})
@ActiveProfiles("test")
public abstract class JdbcRepositoryWithPermissionIT {

    @Autowired
    private ReportingSystemSettings systemSettings;

    protected final static Map<String, Permission> individualStatewide = ImmutableMap.copyOf(permissions(individualOf(PermissionScope.STATEWIDE)));
    protected final static Map<String, Permission> groupStatewide = ImmutableMap.copyOf(permissions(groupOf(PermissionScope.STATEWIDE)));

    @Deprecated
    protected User.Builder userBuilder;

    @Before
    public void initBuilder() {
        userBuilder = userBuilder();
    }

    @After
    public void clearState() {
        systemSettings.setTransferAccessEnabled(false);
    }

    protected ReportingSystemSettings getSystemSettings() {
        return systemSettings;
    }

    protected User.Builder userBuilder() {
        return User.builderExt()
                .id("userId")
                .username("someone-10@somewhere.com")
                .password("[REDACTED]");
    }

}
