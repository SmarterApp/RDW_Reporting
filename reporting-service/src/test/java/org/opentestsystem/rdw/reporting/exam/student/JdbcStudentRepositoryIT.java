package org.opentestsystem.rdw.reporting.exam.student;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.reporting.common.model.Student;
import org.opentestsystem.rdw.reporting.common.test.ITDataSourceConfiguration;
import org.opentestsystem.rdw.reporting.common.test.RepositoryIT;
import org.opentestsystem.rdw.reporting.exam.student.JdbcStudentRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit4.SpringRunner;

import static org.assertj.core.api.Assertions.assertThat;

@RunWith(SpringRunner.class)
@RepositoryIT
@ContextConfiguration(classes = {ITDataSourceConfiguration.class, JdbcStudentRepository.class})
@Sql(scripts = {"classpath:integration-test-data.sql"})
@ActiveProfiles("test")
public class JdbcStudentRepositoryIT {

    @Autowired
    private JdbcStudentRepository repository;

    @Test
    public void findOneBySsidShouldFindNoneForMissingSsid() throws Exception {
        assertThat(repository.findOneById(1234L)).isNull();
    }

    @Test
    public void findOneBySsidShouldFindOneForValidSsid() throws Exception {
        assertThat(repository.findOneById(-1L))
                .isEqualToComparingFieldByField(
                        Student.builder()
                                .id(-1)
                                .ssid("student1_ssid")
                                .firstName("student1_firstName")
                                .lastName("student1_lastName")
                                .build()
                );
    }

}