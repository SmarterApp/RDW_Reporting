package org.opentestsystem.rdw.reporting.userdetails;

import com.google.common.collect.ImmutableList;
import com.google.common.collect.ImmutableMap;
import com.google.common.collect.ImmutableSet;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.reporting.common.web.security.User;
import org.opentestsystem.rdw.reporting.group.GroupService;
import org.opentestsystem.rdw.reporting.organization.OrganizationService;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.junit4.SpringRunner;

import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

@RunWith(SpringRunner.class)
@ActiveProfiles("test")
public class DefaultUserDetailsServiceTest {

    @MockBean
    private OrganizationService organizationService;

    @MockBean
    private GroupService groupService;

    @MockBean
    private User user;

    private DefaultUserDetailsService service;

    @Before
    public void before() {
        when(user.getPermissionsById()).thenReturn(ImmutableMap.of());
        when(organizationService.getSchools(user)).thenReturn(ImmutableList.of());
        when(groupService.getGroups(user)).thenReturn(ImmutableSet.of());

        service = new DefaultUserDetailsService(groupService, organizationService);
    }

    @Test
    public void getUserContextCallsSchoolService() throws Exception {
        service.getUserDetails(user);
        verify(organizationService, times(1)).getSchools(user);
    }

    @Test
    public void getUserContextCallsGroupService() throws Exception {
        service.getUserDetails(user);
        verify(groupService, times(1)).getGroups(user);
    }

}