package org.opentestsystem.rdw.reporting.group;

import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.reporting.common.web.UserAwareControllerSupport;
import org.opentestsystem.rdw.reporting.common.web.security.User;
import org.opentestsystem.rdw.reporting.student.StudentRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringRunner;

@RunWith(SpringRunner.class)
@WebMvcTest
@ActiveProfiles("test")
@ContextConfiguration(classes = {DefaultUserGroupService.class, DefaultUserGroupAuthorizationService.class})
public class UserGroupServiceIT extends UserAwareControllerSupport {

    @MockBean
    private UserGroupAuthorizationService authorizationService;

    @MockBean
    private UserGroupRepository repository;

    @MockBean
    private StudentRepository studentRepository;

    @MockBean
    private User user;

    @Autowired
    private UserGroupService service;

    @Before
    public void before() {
//        when(authorizationService.isAuthorized(any(User.class))).thenThrow(new RuntimeException());
    }

    @Ignore
    @Test(expected = RuntimeException.class)
    public void getGroupsShouldBeProtected() {
        service.getGroups(user);
    }

}
