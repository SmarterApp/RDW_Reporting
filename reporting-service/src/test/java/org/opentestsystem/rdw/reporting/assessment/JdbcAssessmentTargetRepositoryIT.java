package org.opentestsystem.rdw.reporting.assessment;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.reporting.common.model.Target;
import org.opentestsystem.rdw.reporting.common.test.ITDataSourceConfiguration;
import org.opentestsystem.rdw.reporting.common.test.RepositoryIT;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit4.SpringRunner;

import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;

@RunWith(SpringRunner.class)
@RepositoryIT
@ContextConfiguration(classes = {ITDataSourceConfiguration.class, JdbcAssessmentTargetRepository.class})
@Sql(scripts = {"classpath:integration-test-data.sql"})
@ActiveProfiles("test")
public class JdbcAssessmentTargetRepositoryIT {

    @Autowired
    private JdbcAssessmentTargetRepository repository;

    @Test
    public void itShouldFindEmptyListForMissingAssessment() {
        assertThat(repository.findAllByAssessmentId(0L)).isEmpty();
    }

    @Test
    public void itShouldFindAll() {
        final List<Target> targets = repository.findAllByAssessmentId(-4L);

        assertThat(targets.size()).isEqualTo(11);
        assertThat(targets).usingRecursiveFieldByFieldElementComparator().contains(
                Target.builder().id(-32).assessmentId(-4).includeInReport(false).naturalId("MD|D").claimCode("3").code("D").description("MD|D-3").build(),
                Target.builder().id(-11).assessmentId(-4).includeInReport(true).naturalId("NBT|E-3").claimCode("1").code("E-3").description("NBT|E-3-1").build()
        );
    }
}