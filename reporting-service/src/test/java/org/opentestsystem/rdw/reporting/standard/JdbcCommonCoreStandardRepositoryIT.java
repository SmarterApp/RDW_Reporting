package org.opentestsystem.rdw.reporting.standard;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.reporting.common.test.ITDataSourceConfiguration;
import org.opentestsystem.rdw.reporting.common.test.RepositoryIT;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit4.SpringRunner;

import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;

@RunWith(SpringRunner.class)
@RepositoryIT
@ContextConfiguration(classes = {ITDataSourceConfiguration.class, JdbcCommonCoreStandardRepository.class})
@Sql(scripts = {"classpath:integration-test-data.sql"})
@ActiveProfiles("test")
public class JdbcCommonCoreStandardRepositoryIT {

    @Autowired
    private JdbcCommonCoreStandardRepository repository;

    @Test
    public void findAllByItemIdShould() throws Exception {
        assertThat(repository.findAllByItemId(0)).isEmpty();
    }

    @Test
    public void findAllByItemIdShouldReturnManyStandards() throws Exception {
        List<CommonCoreStandard> actual = repository.findAllByItemId(-1);

        assertThat(actual)
                .usingFieldByFieldElementComparator()
                .containsExactlyInAnyOrder(
                        CommonCoreStandard.builder()
                                .id(-1)
                                .code("ABC.223.1")
                                .description("test-description1")
                                .build(),
                        CommonCoreStandard.builder()
                                .id(-2)
                                .code("DEF.224.1")
                                .description("test-description2")
                                .build(),
                        CommonCoreStandard.builder()
                                .id(-3)
                                .code("GHI.225.1")
                                .description("test-description3")
                                .build()
                );
    }

    @Test
    public void findAllByItemIdShouldReturnSingleStandard() throws Exception {
        List<CommonCoreStandard> actual = repository.findAllByItemId(-2);

        assertThat(actual)
                .usingFieldByFieldElementComparator()
                .containsExactlyInAnyOrder(
                        CommonCoreStandard.builder()
                                .id(-1)
                                .code("ABC.223.1")
                                .description("test-description1")
                                .build()
                );
    }
}