package org.opentestsystem.rdw.reporting.assessment;

import com.google.common.collect.ImmutableList;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;
import org.opentestsystem.rdw.reporting.common.model.Target;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

@RunWith(MockitoJUnitRunner.class)
public class DefaultAssessmentTargetServiceTest {

    @Mock
    private AssessmentTargetRepository repository;

    private AssessmentTargetService service;

    @Before
    public void setUp() {
        service = new DefaultAssessmentTargetService(repository);
    }

    @Test
    public void itShouldUseRepository() {
        final Target target1 = mock(Target.class);
        final Target target2 = mock(Target.class);

        when(repository.findAllByAssessmentId(1)).thenReturn(ImmutableList.of(target1, target2));
        assertThat(service.findAllByAssessmentId(1)).containsExactlyInAnyOrder(target1, target2);
    }
}