package org.opentestsystem.rdw.reporting.assessment;

import org.junit.Before;
import org.junit.Test;

import java.time.LocalDate;
import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;
import static org.hibernate.validator.internal.util.CollectionHelper.newArrayList;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class DefaultAssessmentPercentileServiceTest {

    private AssessmentPercentileRepository repository;
    private AssessmentPercentileService service;

    @Before
    public void setUp() {
        repository = mock(AssessmentPercentileRepository.class);
        service = new DefaultAssessmentPercentileService(repository);
    }

    @Test
    public void itShouldUseRepository() {
        final AssessmentPercentileRequest request = AssessmentPercentileRequest.builder()
                .assessmentId(-2)
                .startDate(LocalDate.parse("1996-01-01"))
                .endDate(LocalDate.parse("1996-01-01"))
                .build();

        final List<Percentile> percentiles = newArrayList();
        when(repository.findAllForAssessment(request)).thenReturn(percentiles);

        assertThat(service.findAllForAssessment(request)).isEqualTo(percentiles);
    }

    @Test(expected = IllegalArgumentException.class)
    public void itShouldRequireEndDateToBeAfterStartDate() {

        final AssessmentPercentileRequest request = AssessmentPercentileRequest.builder()
                .assessmentId(-2)
                .startDate(LocalDate.parse("1996-01-02"))
                .endDate(LocalDate.parse("1996-01-01"))
                .build();

        service.findAllForAssessment(request);
    }
}