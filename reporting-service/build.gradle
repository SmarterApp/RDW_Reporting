apply plugin: 'org.springframework.boot'

dependencies {
    compile project(':rdw-reporting-common')
    compile project(':rdw-reporting-common-web')
    compile 'org.opentestsystem.rdw.common:rdw-common-model'
    compile 'org.opentestsystem.rdw.common:rdw-common-security'
    compile 'org.opentestsystem.rdw.common:rdw-common-status'
    compile 'org.opentestsystem.rdw.common:rdw-common-utils'
    runtime 'org.springframework.boot:spring-boot-devtools'
    compile 'org.springframework.cloud:spring-cloud-starter-aws'
    compile 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
    compile 'org.springframework.cloud:spring-cloud-starter-config'
    compile 'org.springframework.boot:spring-boot-starter-aop'
    compile 'org.springframework.boot:spring-boot-starter-jdbc'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.retry:spring-retry'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    compile 'com.google.guava:guava'
    compile 'mysql:mysql-connector-java'
    compile 'commons-io:commons-io'

    testCompile project(path: ':rdw-reporting-common', configuration: 'tests')
    testCompile project(path: ':rdw-reporting-common-web', configuration: 'tests')
    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude(module: 'commons-logging')
    }
    testCompile 'org.springframework.security:spring-security-test'
}

//This will allow for running of the multithreaded test application
task runMTTest(type: JavaExec) {
    group = 'Verification'
    description = 'Runs MultiThreadedApplicationTest'
    outputs.upToDateWhen { false }
    doFirst { println "Running multithreaded tests..." }
    classpath = sourceSets.test.runtimeClasspath
    main = 'org.opentestsystem.rdw.reporting.multithreaded.MultiThreadedApplicationTest'
}