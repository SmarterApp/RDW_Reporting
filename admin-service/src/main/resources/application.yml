# actuator end-points should be served from a different port than the API/web content
management:
  port: 8008
  security:
    enabled: false
  # disable health check for tenant-specific features
  health:
    db:
      enabled: false

server:
  # tomcat settings for reasonable performance: adjust for tiny/huge configurations
  tomcat:
    max-connections: 0
    max-threads: 4
    accept-count: 10
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,text/csv

datasources:
  reporting_ro:
    url-parts:
      #This is the generic format of the connection URL protocol//[hosts][/database][?properties]
      protocol: "jdbc:mysql:"
      hosts: "${datasources.reporting_ro.url-server:localhost:3306}"
      database: "${datasources.reporting_ro.url-schema:reporting}"
      properties: "useSSL=${datasources.reporting_ro.use-ssl:false}\
                   &useLegacyDatetimeCode=${datasources.reporting_ro.use-legacy-datetime-code:false}\
                   &characterEncoding=${datasources.reporting_ro.character-encoding:utf8}\
                   &rewriteBatchedStatements=${datasources.reporting_ro.rewrite-batched-statements:true}\
                   &connectTimeout=${datasources.reporting_ro.connect-timeout:10000}\
                   &socketTimeout=${datasources.reporting_ro.socket-timeout:40000}\
                   "
    url: "${datasources.reporting_ro.url-parts.protocol}//${datasources.reporting_ro.url-parts.hosts}/${datasources.reporting_ro.url-parts.database}?${datasources.reporting_ro.url-parts.properties}"
    jdbcInterceptors: "QueryTimeoutInterceptor(queryTimeout=${datasources.reporting_ro.query-timeout:30})"
    username: root
    password:
    testWhileIdle: true
    validationQuery: SELECT 1
    validationQueryTimeout: 10000
    driverClassName: com.mysql.jdbc.Driver
    initialize: false
    initialSize: 4
    maxActive: 10
    minIdle: ${datasources.reporting_ro.initialSize}
    maxIdle: ${datasources.reporting_ro.maxActive}
    removeAbandoned: false
    removeAbandonedTimeout: 60
    logAbandoned: false

  warehouse_rw:
    url-parts:
      #This is the generic format of the connection URL protocol//[hosts][/database][?properties]
      protocol: "jdbc:mysql:"
      hosts: "${datasources.warehouse_rw.url-server:localhost:3306}"
      database: "${datasources.warehouse_rw.url-schema:warehouse}"
      properties: "useSSL=${datasources.warehouse_rw.use-ssl:false}\
                   &useLegacyDatetimeCode=${datasources.warehouse_rw.use-legacy-datetime-code:false}\
                   &characterEncoding=${datasources.warehouse_rw.character-encoding:utf8}\
                   &connectTimeout=${datasources.warehouse_rw.connect-timeout:10000}\
                   &socketTimeout=${datasources.warehouse_rw.socket-timeout:70000}\
                   "
    url: "${datasources.warehouse_rw.url-parts.protocol}//${datasources.warehouse_rw.url-parts.hosts}/${datasources.warehouse_rw.url-parts.database}?${datasources.warehouse_rw.url-parts.properties}"
    jdbcInterceptors: "QueryTimeoutInterceptor(queryTimeout=${datasources.warehouse_rw.query-timeout:60})"
    username: root
    password:
    testWhileIdle: true
    validationQuery: SELECT 1
    validationQueryTimeout: 10000
    driverClassName: com.mysql.jdbc.Driver
    initialize: false
    initialSize: 4
    maxActive: 10
    minIdle: ${datasources.warehouse_rw.initialSize}
    maxIdle: ${datasources.warehouse_rw.maxActive}
    removeAbandoned: false
    removeAbandonedTimeout: 60
    logAbandoned: false

spring:
  http:
    multipart:
      max-file-size: 500MB
      max-request-size: 500MB

  jackson:
    default-property-inclusion: non_null
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false

  # Force the (rabbit) queues to be created when posting messages so, even if
  # there are no consumers running, the messages will not get lost. Routing is
  # dynamic based on content but there is no way to do that here so we must
  # explicitly declare all possible output channels here (EXAM, PACKAGE, etc.).
  # The group names must be coordinated with the consumer application configs.
  cloud:
    stream:
      bindings:
        output:
          destination: GROUPS
          group: default

#TODO: This cloud.aws section is probably no longer needed
cloud:
  aws:
    # there must be a default region when running locally
    region:
      auto: false
      static: us-west-2
    # disable CloudFormation stuff
    stack:
      auto: false
    credentials:
      instance-profile: false

archive:
  uri-root: "file:///tmp/"
  #path-prefix:
  #s3-access-key:
  #s3-secret-key:
  s3-region-static: us-west-2
  #s3-sse:

jwt:
  secret: ${rdw.reporting.jwt.secret:secret}

reporting:
  school-year: 2019
  state:
    code: CA
    name: California
