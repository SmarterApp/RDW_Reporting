package org.opentestsystem.rdw.admin.configuration;

import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.jdbc.datasource.DataSourceTransactionManager;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.annotation.EnableTransactionManagement;

import javax.sql.DataSource;

/**
 * This configuration is responsible for providing datasources for both reporting and warehouse.
 */
@Configuration
@EnableTransactionManagement
public class DataSourceConfiguration {

    /**
     * Data source for the reporting data mart.
     *
     * @return DataSource
     */
    @Primary
    @Bean(name = "reportingDatasource")
    @ConfigurationProperties(prefix = "spring.reporting_datasource")
    public DataSource dataSource() {
        return DataSourceBuilder
                .create()
                .build();
    }

    /**
     * The jdbc template used for reading and writing to the reporting data mart.
     *
     * @return DataSource
     */
    @Bean(name = "reportingJdbcTemplate")
    public NamedParameterJdbcTemplate reportingJdbcTemplate(@Qualifier("reportingDatasource") final DataSource dataSource) {
        return new NamedParameterJdbcTemplate(dataSource);
    }

    /**
     * @return The reporting transaction manager
     */
    @Bean(name = "reportingTxManager")
    public PlatformTransactionManager reportingTxManager(@Qualifier("reportingDatasource") final DataSource dataSource) {
        return new DataSourceTransactionManager(dataSource);
    }

    /**
     * Data source for the data warehouse.
     *
     * @return DataSource
     */
    @Bean(name = "warehouseDatasource")
    @ConfigurationProperties(prefix = "spring.warehouse_datasource")
    public DataSource warehouseDataSource() {
        return DataSourceBuilder
                .create()
                .build();
    }

    /**
     * The jdbc template used for reading from the data warehouse.
     *
     * @return DataSource
     */
    @Bean(name = "warehouseJdbcTemplate")
    public NamedParameterJdbcTemplate warehouseJdbcTemplate(@Qualifier("warehouseDatasource") final DataSource dataSource) {
        return new NamedParameterJdbcTemplate(dataSource);
    }

    /**
     * @return The warehouse transaction manager
     */
    @Bean(name = "warehouseTxManager")
    public PlatformTransactionManager warehouseTxManager(@Qualifier("warehouseDatasource") final DataSource dataSource) {
        return new DataSourceTransactionManager(dataSource);
    }
}
