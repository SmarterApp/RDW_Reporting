package org.opentestsystem.rdw.admin.service.impl;

import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.security.oauth2.client.OAuth2RestOperations;
import org.springframework.security.oauth2.client.OAuth2RestTemplate;
import org.springframework.web.client.RestClientException;

/**
 * ART client providing access to organization data.<br/>
 */
public class ArtClient {

    private final StateServiceArtClientProperties properties;
    private final OAuth2RestOperations template;

    public ArtClient(final StateServiceArtClientProperties properties) {
        this.properties = properties;
        this.template = new OAuth2RestTemplate(properties.getOauth2());
    }

    public byte[] getStates() {
        return getPayload(properties.getStatesUrl());
    }

    /**
     * Helper to get payload from URL as byte[], throwing exceptions if return code
     * or content type is not valid.
     *
     * @param url URL of payload end-point
     * @return payload
     * @throws RestClientException if unexpected response
     */
    private byte[] getPayload(final String url) {
        final ResponseEntity<byte[]> result = template.getForEntity(url, byte[].class);
        if (!result.getStatusCode().is2xxSuccessful()) {
            throw new RestClientException("Unexpected response status from ART:" + result.getStatusCode());
        }
        if (!result.getHeaders().getContentType().isCompatibleWith(MediaType.APPLICATION_JSON)) {
            throw new RestClientException("Unexpected response type from ART:" + result.getHeaders().getContentType());
        }
        return result.getBody();
    }
}
