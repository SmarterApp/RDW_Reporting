package org.opentestsystem.rdw.admin.web;

import org.opentestsystem.rdw.admin.model.ApplicationSandboxConfigurations;
import org.opentestsystem.rdw.admin.model.SandboxConfiguration;
import org.opentestsystem.rdw.admin.service.SandboxService;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;


@RestController
@RequestMapping("/sandboxes")
public class SandboxController {

    private SandboxService service;

    public SandboxController(SandboxService service) {
        this.service = service;
    }

    @GetMapping
    @ResponseBody
    public ApplicationSandboxConfigurations getSandboxes() {
        return service.getAll();
    }

    @PostMapping
    @ResponseStatus(HttpStatus.CREATED)
    @ResponseBody
    public SandboxConfiguration create(@RequestBody final SandboxConfiguration sandboxConfiguration) {
        return service.create(sandboxConfiguration);
    }

    @PutMapping
    @ResponseStatus(value = HttpStatus.OK)
    @ResponseBody
    public SandboxConfiguration put(@RequestBody final SandboxConfiguration sandboxConfiguration) {
        return service.update(sandboxConfiguration);
    }

    @DeleteMapping("/{key}")
    @ResponseStatus(HttpStatus.NO_CONTENT)
    public void delete(@PathVariable("key") final String key) {
        service.delete(key);
    }

    @PutMapping("/{key}/reset")
    @ResponseStatus(value = HttpStatus.NO_CONTENT)
    public void resetDataSet(@PathVariable("key") final String key) {
        service.resetDataSet(key);
    }

}
