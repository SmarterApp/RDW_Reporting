package org.opentestsystem.rdw.admin.multitenant.service;

import org.opentestsystem.rdw.admin.multitenant.model.TenantConfiguration;
import org.opentestsystem.rdw.admin.multitenant.TenantType;

import java.util.Map;
import java.util.Optional;

/**
 * A unified current (point-in-time) view abstraction of {@link TenantConfiguration} composed
 * of multiple data providers
 */
public interface TenantConfigurationViewService {

    /**
     * Non-tenant specific default configuration instance wide
     *
     * @return default tenant configuration
     */
    TenantConfiguration defaultTenantConfiguration();

    /**
     * Configuration for a tenant, including sandboxes
     *
     * @param key tenant key
     * @return ApplicationTenantConfiguration for the given tenantKey
     */
    Optional<TenantConfiguration> findActiveTenantConfiguration(String key);

    /**
     * All tenant configurations
     *
     * @return Map of tenant key to tenant configuration
     */
    Map<String, TenantConfiguration> allTenantConfigurations(TenantType tenantType);

    /**
     * True if a configuration exists for the given key
     *
     * @param key The tenant key to test
     * @return True if a configuration exists for the given key
     */
    boolean exists(String key);

    /**
     * True if a configuration exists for the given id
     *
     * @param id The tenant id to test
     * @return True if a configuration exists for the given id
     */
    boolean existsId(String id);
}
