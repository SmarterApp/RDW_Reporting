package org.opentestsystem.rdw.admin.web;

import org.opentestsystem.rdw.admin.model.Group;
import org.opentestsystem.rdw.admin.model.GroupFilterOptions;
import org.opentestsystem.rdw.admin.model.GroupQuery;
import org.opentestsystem.rdw.admin.service.GroupService;
import org.opentestsystem.rdw.reporting.common.security.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import java.util.Set;

@RestController
@RequestMapping("/groups")
public class GroupController {

    private final GroupService service;

    @Autowired
    GroupController(final GroupService service) {
        this.service = service;
    }

    @GetMapping
    public Set<Group> get(@AuthenticationPrincipal final User user, final GroupQuery query) {
        return service.getByQuery(user, query);
    }

    @DeleteMapping("/{id}")
    @ResponseStatus(HttpStatus.NO_CONTENT)
    public void delete(@AuthenticationPrincipal final User user, @PathVariable final long id) {
        service.delete(user, id);
    }

    @GetMapping("/filters")
    public GroupFilterOptions getFilters(@AuthenticationPrincipal final User user) {
        return service.getFilterOptions(user);
    }
}
