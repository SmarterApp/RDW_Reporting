package org.opentestsystem.rdw.admin.model;

import java.time.Instant;

/**
 * Represents a ingest pipeline transformation script
 */
public class PipelineScript {

    private Integer id;
    private int pipelineId;
    private String body;
    private Instant created;
    private Instant updated;
    private String updatedBy;

    public Integer getId() {
        return id;
    }

    public int getPipelineId() {
        return pipelineId;
    }

    public String getBody() {
        return body;
    }

    public Instant getCreated() {
        return created;
    }

    public Instant getUpdated() {
        return updated;
    }

    public String getUpdatedBy() {
        return updatedBy;
    }

    public static Builder builder() {
        return new Builder();
    }

    public Builder copy() {
        return builder().copy(this);
    }

    public static class Builder {
        private Integer id;
        private int pipelineId;
        private String body;
        private Instant created;
        private Instant updated;
        private String updatedBy;

        public Builder id(final Integer id) {
            this.id = id;
            return this;
        }

        public Builder pipelineId(final int pipelineId) {
            this.pipelineId = pipelineId;
            return this;
        }

        public Builder body(final String body) {
            this.body = body;
            return this;
        }

        public Builder created(final Instant created) {
            this.created = created;
            return this;
        }

        public Builder updated(final Instant updated) {
            this.updated = updated;
            return this;
        }

        public Builder updatedBy(final String updatedBy) {
            this.updatedBy = updatedBy;
            return this;
        }

        public Builder copy(final PipelineScript script) {
            return id(script.id)
                    .pipelineId(script.pipelineId)
                    .body(script.body)
                    .created(script.created)
                    .updated(script.updated)
                    .updatedBy(script.updatedBy);
        }

        public PipelineScript build() {
            final PipelineScript script = new PipelineScript();
            script.id = id;
            script.pipelineId = pipelineId;
            script.body = body;
            script.created = created;
            script.updated = updated;
            script.updatedBy = updatedBy;
            return script;
        }

    }

}
