package org.opentestsystem.rdw.admin.multitenant;

import org.opentestsystem.rdw.admin.client.ConfigServerClient;
import org.opentestsystem.rdw.admin.multitenant.database.MultitenantDatabaseAdmin;
import org.opentestsystem.rdw.admin.multitenant.database.TenantDatabaseCreationService;
import org.opentestsystem.rdw.admin.multitenant.database.impl.DefaultTenantDatabaseCreationService;
import org.opentestsystem.rdw.admin.multitenant.git.GitTenantConfigurationPersistenceService;
import org.opentestsystem.rdw.admin.multitenant.git.TenantConfigurationPersistenceProperties;
import org.opentestsystem.rdw.admin.multitenant.git.TenantConfigurationPersistenceService;
import org.opentestsystem.rdw.reporting.common.stream.MessageSecurityService;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import javax.sql.DataSource;

@Configuration
public class TenantAdministrationConfiguration {

    @Bean
    public DefaultTenantDatabaseCreationService tenantDatabaseCreationService(final MultitenantDatabaseAdmin multitenantDatabaseAdmin,
                                                                              @Qualifier("adminReportingDataSource") final DataSource adminReportingDataSource,
                                                                              @Qualifier("adminWarehouseDataSource") final DataSource adminWarehouseDataSource,
                                                                              @Qualifier("adminOlapDataSource") final DataSource adminOlapDataSource) {
        return new DefaultTenantDatabaseCreationService(multitenantDatabaseAdmin,
                adminReportingDataSource,
                adminWarehouseDataSource,
                adminOlapDataSource);
    }

    @Bean
    public GitTenantConfigurationPersistenceService tenantConfigurationPersistenceService(TenantConfigurationPersistenceProperties tenantConfigurationPersistenceProperties) {
        return new GitTenantConfigurationPersistenceService(tenantConfigurationPersistenceProperties);
    }

    @Bean
    public DefaultTenantAdministrationRequestHandler tenantAdministrationRequestHandler(MessageSecurityService messageSecurityService,
                                                                                        TenantAdministrationProcessor tenantAdministrationProcessor,
                                                                                        TenantDatabaseCreationService tenantDatabaseCreationService,
                                                                                        TenantConfigurationPersistenceService tenantConfigurationPersistenceService,
                                                                                        ConfigServerClient configServerClient) {
        return new DefaultTenantAdministrationRequestHandler(messageSecurityService,
                tenantAdministrationProcessor,
                tenantDatabaseCreationService,
                tenantConfigurationPersistenceService,
                configServerClient);
    }
}
