package org.opentestsystem.rdw.admin.repository.impl;

import com.google.common.collect.ImmutableSet;
import org.opentestsystem.rdw.admin.model.TenantConfiguration;
import org.opentestsystem.rdw.admin.repository.TenantConfigurationRepository;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Repository;

import java.util.HashMap;
import java.util.Set;

/**
 * In memory storage 'repository' for TenantConfigurations
 */
@Component
public class InMemoryTenantRepository implements TenantConfigurationRepository {

    private HashMap<String, TenantConfiguration> tenantConfigurationMap = new HashMap<>();

    public InMemoryTenantRepository () {}

    @Override
    public Set<TenantConfiguration> getAll() {
        return ImmutableSet.copyOf(tenantConfigurationMap.values());
    }

    @Override
    public TenantConfiguration add(final TenantConfiguration tenantConfiguration) {
        return tenantConfigurationMap.putIfAbsent(tenantConfiguration.getTenant().getKey(), tenantConfiguration);
    }

    @Override
    public TenantConfiguration update(final TenantConfiguration tenantConfiguration) {
        return tenantConfigurationMap.replace(tenantConfiguration.getTenant().getKey(), tenantConfiguration);
    }

    @Override
    public void delete(final String key) {
        tenantConfigurationMap.remove(key);
    }

    @Override
    public Boolean tenantExists(final String id) {
        return tenantConfigurationMap.containsKey(id);
    }
}
