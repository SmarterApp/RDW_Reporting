package org.opentestsystem.rdw.admin.model;

import com.fasterxml.jackson.annotation.JsonView;

import java.time.Instant;

/**
 * Represents an ingest pipeline transformation script test
 */
public class PipelineTest {

    private Integer id;
    private int pipelineId;
    private String name;
    private String input;
    private String output;
    private Instant created;
    private Instant updated;
    private String updatedBy;

    @JsonView(PipelineTestJsonView.Minimal.class)
    public Integer getId() {
        return id;
    }

    @JsonView(PipelineTestJsonView.Minimal.class)
    public int getPipelineId() {
        return pipelineId;
    }

    @JsonView(PipelineTestJsonView.Minimal.class)
    public String getName() {
        return name;
    }

    public String getInput() {
        return input;
    }

    public String getOutput() {
        return output;
    }

    @JsonView(PipelineTestJsonView.Minimal.class)
    public Instant getCreated() {
        return created;
    }

    @JsonView(PipelineTestJsonView.Minimal.class)
    public Instant getUpdated() {
        return updated;
    }

    @JsonView(PipelineTestJsonView.Minimal.class)
    public String getUpdatedBy() {
        return updatedBy;
    }

    public static Builder builder() {
        return new Builder();
    }

    public Builder copy() {
        return builder().copy(this);
    }

    public static class Builder {
        private Integer id;
        private int pipelineId;
        private String name;
        private String input;
        private String output;
        private Instant created;
        private Instant updated;
        private String updatedBy;

        public Builder id(final Integer id) {
            this.id = id;
            return this;
        }

        public Builder pipelineId(final int pipelineId) {
            this.pipelineId = pipelineId;
            return this;
        }

        public Builder name(final String name) {
            this.name = name;
            return this;
        }

        public Builder input(final String input) {
            this.input = input;
            return this;
        }

        public Builder output(final String output) {
            this.output = output;
            return this;
        }

        public Builder created(final Instant created) {
            this.created = created;
            return this;
        }

        public Builder updated(final Instant updated) {
            this.updated = updated;
            return this;
        }

        public Builder updatedBy(final String updatedBy) {
            this.updatedBy = updatedBy;
            return this;
        }

        public Builder copy(final PipelineTest test) {
            return id(test.id)
                    .pipelineId(test.pipelineId)
                    .name(test.name)
                    .input(test.input)
                    .output(test.output)
                    .created(test.created)
                    .updated(test.updated)
                    .updatedBy(test.updatedBy);
        }

        public PipelineTest build() {
            final PipelineTest test = new PipelineTest();
            test.id = id;
            test.pipelineId = pipelineId;
            test.name = name;
            test.input = input;
            test.output = output;
            test.created = created;
            test.updated = updated;
            test.updatedBy = updatedBy;
            return test;
        }

    }

}
