package org.opentestsystem.rdw.admin.multitenant.administration.impl;


import org.opentestsystem.rdw.admin.multitenant.administration.SandboxArchiveRemovalService;
import org.opentestsystem.rdw.archive.ArchivePropertiesResolver;
import org.opentestsystem.rdw.archive.ArchiveService;
import org.opentestsystem.rdw.multitenant.Tenant;
import org.opentestsystem.rdw.multitenant.TenantContextHolder;
import org.opentestsystem.rdw.multitenant.TenantProperties;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class DefaultSandboxArchiveRemovalService implements SandboxArchiveRemovalService {
    private static final Logger logger = LoggerFactory.getLogger(DefaultSandboxArchiveRemovalService.class);

    private final ArchivePropertiesResolver archivePropertiesResolver;
    private final TenantProperties tenantProperties;
    private final ArchiveService archiveService;

    public DefaultSandboxArchiveRemovalService(ArchivePropertiesResolver archivePropertiesResolver,
                                               TenantProperties tenantProperties,
                                               ArchiveService archiveService) {
        this.archivePropertiesResolver = archivePropertiesResolver;
        this.tenantProperties = tenantProperties;
        this.archiveService = archiveService;
    }

    @Override
    public void remove(final String tenantKey) {
        try {
            Tenant tenant = tenantProperties.getTenants().get(tenantKey);
            TenantContextHolder.setTenantId(tenant.getId());
            archiveService.delete(archivePropertiesResolver.getPathPrefix());
            TenantContextHolder.clear();
        } catch (final Exception e) {
            logger.info("Cannot remove archives for sandbox id {}: {}", tenantKey, e.getMessage());
        }
    }
}
