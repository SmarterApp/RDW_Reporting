package org.opentestsystem.rdw.admin.model;

import org.opentestsystem.rdw.reporting.common.model.EmbargoStatus;

/**
 * This class encapsulates the current test results availability state for a single
 * district, school year, subject, and report type.
 */
public class TestResultAvailability {

    private Long districtId;                    // district id
    private String districtName;                // district name
    private Integer schoolYear;                 // school year
    private Long subjectId;                     // subject id
    private String subjectCode;                 // subject code
    private TestResultsReportType reportType;   // report type -- individual or aggregate
    private EmbargoStatus individualStatus;           // test results status -- loading, reviewing, or released
    private EmbargoStatus aggregateStatus;           // test results status -- loading, reviewing, or released
    private Integer examCount;

    public Long getDistrictId() {
        return districtId;
    }

    public String getDistrictName() {
        return districtName;
    }

    public Integer getSchoolYear() {
        return schoolYear;
    }

    public Long getSubjectId() {
        return subjectId;
    }

    public String getSubjectCode() {
        return subjectCode;
    }

    public TestResultsReportType getReportType() {
        return reportType;
    }

    public EmbargoStatus getIndividualStatus() {
        return individualStatus;
    }

    public EmbargoStatus getAggregateStatus() {
        return aggregateStatus;
    }

    public EmbargoStatus getStatus() {
        if (getReportType() == TestResultsReportType.Aggregate) {
            return getAggregateStatus();
        }
        if (getReportType() == TestResultsReportType.Individual) {
            return getIndividualStatus();
        }

        return null;
    }

    public Integer getExamCount() {
        return examCount;
    }

    /**
     * @return new builder with this instance's values
     */
    public Builder copy() {
        return builder().copy(this);
    }

    /**
     * @return new builder
     */
    public static Builder builder() {
        return new Builder();
    }

    public static class Builder {
        private Long districtId;
        private String districtName;
        private Integer schoolYear;
        private Long subjectId;
        private String subjectCode;
        private TestResultsReportType reportType;
        private EmbargoStatus individualStatus;
        private EmbargoStatus aggregateStatus;
        private Integer examCount;

        public TestResultAvailability build() {
            final TestResultAvailability testResults = new TestResultAvailability();

            testResults.districtId = districtId;
            testResults.districtName = districtName;
            testResults.schoolYear = schoolYear;
            testResults.subjectId = subjectId;
            testResults.subjectCode = subjectCode;
            testResults.reportType = reportType;
            testResults.individualStatus = individualStatus;
            testResults.aggregateStatus = aggregateStatus;
            testResults.examCount = examCount;

            return testResults;
        }

        public Builder copy(final TestResultAvailability results) {
            districtId = results.districtId;
            districtName = results.districtName;
            schoolYear = results.schoolYear;
            subjectId = results.subjectId;
            subjectCode = results.subjectCode;
            reportType = results.reportType;
            individualStatus = results.individualStatus;
            aggregateStatus = results.aggregateStatus;
            examCount = results.examCount;

            return this;
        }

        public Builder districtId(final Long id) {
            this.districtId = id;
            return this;
        }

        public Builder districtName(final String name) {
            this.districtName = name;
            return this;
        }

        public Builder schoolYear(final Integer schoolYear) {
            this.schoolYear = schoolYear;
            return this;
        }

        public Builder subjectId(final Long subjectId) {
            this.subjectId = subjectId;
            return this;
        }

        public Builder subjectCode(final String subjectCode) {
            this.subjectCode = subjectCode;
            return this;
        }

        public Builder reportType(final TestResultsReportType reportType) {
            this.reportType = reportType;
            return this;
        }

        public Builder individualStatus(final EmbargoStatus status) {
            this.individualStatus = status;
            return this;
        }

        public Builder aggregateStatus(final EmbargoStatus status) {
            this.aggregateStatus = status;
            return this;
        }

        public Builder examCount(final int examCount) {
            this.examCount = examCount;
            return this;
        }
    }
}
