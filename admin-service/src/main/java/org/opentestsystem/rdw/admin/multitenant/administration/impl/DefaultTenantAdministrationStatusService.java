package org.opentestsystem.rdw.admin.multitenant.administration.impl;

import com.google.common.collect.ImmutableMap;
import org.opentestsystem.rdw.admin.multitenant.administration.TenantAdministrationStatus;
import org.opentestsystem.rdw.admin.multitenant.administration.TenantAdministrationStatusContext;
import org.opentestsystem.rdw.admin.multitenant.administration.TenantAdministrationStatusService;
import org.opentestsystem.rdw.admin.multitenant.model.TenantConfiguration;

import java.util.Optional;
import java.util.concurrent.ConcurrentHashMap;

public class DefaultTenantAdministrationStatusService implements TenantAdministrationStatusService {

    private final ConcurrentHashMap<String, TenantAdministrationStatusContext> statusCache;

    public DefaultTenantAdministrationStatusService() {
        statusCache = new ConcurrentHashMap<>();
    }

    @Override
    public ImmutableMap<String, TenantAdministrationStatusContext> allTenantStatusAsMap() {
        return ImmutableMap.copyOf(statusCache);
    }

    @Override
    public void putStatus(String tenantKey, TenantAdministrationStatus status, TenantConfiguration tenantConfiguration) {
        putStatus(tenantKey, status, tenantConfiguration, null);
    }

    @Override
    public void putStatus(String tenantKey, TenantAdministrationStatus status, TenantConfiguration tenantConfiguration, String message) {
        statusCache.put(tenantKey,
                TenantAdministrationStatusContext.builder()
                        .tenant(tenantConfiguration.getTenant())
                        .tenantAdministrationStatus(status)
                        .message(message)
                        .build());
    }

    @Override
    public void updateStatus(String tenantKey, TenantAdministrationStatus status) {
        updateStatus(tenantKey, status, null);
    }

    @Override
    public void updateStatus(String tenantKey, TenantAdministrationStatus status, String message) {
        Optional.ofNullable(statusCache.get(tenantKey)).ifPresent(currentContext -> {
                    TenantAdministrationStatusContext newContext = TenantAdministrationStatusContext
                            .builder()
                            .tenant(currentContext.getTenant())
                            .tenantAdministrationStatus(status)
                            .message(message)
                            .build();
                    statusCache.put(tenantKey, newContext);
                }
        );
    }

    @Override
    public Optional<TenantAdministrationStatusContext> findStatus(String tenantKey) {
        return Optional.ofNullable(statusCache.get(tenantKey));
    }

    @Override
    public void remove(String tenantKey) {
        statusCache.remove(tenantKey);
    }

}
