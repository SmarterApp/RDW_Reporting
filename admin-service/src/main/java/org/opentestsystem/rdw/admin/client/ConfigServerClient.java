package org.opentestsystem.rdw.admin.client;

/**
 * Client to the system's config Server
 */
public interface ConfigServerClient {
    /**
     * Initiate a refresh of system properties by posting to the /monitor endpoint
     * atm refresh all reporting applications
     *
     * @throws IllegalArgumentException not able to call /monitor endpoint
     */
    void postMonitor() throws IllegalArgumentException;

    /**
     * @param service    to search through for the dataSource's password
     * @return the actual encrypted password of the dataSource for the service
     * @throws IllegalArgumentException not able to to call service endpoint
     */
    String getActualServicePassword(String service) throws IllegalArgumentException;

    /**
     * @return the properties containing the unmasked, unencrypted password of the reporting_ro datasource
     * @throws IllegalArgumentException not able to to call service endpoint
     */
    String getActualReportingROPasswordProps() throws IllegalArgumentException;

    /**
     * @return the properties containing the unmasked, unencrypted password of the reporting_rw datasource
     * @throws IllegalArgumentException not able to to call service endpoint
     */
    String getActualReportingRWPasswordProps() throws IllegalArgumentException;


    /**
     * @return the properties containing the unmasked, unencrypted password of the olap_ro datasource
     * @throws IllegalArgumentException not able to to call service endpoint
     */
    String getActualOlapROPasswordProps() throws IllegalArgumentException;

    /**
     * @return the properties containing the unmasked, unencrypted password of the warehouse_rw datasource
     * @throws IllegalArgumentException not able to to call service endpoint
     */
    String getActualWarehouseRWPasswordProps() throws IllegalArgumentException;

    /**
     * @param password to encrypt
     * @return the encrypted password
     * @throws IllegalArgumentException not able to call /encrypt endpoint
     */
    String encryptPassword(String password) throws IllegalArgumentException;

    /**
     * @param password password to decrypt
     * @return the decrypted password
     * @throws IllegalArgumentException not able to call /decrypt endpoint
     */
    String decryptPassword(String password) throws IllegalArgumentException;

}
