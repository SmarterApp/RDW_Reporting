package org.opentestsystem.rdw.admin.web;

import org.opentestsystem.rdw.admin.model.ReportTemplateInfo;
import org.opentestsystem.rdw.admin.service.ReportTemplateService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.ByteArrayResource;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.List;

/**
 * Controller responsible for servicing CRUD operations on report templates
 */
@RestController
@RequestMapping("/templates")
public class ReportTemplateController {
    private static final Logger logger = LoggerFactory.getLogger(ReportTemplateController.class);

    private final ReportTemplateService service;

    @Autowired
    public ReportTemplateController(final ReportTemplateService service) {
        this.service = service;
    }

    /**
     * @return list of template info for all combinations
     */
    @GetMapping
    public List<ReportTemplateInfo> get() {
        return service.getTemplateInfo();
    }

    @GetMapping(path = "{subjectCode}/{assessmentType}", produces = MediaType.ALL_VALUE)
    public ByteArrayResource getTemplate(@PathVariable final String subjectCode,
                                         @PathVariable final String assessmentType) {
        // templates are not large, maybe 20-30k max, so just use a byte array resource
        try (final ByteArrayOutputStream baos = new ByteArrayOutputStream()) {
            service.download(subjectCode, assessmentType, baos);
            return new ByteArrayResource(baos.toByteArray());
        } catch (final IOException e) {
            // i don't think this will ever happen but it would be a 5xx if it did
            throw new RuntimeException(
                String.format("Error reading TEMPLATE file for %s/%s: %s", subjectCode, assessmentType, e.getMessage()));
        }
    }

    @PutMapping(path = "{subjectCode}/{assessmentType}")
    public void putTemplate(@PathVariable final String subjectCode,
                            @PathVariable final String assessmentType,
                            @RequestParam("file") final MultipartFile file) {
        try {
            service.upload(subjectCode, assessmentType, file.getInputStream());
        } catch (final IOException e) {
            throw new IllegalArgumentException(
                String.format("Error reading uploaded TEMPLATE file %s: %s", file.getName(), e.getMessage()));
        }
    }

    /**
     * Delete the template for the given combination
     *
     * @param subjectCode subject code, e.g. "Math"
     * @param assessmentType assessment type, e.g. "iab"
     */
    @DeleteMapping(path = "{subjectCode}/{assessmentType}")
    public void delete(@PathVariable final String subjectCode,
                       @PathVariable final String assessmentType) {
        service.delete(subjectCode, assessmentType);
    }
}
