package org.opentestsystem.rdw.admin.web;

import org.aspectj.weaver.ast.Test;
import org.opentestsystem.rdw.admin.model.EmbargoQuery;
import org.opentestsystem.rdw.admin.model.GroupFilterOptions;
import org.opentestsystem.rdw.admin.model.TestResultAvailability;
import org.opentestsystem.rdw.admin.model.TestResultAvailabilityOptions;
import org.opentestsystem.rdw.admin.model.TestResultsStatus;
import org.opentestsystem.rdw.admin.service.EmbargoService;
import org.opentestsystem.rdw.reporting.common.model.ReportQuery;
import org.opentestsystem.rdw.reporting.common.security.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.Collection;

/**
 * End-points for administering {@link TestResultAvailability}s.
 */
@RestController
@RequestMapping("/testResults")
public class TestResultsController {

    private final EmbargoService service;

    @Autowired
    TestResultsController(final EmbargoService service) {
        this.service = service;
    }

    /**
     * @param user user
     * @param query the query parameters -- filters, sort, and page definitions
     * @return collection of embargo settings for which the user has permission
     */
    @PostMapping
    public Collection<TestResultAvailability> get(
        @AuthenticationPrincipal final User user,
        @RequestBody final EmbargoQuery query) {
        return service.findTestResults(query, user);
    }

    @GetMapping("/filters")
    public TestResultAvailabilityOptions getFilters(@AuthenticationPrincipal final User user) {
        return service.getFilterOptions(user);
    }
}
