package org.opentestsystem.rdw.admin.web;

import org.opentestsystem.rdw.admin.model.InstructionalResource;
import org.opentestsystem.rdw.admin.service.InstructionalResourceService;
import org.opentestsystem.rdw.reporting.common.web.security.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

import static org.springframework.http.HttpStatus.CREATED;

/**
 * This controller is responsible for interacting with instructional resources
 */
@RestController
@RequestMapping("/instructional-resources")
public class InstructionalResourceController {

    private final InstructionalResourceService service;

    @Autowired
    public InstructionalResourceController(final InstructionalResourceService service) {
        this.service = service;
    }

    @GetMapping
    public List<InstructionalResource> getResources(@AuthenticationPrincipal final User user) {
        return service.findAll(user);
    }

    @PostMapping
    @ResponseStatus(CREATED)
    public InstructionalResource createResource(@AuthenticationPrincipal final User user,
                                                @RequestBody final InstructionalResource instructionalResource) {
        return service.create(user, instructionalResource);
    }

    @PutMapping
    @ResponseStatus(HttpStatus.OK)
    public InstructionalResource updateResource(@AuthenticationPrincipal final User user,
                                                @RequestBody final InstructionalResource instructionalResource) {
        return service.update(user, instructionalResource);
    }

    @DeleteMapping
    @ResponseStatus(HttpStatus.NO_CONTENT)
    public void deleteResource(@AuthenticationPrincipal final User user,
                               final InstructionalResource instructionalResource) {
        service.delete(user, instructionalResource);
    }

}
