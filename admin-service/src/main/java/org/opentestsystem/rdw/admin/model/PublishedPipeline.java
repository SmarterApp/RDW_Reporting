package org.opentestsystem.rdw.admin.model;

import java.time.Instant;
import java.util.List;

import static org.opentestsystem.rdw.reporting.common.util.CollectionUtils.safeImmutableOf;

/**
 * Represents a published pipeline
 */
public class PublishedPipeline {

    private int pipelineId;
    private int version;
    private List<PipelineScript> userScripts;
    private Instant published;
    private String publishedBy;

    public int getPipelineId() {
        return pipelineId;
    }

    public int getVersion() {
        return version;
    }

    public List<PipelineScript> getUserScripts() {
        return userScripts;
    }

    public Instant getPublished() {
        return published;
    }

    public String getPublishedBy() {
        return publishedBy;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder {

        private int pipelineId;
        private int version;
        private List<PipelineScript> userScripts;
        private Instant published;
        private String publishedBy;

        public Builder pipelineId(final int pipelineId) {
            this.pipelineId = pipelineId;
            return this;
        }

        public Builder version(final int version) {
            this.version = version;
            return this;
        }

        public Builder userScripts(final List<PipelineScript> userScripts) {
            this.userScripts = safeImmutableOf(userScripts);
            return this;
        }

        public Builder published(final Instant published) {
            this.published = published;
            return this;
        }

        public Builder publishedBy(final String publishedBy) {
            this.publishedBy = publishedBy;
            return this;
        }

        public PublishedPipeline build() {
            final PublishedPipeline pipeline = new PublishedPipeline();
            pipeline.pipelineId = pipelineId;
            pipeline.version = version;
            pipeline.userScripts = userScripts;
            pipeline.published = published;
            pipeline.publishedBy = publishedBy;
            return pipeline;
        }
    }

}
