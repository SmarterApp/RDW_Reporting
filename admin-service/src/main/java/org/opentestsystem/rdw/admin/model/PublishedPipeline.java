package org.opentestsystem.rdw.admin.model;

import org.opentestsystem.rdw.reporting.common.model.CodedEntity;

import java.util.List;

import static org.opentestsystem.rdw.reporting.common.util.CollectionUtils.safeImmutableOf;

public class PublishedPipeline extends CodedEntity {

    private String inputType;
    private int version;
    private List<PipelineScript> userScripts;

    public String getInputType() {
        return inputType;
    }

    public int getVersion() {
        return version;
    }

    public List<PipelineScript> getUserScripts() {
        return userScripts;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder extends CodedEntity.Builder<PublishedPipeline, Builder> {

        private String inputType;
        private int version;
        private List<PipelineScript> userScripts;

        public Builder inputType(final String inputType) {
            this.inputType = inputType;
            return this;
        }

        public Builder version(final int version) {
            this.version = version;
            return this;
        }

        public Builder userScripts(final List<PipelineScript> userScripts) {
            this.userScripts = safeImmutableOf(userScripts);
            return this;
        }

        protected PublishedPipeline build(final PublishedPipeline pipeline) {
            super.build(pipeline);
            pipeline.inputType = inputType;
            pipeline.version = version;
            pipeline.userScripts = userScripts;
            return pipeline;
        }

        @Override
        public PublishedPipeline build() {
            final PublishedPipeline pipeline = new PublishedPipeline();
            return build(pipeline);
        }
    }

}
