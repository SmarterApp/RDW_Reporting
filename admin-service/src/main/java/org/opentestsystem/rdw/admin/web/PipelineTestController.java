package org.opentestsystem.rdw.admin.web;

import org.opentestsystem.rdw.admin.model.PipelineTest;
import org.opentestsystem.rdw.admin.service.PipelineTestService;
import org.opentestsystem.rdw.reporting.common.security.User;
import org.springframework.http.HttpStatus;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/pipelines/{pipelineId}/tests")
class PipelineTestController {

    private final PipelineTestService service;

    PipelineTestController(final PipelineTestService service) {
        this.service = service;
    }

    @GetMapping("{id}")
    public PipelineTest get(
            @PathVariable final int pipelineId,
            @PathVariable final int id) {
        return service.get(id);
    }

    @PostMapping()
    @ResponseStatus(HttpStatus.CREATED)
    public PipelineTest post(
            @AuthenticationPrincipal final User user,
            @RequestBody final PipelineTest test) {
        return service.create(user.getUsername(), test);
    }

    @PutMapping()
    public PipelineTest put(
            @AuthenticationPrincipal final User user,
            @RequestBody final PipelineTest test) {
        return service.update(user.getUsername(), test);
    }

    @DeleteMapping("{id}")
    @ResponseStatus(HttpStatus.NO_CONTENT)
    public void delete(@PathVariable final int id) {
        service.delete(id);
    }

}
