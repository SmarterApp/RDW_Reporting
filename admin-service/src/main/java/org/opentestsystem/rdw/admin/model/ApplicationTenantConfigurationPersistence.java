package org.opentestsystem.rdw.admin.model;

import com.google.common.collect.ImmutableMap;
import org.opentestsystem.rdw.multitenant.datasource.DataSourceElements;
import org.opentestsystem.rdw.reporting.common.configuration.ReportingSystemProperties;

import java.util.Map;

/**
 * Write specific model directly corresponds to .yml file in tenant subdirectory
 */
public class ApplicationTenantConfigurationPersistence {

    private Map<String, Map<String, ReportingSystemProperties>> reporting;

    private Map<String, Map<String, Map<String, DataSourceElements>>> datasources;
//    private ArchivePropertiesRoot archivePropertiesRoot;

    public ApplicationTenantConfigurationPersistence() {
    }

    public ApplicationTenantConfigurationPersistence(String tenantKey,
                                                     ApplicationTenantConfiguration applicationTenantConfiguration) {
        reporting = ImmutableMap.of("tenants",
                ImmutableMap.of(tenantKey, applicationTenantConfiguration.getReporting()));

        final ImmutableMap.Builder<String, Map<String, Map<String, DataSourceElements>>> datasourcesBuilder =
                ImmutableMap.builder();
        applicationTenantConfiguration.getDataSources().forEach((datasourceName, dataSourceElements) ->
                datasourcesBuilder.put(datasourceName,
                        ImmutableMap.of("tenants", ImmutableMap.of(tenantKey, dataSourceElements))));
        datasources = datasourcesBuilder.build();
    }

    public Map<String, Map<String, ReportingSystemProperties>> getReporting() {
        return reporting;
    }

    public void setReporting(Map<String, Map<String, ReportingSystemProperties>> reporting) {
        this.reporting = reporting;
    }

    public Map<String, Map<String, Map<String, DataSourceElements>>> getDatasources() {
        return datasources;
    }

    public void setDatasources(Map<String, Map<String, Map<String, DataSourceElements>>> datasources) {
        this.datasources = datasources;
    }
}
