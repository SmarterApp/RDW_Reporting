package org.opentestsystem.rdw.admin.service;

import org.opentestsystem.rdw.admin.model.PipelineTest;
import org.springframework.security.access.prepost.PreAuthorize;

/**
 * Service responsible for managing pipeline script tests
 */
@PreAuthorize("hasPermission('PERM_PIPELINE_USER_SCRIPT_READ')")
public interface PipelineTestService {

    /**
     * @param id The test entity ID
     * @return The identified test for the pipeline
     * @throws java.util.NoSuchElementException when there is no test for the given parameters
     */
    PipelineTest get(int id);

    /**
     * Creates a pipeline test
     *
     * @param username Identifier used to track the user making the modification
     * @param test The test to create
     * @return The created test
     */
    @PreAuthorize("hasPermission('PERM_PIPELINE_USER_SCRIPT_WRITE')")
    PipelineTest create(String username, PipelineTest test);

    /**
     * Updates a pipeline test
     *
     * @param username Identifier used to track the user making the modification
     * @param test The test to update
     * @return The updated test
     * @throws java.util.NoSuchElementException when there is no test for the given parameters
     */
    @PreAuthorize("hasPermission('PERM_PIPELINE_USER_SCRIPT_WRITE')")
    PipelineTest update(String username, PipelineTest test);

    /**
     * Deletes a pipeline test
     *
     * @param id The test ID
     * @throws java.util.NoSuchElementException when there is no test for the given parameters
     */
    @PreAuthorize("hasPermission('PERM_PIPELINE_USER_SCRIPT_WRITE')")
    void delete(int id);

}
