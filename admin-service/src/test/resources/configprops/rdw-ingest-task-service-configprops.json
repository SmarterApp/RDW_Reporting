{
  "endpoints-org.springframework.boot.actuate.endpoint.EndpointProperties": {
    "prefix": "endpoints",
    "properties": {
      "enabled": true,
      "sensitive": null
    }
  },
  "parent": {
    "spring.cloud.config.retry-org.springframework.cloud.config.client.RetryProperties": {
      "prefix": "spring.cloud.config.retry",
      "properties": {
        "maxAttempts": 6,
        "initialInterval": 2000,
        "maxInterval": 3000,
        "multiplier": 1.1
      }
    },
    "configClientProperties": {
      "prefix": "spring.cloud.config",
      "properties": {
        "headers": {},
        "profile": "awsqa",
        "label": "develop,master",
        "uri": "http://configuration-service",
        "enabled": true,
        "failFast": true,
        "token": null,
        "authorization": null,
        "password": null,
        "discovery": {
          "enabled": false,
          "serviceId": "configserver"
        },
        "name": "rdw-ingest-task-service",
        "username": "user"
      }
    },
    "spring.cloud.config-org.springframework.cloud.bootstrap.config.PropertySourceBootstrapProperties": {
      "prefix": "spring.cloud.config",
      "properties": {
        "overrideSystemProperties": true,
        "overrideNone": false,
        "allowOverride": true
      }
    },
    "encrypt-org.springframework.cloud.bootstrap.encrypt.KeyProperties": {
      "prefix": "encrypt",
      "properties": {
        "failOnError": true,
        "key": null,
        "keyStore": {
          "location": null,
          "password": null,
          "alias": null,
          "secret": null
        }
      }
    }
  },
  "management.info-org.springframework.boot.actuate.autoconfigure.InfoContributorProperties": {
    "prefix": "management.info",
    "properties": {
      "git": {
        "mode": "SIMPLE"
      }
    }
  },
  "metricsEndpoint": {
    "prefix": "endpoints.metrics",
    "properties": {
      "id": "metrics",
      "sensitive": true,
      "enabled": true
    }
  },
  "inetUtilsProperties": {
    "prefix": "spring.cloud.inetutils",
    "properties": {
      "ignoredInterfaces": [],
      "preferredNetworks": [],
      "defaultIpAddress": "127.0.0.1",
      "timeoutSeconds": 1,
      "defaultHostname": "localhost",
      "useOnlySiteLocalInterfaces": false
    }
  },
  "featuresEndpoint": {
    "prefix": "endpoints.features",
    "properties": {
      "id": "features",
      "sensitive": false,
      "enabled": true
    }
  },
  "environmentEndpoint": {
    "prefix": "endpoints.env",
    "properties": {
      "id": "env",
      "sensitive": true,
      "enabled": true
    }
  },
  "configClientHealthProperties": {
    "prefix": "health.config",
    "properties": {
      "timeToLive": 300000,
      "enabled": false
    }
  },
  "spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties": {
    "prefix": "spring.cloud.service-registry.auto-registration",
    "properties": {
      "enabled": true,
      "registerManagement": true,
      "failFast": false
    }
  },
  "healthMvcEndpoint": {
    "prefix": "endpoints.health",
    "properties": {
      "path": "/health"
    }
  },
  "serverProperties": {
    "prefix": "server",
    "properties": {
      "contextParameters": {},
      "address": null,
      "maxHttpPostSize": 0,
      "undertow": {
        "maxHttpPostSize": -1,
        "bufferSize": null,
        "buffersPerRegion": null,
        "ioThreads": null,
        "workerThreads": null,
        "directBuffers": null,
        "accesslog": {
          "enabled": null,
          "pattern": "common",
          "prefix": "access_log.",
          "suffix": "log",
          "dir": "/logs",
          "rotate": true
        }
      },
      "tomcat": {
        "accesslog": {
          "enabled": false,
          "pattern": "common",
          "directory": "logs",
          "prefix": "access_log",
          "suffix": ".log",
          "rotate": true,
          "renameOnRotate": false,
          "fileDateFormat": ".yyyy-MM-dd",
          "requestAttributesEnabled": false,
          "buffered": true
        },
        "internalProxies": "10\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|192\\.168\\.\\d{1,3}\\.\\d{1,3}|169\\.254\\.\\d{1,3}\\.\\d{1,3}|127\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|172\\.1[6-9]{1}\\.\\d{1,3}\\.\\d{1,3}|172\\.2[0-9]{1}\\.\\d{1,3}\\.\\d{1,3}|172\\.3[0-1]{1}\\.\\d{1,3}\\.\\d{1,3}|0:0:0:0:0:0:0:1|::1",
        "protocolHeader": null,
        "protocolHeaderHttpsValue": "https",
        "portHeader": "X-Forwarded-Port",
        "remoteIpHeader": null,
        "basedir": null,
        "backgroundProcessorDelay": 10,
        "maxThreads": 2,
        "minSpareThreads": 10,
        "maxHttpPostSize": 2097152,
        "redirectContextRoot": true,
        "uriEncoding": "UTF-8",
        "maxConnections": 2,
        "acceptCount": 100,
        "additionalTldSkipPatterns": []
      },
      "displayName": "application",
      "session": {
        "timeout": null,
        "trackingModes": null,
        "persistent": false,
        "storeDir": null,
        "cookie": {
          "name": null,
          "domain": null,
          "path": null,
          "comment": null,
          "httpOnly": null,
          "secure": null,
          "maxAge": null
        }
      },
      "contextPath": null,
      "error": {
        "path": "/error",
        "includeStacktrace": "NEVER"
      },
      "ssl": null,
      "serverHeader": null,
      "useForwardHeaders": null,
      "port": 8008,
      "maxHttpHeaderSize": 131072,
      "servletPath": "/",
      "jspServlet": null,
      "jetty": {
        "maxHttpPostSize": 200000,
        "acceptors": -1,
        "selectors": -1
      },
      "connectionTimeout": null
    }
  },
  "spring.metrics.export-org.springframework.boot.actuate.metrics.export.MetricExportProperties": {
    "prefix": "spring.metrics.export",
    "properties": {
      "excludes": null,
      "statsd": {
        "host": null,
        "port": 8125,
        "prefix": null
      },
      "includes": null,
      "triggers": {},
      "enabled": true,
      "redis": {
        "prefix": "spring.metrics.rdw-ingest-task-service.0d843f73c1c3e02e752c2ebae5cfbaf7",
        "key": "******"
      },
      "aggregate": {
        "prefix": "rdw-ingest-task-service.0d843f73c1c3e02e752c2ebae5cfbaf7",
        "keyPattern": "k.d"
      }
    }
  },
  "configurationPropertiesReportEndpoint": {
    "prefix": "endpoints.configprops",
    "properties": {
      "id": "configprops",
      "sensitive": true,
      "enabled": true
    }
  },
  "security.oauth2.client-org.springframework.boot.autoconfigure.security.oauth2.OAuth2ClientProperties": {
    "prefix": "security.oauth2.client",
    "properties": {
      "clientSecret": "******",
      "clientId": null
    }
  },
  "loggersMvcEndpoint": {
    "prefix": "endpoints.loggers",
    "properties": {
      "path": "/loggers"
    }
  },
  "loggersEndpoint": {
    "prefix": "endpoints.loggers",
    "properties": {
      "id": "loggers",
      "sensitive": true,
      "enabled": true
    }
  },
  "endpoints.jmx-org.springframework.boot.actuate.autoconfigure.EndpointMBeanExportProperties": {
    "prefix": "endpoints.jmx",
    "properties": {
      "uniqueNames": false,
      "staticNames": {},
      "enabled": true,
      "domain": ""
    }
  },
  "spring.http.encoding-org.springframework.boot.autoconfigure.web.HttpEncodingProperties": {
    "prefix": "spring.http.encoding",
    "properties": {
      "charset": "UTF-8",
      "force": false,
      "mapping": null,
      "forceRequest": false,
      "forceResponse": false
    }
  },
  "shutdownEndpoint": {
    "prefix": "endpoints.shutdown",
    "properties": {
      "id": "shutdown",
      "sensitive": true,
      "enabled": false
    }
  },
  "beansEndpoint": {
    "prefix": "endpoints.beans",
    "properties": {
      "id": "beans",
      "sensitive": true,
      "enabled": true
    }
  },
  "requestMappingEndpoint": {
    "prefix": "endpoints.mappings",
    "properties": {
      "id": "mappings",
      "sensitive": true,
      "enabled": true
    }
  },
  "refreshEndpoint": {
    "prefix": "endpoints.refresh",
    "properties": {
      "id": "refresh",
      "sensitive": true,
      "enabled": true
    }
  },
  "scopedTarget.dataSourceElementsProperties": {
    "prefix": "datasources.warehouse_rw",
    "properties": {
      "schemaSearchPath": null,
      "urlParts": {
        "protocol": "jdbc:mysql:",
        "hosts": "rdw-aurora-qa-cluster.cluster-cugsexobhx8t.us-west-2.rds.amazonaws.com:3306",
        "database": "warehouse",
        "properties": "useSSL=false&useLegacyDatetimeCode=false&characterEncoding=utf8&connectTimeout=10000&socketTimeout=40000"
      },
      "tenants": {
        "CA_S001": {
          "url": null,
          "urlParts": {
            "protocol": null,
            "hosts": null,
            "database": "warehouse_ca_s001",
            "properties": null
          },
          "username": "cas001",
          "password": "******",
          "schemaSearchPath": null,
          "testWhileIdle": null,
          "validationQuery": null,
          "validationInterval": null,
          "driverClassName": null,
          "initialSize": null,
          "maxActive": null,
          "minIdle": null,
          "maxIdle": null,
          "removeAbandoned": null,
          "removeAbandonedTimeout": null,
          "logAbandoned": null
        },
        "CA_S002": {
          "url": null,
          "urlParts": {
            "protocol": null,
            "hosts": null,
            "database": "warehouse_ca_s002",
            "properties": null
          },
          "username": "cas002",
          "password": "******",
          "schemaSearchPath": null,
          "testWhileIdle": null,
          "validationQuery": null,
          "validationInterval": null,
          "driverClassName": null,
          "initialSize": null,
          "maxActive": null,
          "minIdle": null,
          "maxIdle": null,
          "removeAbandoned": null,
          "removeAbandonedTimeout": null,
          "logAbandoned": null
        },
        "CA": {
          "url": null,
          "urlParts": {
            "protocol": null,
            "hosts": null,
            "database": "warehouse",
            "properties": null
          },
          "username": "sbac",
          "password": "******",
          "schemaSearchPath": null,
          "testWhileIdle": null,
          "validationQuery": null,
          "validationInterval": null,
          "driverClassName": null,
          "initialSize": null,
          "maxActive": null,
          "minIdle": null,
          "maxIdle": null,
          "removeAbandoned": null,
          "removeAbandonedTimeout": null,
          "logAbandoned": null
        },
        "TS": {
          "url": null,
          "urlParts": {
            "protocol": null,
            "hosts": null,
            "database": "ts_warehouse",
            "properties": null
          },
          "username": "sbac",
          "password": "******",
          "schemaSearchPath": null,
          "testWhileIdle": null,
          "validationQuery": null,
          "validationInterval": null,
          "driverClassName": null,
          "initialSize": null,
          "maxActive": null,
          "minIdle": null,
          "maxIdle": null,
          "removeAbandoned": null,
          "removeAbandonedTimeout": null,
          "logAbandoned": null
        }
      },
      "minIdle": 4,
      "validationQuery": "SELECT 1",
      "initialSize": 4,
      "url": "jdbc:mysql://rdw-aurora-qa-cluster.cluster-cugsexobhx8t.us-west-2.rds.amazonaws.com:3306/warehouse?useSSL=false&useLegacyDatetimeCode=false&characterEncoding=utf8&connectTimeout=10000&socketTimeout=40000",
      "logAbandoned": false,
      "password": "******",
      "testWhileIdle": true,
      "maxIdle": 10,
      "removeAbandoned": false,
      "driverClassName": "com.mysql.jdbc.Driver",
      "removeAbandonedTimeout": 60,
      "username": "root",
      "validationInterval": 10000,
      "maxActive": 10
    }
  },
  "spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties": {
    "prefix": "spring.transaction",
    "properties": {
      "rollbackOnCommitFailure": null,
      "defaultTimeout": null
    }
  },
  "statusEndpoint": {
    "prefix": "endpoints.status",
    "properties": {
      "id": "status",
      "sensitive": true,
      "enabled": true
    }
  },
  "spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties": {
    "prefix": "spring.jackson",
    "properties": {
      "serialization": {
        "WRITE_DATES_AS_TIMESTAMPS": false
      },
      "propertyNamingStrategy": null,
      "defaultPropertyInclusion": "NON_NULL",
      "parser": {},
      "dateFormat": null,
      "deserialization": {},
      "generator": {},
      "timeZone": null,
      "mapper": {},
      "locale": null,
      "jodaDateTimeFormat": null
    }
  },
  "heapdumpMvcEndpoint": {
    "prefix": "endpoints.heapdump",
    "properties": {
      "path": "/heapdump",
      "sensitive": true,
      "enabled": true
    }
  },
  "endpoints.cors-org.springframework.boot.actuate.autoconfigure.EndpointCorsProperties": {
    "prefix": "endpoints.cors",
    "properties": {
      "allowedOrigins": [],
      "maxAge": 1800,
      "exposedHeaders": [],
      "allowedHeaders": [],
      "allowedMethods": [],
      "allowCredentials": null
    }
  },
  "environmentMvcEndpoint": {
    "prefix": "endpoints.env",
    "properties": {
      "path": "/env"
    }
  },
  "spring.http.multipart-org.springframework.boot.autoconfigure.web.MultipartProperties": {
    "prefix": "spring.http.multipart",
    "properties": {
      "maxRequestSize": "10MB",
      "fileSizeThreshold": "0",
      "location": null,
      "maxFileSize": "1MB",
      "enabled": true,
      "resolveLazily": false
    }
  },
  "spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties": {
    "prefix": "spring.info",
    "properties": {
      "build": {
        "location": {}
      },
      "git": {
        "location": {}
      }
    }
  },
  "spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties": {
    "prefix": "spring.datasource",
    "properties": {
      "schema": null,
      "dataPassword": null,
      "data": null,
      "dataUsername": null,
      "generateUniqueName": false,
      "xa": {
        "dataSourceClassName": null,
        "properties": {}
      },
      "type": null,
      "separator": ";",
      "url": null,
      "platform": "all",
      "continueOnError": false,
      "jndiName": null,
      "sqlScriptEncoding": null,
      "password": null,
      "schemaPassword": null,
      "name": "testdb",
      "driverClassName": null,
      "initialize": true,
      "schemaUsername": null,
      "username": null
    }
  },
  "traceEndpoint": {
    "prefix": "endpoints.trace",
    "properties": {
      "id": "trace",
      "sensitive": true,
      "enabled": true
    }
  },
  "metricsMvcEndpoint": {
    "prefix": "endpoints.metrics",
    "properties": {
      "path": "/metrics"
    }
  },
  "infoEndpoint": {
    "prefix": "endpoints.info",
    "properties": {
      "id": "info",
      "sensitive": false,
      "enabled": true
    }
  },
  "auditEventMvcEndpoint": {
    "prefix": "endpoints.auditevents",
    "properties": {
      "path": "/auditevents",
      "sensitive": true,
      "enabled": true
    }
  },
  "management.trace-org.springframework.boot.actuate.trace.TraceProperties": {
    "prefix": "management.trace",
    "properties": {
      "include": [
        "ERRORS",
        "COOKIES",
        "RESPONSE_HEADERS",
        "TIME_TAKEN",
        "REQUEST_HEADERS"
      ]
    }
  },
  "spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties": {
    "prefix": "spring.resources",
    "properties": {
      "cachePeriod": null,
      "addMappings": true,
      "chain": {
        "cache": true,
        "htmlApplicationCache": false,
        "gzipped": false,
        "strategy": {
          "fixed": {
            "enabled": false,
            "paths": [
              "/**"
            ],
            "version": null
          },
          "content": {
            "enabled": false,
            "paths": [
              "/**"
            ]
          }
        }
      },
      "staticLocations": [
        "/",
        "classpath:/META-INF/resources/",
        "classpath:/resources/",
        "classpath:/static/",
        "classpath:/public/"
      ]
    }
  },
  "management.health.status-org.springframework.boot.actuate.autoconfigure.HealthIndicatorProperties": {
    "prefix": "management.health.status",
    "properties": {
      "order": null
    }
  },
  "healthEndpoint": {
    "prefix": "endpoints.health",
    "properties": {
      "timeToLive": 1000,
      "id": "health",
      "sensitive": false,
      "enabled": true
    }
  },
  "scopedTarget.tenantProperties": {
    "prefix": "tenantProperties",
    "properties": {
      "tenants": {
        "CA_S001": {
          "id": "CA_S001",
          "key": "******",
          "name": "California Sandbox 001",
          "description": null,
          "sandbox": true,
          "sandboxDataset": "demo-dataset",
          "created": {}
        },
        "CA_S002": {
          "id": "CA_S002",
          "key": "******",
          "name": "California Sandbox 002",
          "description": null,
          "sandbox": true,
          "sandboxDataset": "sbac-dataset",
          "created": {}
        },
        "CA": {
          "id": "CA",
          "key": "******",
          "name": "California",
          "description": null,
          "sandbox": false,
          "sandboxDataset": null,
          "created": {}
        },
        "TS": {
          "id": "TS",
          "key": "******",
          "name": "Test State Tenant",
          "description": null,
          "sandbox": false,
          "sandboxDataset": null,
          "created": {}
        }
      },
      "status": {
        "tenantKeys": [
          "CA_S001",
          "CA_S002",
          "CA",
          "TS"
        ]
      }
    }
  },
  "configClientProperties": {
    "prefix": "spring.cloud.config",
    "properties": {
      "headers": {},
      "profile": "awsqa",
      "label": "develop,master",
      "uri": "http://configuration-service",
      "enabled": true,
      "failFast": true,
      "token": null,
      "authorization": null,
      "password": null,
      "discovery": {
        "enabled": false,
        "serviceId": "configserver"
      },
      "name": "rdw-ingest-task-service",
      "username": "user"
    }
  },
  "endpoints.metrics.filter-org.springframework.boot.actuate.autoconfigure.MetricFilterProperties": {
    "prefix": "endpoints.metrics.filter",
    "properties": {
      "counterSubmissions": [
        "MERGED"
      ],
      "gaugeSubmissions": [
        "MERGED"
      ]
    }
  },
  "securityProperties": {
    "prefix": "security",
    "properties": {
      "headers": {
        "xss": true,
        "cache": true,
        "frame": true,
        "contentType": true,
        "contentSecurityPolicy": null,
        "contentSecurityPolicyMode": "DEFAULT",
        "hsts": "ALL"
      },
      "ignored": [],
      "sessions": "STATELESS",
      "requireSsl": false,
      "filterOrder": -100,
      "enableCsrf": false,
      "filterDispatcherTypes": null,
      "basic": {
        "enabled": true,
        "realm": "Spring",
        "path": [
          "/**"
        ],
        "authorizeMode": "ROLE"
      },
      "user": {
        "name": "user",
        "password": "******",
        "role": [
          "USER",
          "ACTUATOR"
        ]
      }
    }
  },
  "dumpEndpoint": {
    "prefix": "endpoints.dump",
    "properties": {
      "id": "dump",
      "sensitive": true,
      "enabled": true
    }
  },
  "autoConfigurationReportEndpoint": {
    "prefix": "endpoints.autoconfig",
    "properties": {
      "id": "autoconfig",
      "sensitive": true,
      "enabled": true
    }
  },
  "managementServerProperties": {
    "prefix": "management",
    "properties": {
      "security": {
        "enabled": false,
        "roles": [
          "ACTUATOR"
        ],
        "sessions": "STATELESS"
      },
      "address": null,
      "port": null,
      "addApplicationContextHeader": true,
      "contextPath": "",
      "ssl": null
    }
  },
  "endpoints.health-org.springframework.boot.actuate.autoconfigure.HealthMvcEndpointProperties": {
    "prefix": "endpoints.health",
    "properties": {
      "mapping": {}
    }
  },
  "simpleDiscoveryProperties": {
    "prefix": "spring.cloud.discovery.client.simple",
    "properties": {
      "instances": {},
      "local": {
        "uri": "http://task-server-deployment-55d75c48f-q7wt8:0",
        "metadata": {},
        "serviceId": "rdw-ingest-task-service"
      }
    }
  },
  "resourceServerProperties": {
    "prefix": "security.oauth2.resource",
    "properties": {
      "preferTokenInfo": true,
      "filterOrder": 2147483639,
      "userInfoUri": null,
      "jwt": {
        "keyValue": null,
        "keyUri": null
      },
      "id": null,
      "serviceId": "resource",
      "tokenType": "Bearer",
      "tokenInfoUri": null,
      "jwk": {
        "keySetUri": null
      }
    }
  },
  "spring.mvc-org.springframework.boot.autoconfigure.web.WebMvcProperties": {
    "prefix": "spring.mvc",
    "properties": {
      "dateFormat": null,
      "servlet": {
        "loadOnStartup": -1
      },
      "staticPathPattern": "/**",
      "dispatchOptionsRequest": true,
      "dispatchTraceRequest": false,
      "locale": null,
      "ignoreDefaultModelOnRedirect": true,
      "logResolvedException": false,
      "async": {
        "requestTimeout": null
      },
      "messageCodesResolverFormat": null,
      "mediaTypes": {},
      "view": {
        "prefix": null,
        "suffix": null
      },
      "localeResolver": "ACCEPT_HEADER",
      "throwExceptionIfNoHandlerFound": false
    }
  },
  "diskSpaceHealthIndicatorProperties": {
    "prefix": "management.health.diskspace",
    "properties": {
      "path": "/.",
      "threshold": 10485760
    }
  },
  "scopedTarget.artClientPropertiesRoot": {
    "prefix": "task-update-organizations-art-client",
    "properties": {
      "tenants": {
        "TS": {
          "oauth2": {
            "grantType": "password",
            "clientAuthenticationScheme": "header",
            "tokenName": "access_token",
            "username": "ca.user@example.com",
            "password": "******",
            "authenticationScheme": "header"
          }
        }
      },
      "groupsOfSchoolsUrl": "https://art-deployment.sbtds.org/rest/groupofinstitution?stateAbbreviation={state}&pageSize=1000",
      "groupsOfDistrictsUrl": "https://art-deployment.sbtds.org/rest/groupofdistrict?stateAbbreviation={state}&pageSize=1000",
      "districtsUrl": "https://art-deployment.sbtds.org/rest/district?stateAbbreviation={state}&pageSize=5000",
      "statusUrl": "https://art-deployment.sbtds.org/rest/status",
      "oauth2": {
        "grantType": "password",
        "clientId": "sbacdw",
        "accessTokenUri": "https://sso-deployment.sbtds.org:443/auth/oauth2/access_token?realm=/sbac",
        "clientSecret": "******",
        "clientAuthenticationScheme": "header",
        "tokenName": "access_token",
        "username": "prime.user@example.com",
        "password": "******",
        "authenticationScheme": "header"
      }
    }
  },
  "scopedTarget.sendReconciliationReportPropertiesRoot": {
    "prefix": "task-send-reconciliation-report",
    "properties": {
      "tenants": {
        "TS": {
          "archives": [
            {
              "uriRoot": "file:///tmp/"
            },
            {
              "uriRoot": "s3:///bucket",
              "s3AccessKey": "AccessKey",
              "s3SecretKey": "******",
              "s3RegionStatic": "us-west-2",
              "s3Sse": "AES256"
            }
          ],
          "log": false
        }
      }
    }
  },
  "scopedTarget.importServiceClientPropertiesRoot": {
    "prefix": "task-update-organizations-import-service-client",
    "properties": {
      "organizationsImportsUrl": "http://localhost:8080/organizations/imports",
      "tenants": {
        "TS": {
          "oauth2": {
            "grantType": "password",
            "clientAuthenticationScheme": "header",
            "tokenName": "access_token",
            "username": "ca.user@example.com",
            "password": "******",
            "authenticationScheme": "header"
          }
        }
      },
      "oauth2": {
        "grantType": "password",
        "clientId": "sbacdw",
        "accessTokenUri": "https://sso-deployment.sbtds.org:443/auth/oauth2/access_token?realm=/sbac",
        "clientSecret": "******",
        "clientAuthenticationScheme": "header",
        "tokenName": "access_token",
        "authenticationScheme": "header"
      },
      "statusUrl": "http://localhost:8081/status"
    }
  }
}
