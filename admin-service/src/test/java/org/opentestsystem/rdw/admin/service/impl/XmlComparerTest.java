package org.opentestsystem.rdw.admin.service.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.junit.MockitoJUnitRunner;
import org.opentestsystem.rdw.admin.service.Comparer;

import static org.assertj.core.api.Assertions.assertThat;

@RunWith(MockitoJUnitRunner.class)
public class XmlComparerTest {

    private Comparer<String> comparer = new XmlComparer();

    @Test()
    public void itShouldReturnTrueWhenEqual() {
        final String input = "<element></element>";
        assertThat(comparer.equals(input, input)).isTrue();
    }

    @Test()
    public void itShouldReturnFalseWhenInequal() {
        final String input = "<element></element>";
        assertThat(comparer.equals(input, "<elements></elements>")).isFalse();
    }

    @Test()
    public void itShouldIgnoreLineEndingWhitespace() {
        final String input = "\n<element>\n</element>\n";
        assertThat(comparer.equals(input, input.replaceAll("\n", ""))).isTrue();
    }

    @Test()
    public void itShouldIgnoreWhitespace() {
        final String input = "  \t<element  \t>  \t</element  \t>  \t";
        assertThat(comparer.equals(input, input)).isTrue();
    }

    @Test()
    public void itShouldIgnoreComments() {
        final String input = "<!-- comment --><element></element><!-- comment -->";
        assertThat(comparer.equals(input, input.replaceAll("<!-- comment -->", ""))).isTrue();
    }

    @Test()
    public void itShouldIgnoreHeader() {
        final String input = "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\" ?><element></element>";
        assertThat(comparer.equals(input, input.replaceAll("<\\?xml>", ""))).isTrue();
    }

}
