package org.opentestsystem.rdw.admin.repository.impl;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.admin.repository.RepositoryIT;
import org.opentestsystem.rdw.schema.SchemaMigration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.test.annotation.IfProfileValue;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.transaction.annotation.Transactional;

import javax.sql.DataSource;
import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;
import static org.opentestsystem.rdw.schema.SchemaMigration.Migration;

/**
 * This test will only run against Aurora and S3
 * it requires access to S3 in AWS
 *
 * <p>
 * This test will run only if the system property test-archive.root is set to s3://rdw-ci-archive
 * <p>
 * Additionally, AWS and Aurora credentials must be set:<ul>
 * <li>archive.s3-access-key</li>
 * <li>archive.s3-secret-key</li>
 * <li>spring.admin_datasource.username</li>
 * <li>spring.admin_datasource.password</li>
 * </ul>
 * For example,<pre>
 * java -Darchive.uri-root=s3://rdw-ci-archive
 *      -Darchive.s3-access-key=#####################
 *      -Darchive.s3-secret-key=#####################
 *      -Dspring.admin_datasource.url-parts.hosts=rdw-aurora-ci.cugsexobhx8t.us-west-2.rds.amazonaws.com:3306
 *      -Dspring.admin_datasource.url-parts.database=sandbox_it_warehouse_test
 *      -Dspring.admin_datasource.username=###################
 *      -Dspring.admin_datasource.password=###################
 * </pre>
 */
@RunWith(SpringRunner.class)
@IfProfileValue(name = "archive.uri-root", value = "s3://rdw-ci-archive")
@RepositoryIT
@ContextConfiguration(classes = {
        JdbcDatasetImport.class
})
@Transactional(transactionManager = "warehouseTxManager")
public class JdbcDatasetImportIT {

    private final String targetDatabase = "sandbox_it_warehouse_test";
    private final String importDatabase = "warehouse";
    private final String datasetName = "test-dataset";

    @Autowired
    private JdbcDatasetImport jdbcDatasetImport;

    @Autowired
    @Qualifier("adminDataSource")
    private DataSource adminDataSource;

    private SchemaMigration warehouseMigration;

    @Before
    public void setUp() {
        warehouseMigration = new SchemaMigration(adminDataSource, targetDatabase, Migration.Warehouse);
    }

    @Test
    public void testLoad() {
        warehouseMigration.clean();
        warehouseMigration.migrate();
        assertThat(jdbcDatasetImport.isDatabaseEmpty(targetDatabase, importDatabase)).isTrue();
        jdbcDatasetImport.loadDataset(targetDatabase, datasetName, importDatabase);
        assertThat(jdbcDatasetImport.isDatabaseEmpty(targetDatabase, importDatabase)).isFalse();
    }

    @Test
    public void manifestShouldLoadFromS3() {
        List<String> tables = jdbcDatasetImport.manifest(datasetName, importDatabase);
        assertThat(tables.size()).isGreaterThan(0);
        assertThat(tables.stream().filter(f -> f.contains("exam.txt")).findFirst())
                .isNotEmpty();
    }

}
