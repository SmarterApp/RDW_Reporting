package org.opentestsystem.rdw.admin.status;


import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.rdw.common.model.AssessmentType;
import org.opentestsystem.rdw.common.status.Rating;
import org.opentestsystem.rdw.common.status.Status;
import org.springframework.jdbc.core.JdbcTemplate;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

import static com.google.common.collect.Lists.newArrayList;
import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Matchers.anyString;
import static org.mockito.Matchers.eq;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class DatabaseStatusIndicatorTest {

    private DatabaseStatusIndicator statusIndicator;
    private JdbcTemplate jdbcTemplate;

    @Before
    public void createStatusIndicator() {
        jdbcTemplate = mock(JdbcTemplate.class);
        when(jdbcTemplate.queryForList(anyString(), eq(String.class)))
                .thenReturn(Arrays.stream(AssessmentType.values()).map(AssessmentType::name).collect(Collectors.toList()));

        statusIndicator = new DatabaseStatusIndicator(jdbcTemplate);
    }

    @Test
    public void itShouldHaveAName() {
        assertThat(statusIndicator.name()).isEqualTo("database");
    }

    @Test
    public void itShouldBeReadDatabaseLevel() {
        assertThat(statusIndicator.doLevelCheck(2)).isFalse();
        assertThat(statusIndicator.doLevelCheck(3)).isTrue();
    }

//    @Test
//    public void itShouldReturnIdealStatus() {
//        final Status status = statusIndicator.status(3);
//        assertThat(status.getStatusRating()).isEqualTo(Rating.Ideal.value());
//        assertThat((List<Status>)status.getDetails().get("databaseOperations")).isNotEmpty();
//    }

    @Test
    public void itShouldReturnWarningStatusIfWrongNumberOfCodes() {
        when(jdbcTemplate.queryForList(anyString(), eq(String.class))).thenReturn(newArrayList());
        final Status status = statusIndicator.status(3);
        assertThat(status.getStatusRating()).isEqualTo(Rating.Warning.value());
    }
}