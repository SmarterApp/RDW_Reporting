package org.opentestsystem.rdw.admin.model;

import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.assertj.core.api.Assertions.assertThat;

public class SandboxConfigurationTest {

    private ObjectMapper mapper = new ObjectMapper();

    String sandboxCAInterim = "{" +
            "   \"sandbox\":{" +
            "      \"id\":\"CA\"," +
            "      \"key\":\"CA\"," +
            "      \"name\":\"California\"," +
            "      \"description\":\"A sandbox for CA using sbac_interim dataset\"," +
            "      \"tenantKey\":\"CA\"," +
            "      \"dataSetId\":\"sbac_interim\"" +
            "   }," +
            "   \"applicationSandboxConfiguration\":{" +
            "      \"reporting\":{" +
            "         \"analyticsTrackingId\":\"UA-102446884-4\"," +
            "         \"interpretiveGuideUrl\":\"https://portal.smarterbalanced.org/library/en/reporting-system-interpretive-guide.pdf\"," +
            "         \"accessDeniedUrl\":\"forward:/assets/public/access-denied.html\"," +
            "         \"landingPageUrl\":null," +
            "         \"irisVendorId\":null," +
            "         \"minItemDataYear\":null," +
            "         \"percentileDisplayEnabled\":true," +
            "         \"reportLanguages\":[" +
            "            \"en\"" +
            "         ]," +
            "         \"schoolYear\":2018," +
            "         \"state\":{" +
            "            \"name\":null," +
            "            \"code\":null" +
            "         }," +
            "         \"transferAccessEnabled\":true," +
            "         \"translationLocation\":null," +
            "         \"uiLanguages\":[" +
            "         ]," +
            "         \"userGuideUrl\":\"https://portal.smarterbalanced.org/library/en/reporting-system-user-guide.pdf\"," +
            "         \"targetReport\":{" +
            "            \"insufficientDataCutoff\":null," +
            "            \"minNumberOfStudents\":null" +
            "         }," +
            "         \"studentFields\":{" +
            "         }," +
            "         \"effectiveReportLanguages\":[" +
            "            \"en\"" +
            "         ]" +
            "      }," +
            "      \"aggregator\":{" +
            "         \"assessmentTypes\":[" +
            "            \"ica\"," +
            "            \"sum\"," +
            "            \"iab\"" +
            "         ]," +
            "         \"statewideUserAssessmentTypes\":[" +
            "            \"sum\"," +
            "            \"iab\"" +
            "         ]," +
            "         \"stateAggregateAssessmentTypes\":[" +
            "         ]" +
            "      }" +
            "   }," +
            "   \"localization\":{" +
            "      \"common\":{" +
            "         \"ethnicity\":{" +
            "            \"AmericanIndianOrAlaskaNative\":\"American Indian or Alaska Native\"," +
            "            \"Asian\":\"Asian\"," +
            "            \"BlackOrAfricanAmerican\":\"Black or African American\"," +
            "            \"DemographicRaceTwoOrMoreRaces\":\"Demographic Race of Two or More\"," +
            "            \"Filipino\":\"Filipino\"," +
            "            \"HispanicOrLatinoEthnicity\":\"Hispanic/Latino\"," +
            "            \"NativeHawaiianOrOtherPacificIslander\":\"Native Hawaiian or Pacific Islander\"," +
            "            \"White\":\"White\"" +
            "         }," +
            "         \"gender\":{" +
            "            \"Female\":\"Female\"," +
            "            \"Male\":\"Male\"," +
            "            \"Nonbinary\":\"Nonbinary\"," +
            "            \"undefined\":\"Not Stated\"" +
            "         }" +
            "      }" +
            "   }" +
            "}";


    @Test
    public void isShouldHandleSandboxLocalization() throws Exception {
        SandboxConfiguration sandboxConfiguration = SandboxConfigurationStubs.getCaInterimSandboxConfiguration();
        String sandboxCa = mapper.writeValueAsString(sandboxConfiguration);

        SandboxConfiguration sandboxCfg = mapper.readValue(sandboxCa, SandboxConfiguration.class);
        assertThat(sandboxCfg).isNotNull();
        assertThat(sandboxConfiguration.getSandbox().getKey()).isEqualTo(sandboxCfg.getSandbox().getKey());
        assertThat(sandboxCfg.getLocalization()).isNotNull();
        assertThat(sandboxCfg.getLocalization()).contains("common");
        assertThat(sandboxCfg.getLocalization()).contains("ethnicity");
        assertThat(sandboxCfg.getLocalization()).contains("AmericanIndianOrAlaskaNative");
        assertThat(sandboxCfg.getLocalization()).contains("Asian");

    }


    @Test
    public void isShouldHandleLocalizationFromJsonString() throws Exception {
        SandboxConfiguration sandboxCfg = mapper.readValue(sandboxCAInterim, SandboxConfiguration.class);
        assertThat(sandboxCfg).isNotNull();
        assertThat(sandboxCfg.getLocalization()).isNotNull();
        assertThat(sandboxCfg.getLocalization()).contains("common");
        assertThat(sandboxCfg.getLocalization()).contains("ethnicity");
        assertThat(sandboxCfg.getLocalization()).contains("AmericanIndianOrAlaskaNative");
        assertThat(sandboxCfg.getLocalization()).contains("Asian");


    }
}
