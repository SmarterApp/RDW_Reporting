package org.opentestsystem.rdw.admin.service.impl;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;
import org.opentestsystem.rdw.admin.repository.PipelineRepository;
import org.opentestsystem.rdw.admin.repository.PipelineScriptRepository;
import org.opentestsystem.rdw.admin.repository.PipelineTestRepository;
import org.opentestsystem.rdw.admin.repository.PublishedPipelineRepository;
import org.opentestsystem.rdw.script.Pipeline;
import org.opentestsystem.rdw.script.PipelineFactory;
import org.opentestsystem.rdw.script.ScriptCompiler;
import org.springframework.beans.factory.annotation.Autowired;

import static com.google.common.collect.Lists.newArrayList;
import static org.mockito.Mockito.when;

@RunWith(MockitoJUnitRunner.class)
public class DefaultPipelineServiceTest {

    @Mock
    private PipelineRepository pipelineRepository;

    @Mock
    private PipelineScriptRepository pipelineScriptRepository;

    @Mock
    private PipelineTestRepository pipelineTestRepository;

    @Mock
    private PublishedPipelineRepository publishedPipelineRepository;

    @Mock
    private ScriptCompiler scriptCompiler;

    @Mock
    private PipelineFactory pipelineFactory;

    @Autowired
    private DefaultPipelineService service;

    @Before
    public void before() {

    }

    @Test
    public void itShouldRunTests() {

//        final Pipeline pipeline = Pipeline.builder()
//                .id(1)
//                .code("exam")
//                .inputType("xml")
//                .build();
//
//        when(pipelineRepository.findById(pipeline.getId())).thenReturn(pipeline);
//
//        when(pipelineScriptRepository.findAllByPipeline(pipeline.getId()))
//                .thenReturn(newArrayList(script));
//
//        when(pipelineTestRepository.findAllByPipeline(pipeline.getId()))
//                .thenReturn(newArrayList(test));

        service.test(1);
    }


}
