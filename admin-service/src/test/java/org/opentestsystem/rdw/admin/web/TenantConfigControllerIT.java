package org.opentestsystem.rdw.admin.web;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.MediaType;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;

import org.opentestsystem.rdw.admin.service.impl.DefaultConfigServerClientService;

import static org.mockito.Mockito.when;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

@RunWith(SpringRunner.class)
@WebMvcTest(controllers = {TenantConfigController.class}, secure = false)
public class TenantConfigControllerIT {
    @Autowired
    private MockMvc mvc;

    @MockBean
    DefaultConfigServerClientService service;

    @Test
    public void isShouldSuccessfullyCallDecrypt() throws Exception {
        String encrypted = "{Cipher}BlahBlah";

        when(service.decrypt(encrypted)).thenReturn("decryptedResults");
        mvc.perform(post("/config/decrypt")
                .content(encrypted)
                .characterEncoding("UTF-8")
                .contentType(MediaType.TEXT_PLAIN_VALUE)
                .accept(MediaType.TEXT_PLAIN_VALUE))
                .andExpect(status().isOk());
    }

}