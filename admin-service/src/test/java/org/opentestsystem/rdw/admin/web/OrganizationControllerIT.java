package org.opentestsystem.rdw.admin.web;

import com.google.common.collect.ImmutableList;
import com.google.common.collect.ImmutableSet;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.admin.service.OrganizationService;
import org.opentestsystem.rdw.reporting.common.model.District;
import org.opentestsystem.rdw.reporting.common.model.OrganizationQuery;
import org.opentestsystem.rdw.reporting.common.model.OrganizationType;
import org.opentestsystem.rdw.reporting.common.model.State;
import org.opentestsystem.rdw.reporting.common.security.User;
import org.opentestsystem.rdw.security.Permission;
import org.opentestsystem.rdw.security.PermissionScope;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;

import java.util.EnumSet;

import static org.hamcrest.Matchers.equalTo;
import static org.hamcrest.Matchers.hasSize;
import static org.mockito.Mockito.eq;
import static org.mockito.Mockito.refEq;
import static org.mockito.Mockito.when;
import static org.opentestsystem.rdw.admin.security.AdminPermission.InstructionalResourceWrite;
import static org.opentestsystem.rdw.reporting.common.test.support.PermissionScopes.permissions;
import static org.opentestsystem.rdw.reporting.common.test.support.PermissionScopes.statewide;
import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.user;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

@RunWith(SpringRunner.class)
@WebMvcTest(OrganizationController.class)
public class OrganizationControllerIT {

    @Autowired
    private MockMvc mvc;

    @MockBean
    private OrganizationService service;

    private final User user = User.builderExt()
            .id("user")
            .username("username")
            .password("password")
            .authorities(ImmutableSet.of(new SimpleGrantedAuthority("ROLE_USER")))
            .permissionsById(
                    permissions(new Permission(InstructionalResourceWrite, statewide()))
            )
            .build();

    @Test
    public void itShouldGetOrganizations() throws Exception {
        when(service.findByQuery(eq(PermissionScope.STATEWIDE), refEq(
                OrganizationQuery.builder()
                        .types(EnumSet.of(OrganizationType.State, OrganizationType.District))
                        .limit(20)
                        .name("name")
                        .build()))
        ).thenReturn(ImmutableList.of(
                State.builder()
                        .name("California")
                        .naturalId("CA")
                        .build(),
                District.builder()
                        .name("My District")
                        .naturalId("my_district")
                        .id(123L)
                        .districtGroupId(234L)
                        .build()
        ));

        mvc.perform(get("/organizations?permission=instructional_resource_write&limit=20&name=name&types=State&types=District")
                .with(user(user)))
                .andExpect(status().isOk())
                .andExpect(jsonPath("$.*", hasSize(2)))
                .andExpect(jsonPath("$[0].name", equalTo("California")))
                .andExpect(jsonPath("$[0].naturalId", equalTo("CA")))
                .andExpect(jsonPath("$[1].name", equalTo("My District")))
                .andExpect(jsonPath("$[1].naturalId", equalTo("my_district")))
                .andExpect(jsonPath("$[1].id", equalTo(123)))
                .andExpect(jsonPath("$[1].districtGroupId", equalTo(234)));
    }
}
