package org.opentestsystem.rdw.admin.service.impl;

import org.junit.Before;
import org.junit.Test;

import org.opentestsystem.rdw.admin.multitenant.configserver.ConfigServerClient;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class DefaultConfigServerClientServiceTest {
    // Class under test
    private DefaultConfigServerClientService defaultConfigServerClientService;

    @Before
    public void setUp() {
        ConfigServerClient configServerClient = mock(ConfigServerClient.class);
        when(configServerClient.decryptPassword("encrypted")).thenReturn("decrypted");

        defaultConfigServerClientService = new DefaultConfigServerClientService(configServerClient);
    }

    @Test
    public void itShouldDecryptSecretWithoutPrefix() {
        assertThat(defaultConfigServerClientService.decrypt("encrypted")).isEqualTo("decrypted");
    }

    @Test
    public void itShouldDecryptSecretWithPrefix() {
        assertThat(defaultConfigServerClientService.decrypt("{cipher}encrypted")).isEqualTo("decrypted");
    }
}