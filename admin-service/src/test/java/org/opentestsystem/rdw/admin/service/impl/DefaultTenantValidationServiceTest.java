package org.opentestsystem.rdw.admin.service.impl;

import org.apache.commons.lang.Validate;

import static org.junit.Assert.*;

public class DefaultTenantValidationServiceTest {

    //TODO: some tests for validation

    public void test(){
        Validate.isTrue(true);
    }



//    @Test
//    public void itShouldReturnTrueWhenEachDataSourceIsFound() {
//        when(rdwServiceConfigPropsAccessor.getTenantsReadOnlyDataSourceElements()).thenReturn(TenantConfigurationStubs.getTenantsReadOnlyDataSources());
//        when(rdwServiceConfigPropsAccessor.getTenantsWritableDataSourceElements()).thenReturn(TenantConfigurationStubs.getTenantsWritableDataSources());
//        when(rdwServiceConfigPropsAccessor.getTenantsWarehouseDataSourceElements()).thenReturn(TenantConfigurationStubs.getTenantsWritableDataSources());
//
//        // verify it finds the database for each DataSource
//        assertThat(service.dataSourceExists(RDWDataSourceNames.REPORTING_RO.getName(),
//                TenantConfigurationStubs.getTenantsReadOnlyDataSources().get("CA").getUrlParts().getDatabase())).isTrue();
//        assertThat(service.dataSourceExists(RDWDataSourceNames.REPORTING_RW.getName(),
//                TenantConfigurationStubs.getTenantsWritableDataSources().get("CA").getUrlParts().getDatabase())).isTrue();
//        assertThat(service.dataSourceExists(RDWDataSourceNames.WAREHOUSE_RW.getName(),
//                TenantConfigurationStubs.getTenantsWritableDataSources().get("CA").getUrlParts().getDatabase())).isTrue();
//
//        // olap isn't tested in dataSourceExists
//        verify(rdwServiceConfigPropsAccessor).getTenantsReadOnlyDataSourceElements();
//        verify(rdwServiceConfigPropsAccessor).getTenantsWritableDataSourceElements();
//        verify(rdwServiceConfigPropsAccessor).getTenantsWarehouseDataSourceElements();
//    }
//
//    @Test
//    public void itShouldFailToFindFindEachDataSource() {
//        when(rdwServiceConfigPropsAccessor.getTenantsReadOnlyDataSourceElements()).thenReturn(TenantConfigurationStubs.getTenantsReadOnlyDataSources());
//        when(rdwServiceConfigPropsAccessor.getTenantsWritableDataSourceElements()).thenReturn(TenantConfigurationStubs.getTenantsWritableDataSources());
//        when(rdwServiceConfigPropsAccessor.getTenantsWarehouseDataSourceElements()).thenReturn(TenantConfigurationStubs.getTenantsWritableDataSources());
//        when(rdwServiceConfigPropsAccessor.getTenantsOlapDataSourceElements()).thenReturn(TenantConfigurationStubs.getTenantsOlapDataSources());
//
//        // verify it finds the database for each DataSource
//        assertThat(service.dataSourceExists(RDWDataSourceNames.REPORTING_RO.getName(), "BadDatabase")).isFalse();
//        assertThat(service.dataSourceExists(RDWDataSourceNames.REPORTING_RW.getName(), "BadDatabase")).isFalse();
//        assertThat(service.dataSourceExists(RDWDataSourceNames.WAREHOUSE_RW.getName(), "BadDatabase")).isFalse();
//        // olap isn't checking dataSourceExists - checking it should just return false regardless
//        assertThat(service.dataSourceExists(RDWDataSourceNames.OLAP_RO.getName(),
//                TenantConfigurationStubs.getTenantsReadOnlyDataSources().get("CA").getUrlParts().getDatabase())).isFalse();
//        assertThat(service.dataSourceExists(RDWDataSourceNames.OLAP_RO.getName(), "BadDatabase")).isFalse();
//
//        verify(rdwServiceConfigPropsAccessor).getTenantsReadOnlyDataSourceElements();
//        verify(rdwServiceConfigPropsAccessor).getTenantsWritableDataSourceElements();
//        verify(rdwServiceConfigPropsAccessor).getTenantsWarehouseDataSourceElements();
//        verify(rdwServiceConfigPropsAccessor, times(0)).getTenantsOlapDataSourceElements();
//
//    }
//
//    @Test
//    public void itShouldReturnTrueWhenOlapUserNameExists() {
//        when(rdwServiceConfigPropsAccessor.getTenantsOlapDataSourceElements()).thenReturn(TenantConfigurationStubs.getTenantsOlapDataSources());
//        // It returns False if the DB is not the default db and the username is NOT unique
//        assertThat(service.dataSourceOlapExists(
//                TenantConfigurationStubs.getMockDefaultApplicationTenantConfiguration().getDataSources().get("olap_ro").getUrlParts().getDatabase(),
//                TenantConfigurationStubs.getMockDefaultApplicationTenantConfiguration().getDataSources().get("olap_ro").getUsername())).isTrue();
//        verify(rdwServiceConfigPropsAccessor, times(2)).getTenantsOlapDataSourceElements();
//
//    }
//
//    @Test
//    public void itShouldReturnFalseWhenOlapDatabaseIsNotfound() {
//        when(rdwServiceConfigPropsAccessor.getTenantsOlapDataSourceElements()).thenReturn(TenantConfigurationStubs.getTenantsOlapDataSources());
//        // It returns False if the DB is not the default db and the username is NOT unique
//        assertThat(service.dataSourceOlapExists("newOlapDb",
//                TenantConfigurationStubs.getMockDefaultApplicationTenantConfiguration().getDataSources().get("olap_ro").getUsername())).isFalse();
//        verify(rdwServiceConfigPropsAccessor, times(2)).getTenantsOlapDataSourceElements();
//    }
//
//    @Test
//    public void itShouldReturnFalseWhenOlapUsernameIsTooLong() {
//        when(rdwServiceConfigPropsAccessor.getTenantsOlapDataSourceElements()).thenReturn(TenantConfigurationStubs.getTenantsOlapDataSources());
//        // It returns False if the DB is not the default db and the username is NOT unique
//        assertThat(service.dataSourceOlapExists("newOlapDbVeryLongName",
//                TenantConfigurationStubs.getMockDefaultApplicationTenantConfiguration().getDataSources().get("olap_ro").getUsername())).isFalse();
//        verify(rdwServiceConfigPropsAccessor, times(2)).getTenantsOlapDataSourceElements();
//    }
//
//    @Test
//    public void itShouldBeTrueWhenArchivePrefixIsFound() {
//        when(rdwServiceConfigPropsAccessor.getTenantsArchiveProperties()).thenReturn(TenantConfigurationStubs.getTenantsArchiveProperties());
//        final String expectedPrefix = TenantConfigurationStubs.getTenantsArchiveProperties().get("CA").getPathPrefix();
//        assertThat(service.archivePrefixExists(expectedPrefix)).isTrue();
//        verify(rdwServiceConfigPropsAccessor).getTenantsArchiveProperties();
//
//        final String expectedNvPrefix = TenantConfigurationStubs.getTenantsArchiveProperties().get("NV").getPathPrefix();
//        assertThat(service.archivePrefixExists(expectedNvPrefix)).isTrue();
//        verify(rdwServiceConfigPropsAccessor, times(2)).getTenantsArchiveProperties();
//    }
//
//    @Test
//    public void itShouldBeFalseWhenArchivePrefixIsNotFound() {
//        when(rdwServiceConfigPropsAccessor.getTenantsArchiveProperties()).thenReturn(TenantConfigurationStubs.getTenantsArchiveProperties());
//        assertThat(service.archivePrefixExists("NewPrefix")).isFalse();
//        verify(rdwServiceConfigPropsAccessor).getTenantsArchiveProperties();
//    }

}