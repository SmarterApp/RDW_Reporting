package org.opentestsystem.rdw.admin.service.impl;

import org.junit.Before;
import org.junit.Test;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Slice;
import org.springframework.data.domain.SliceImpl;

import static org.assertj.core.api.Assertions.assertThat;

import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.function.Function;

public class SliceIteratorTest {
    // Class under test
    private SliceIterator<Integer> sliceIterator;

    private final List<Integer> data = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
    private Function<Pageable, Slice<Integer>> sliceFunction;

    @Before
    public void setUp() throws Exception {
        sliceFunction = pageable -> {
            int start = pageable.getOffset();
            int end = Math.min(pageable.getOffset() + pageable.getPageSize(), data.size());
            List<Integer> content = data.subList(start, end);
            boolean hasNext = content.size() == pageable.getPageSize();

            return new SliceImpl<>(content, pageable, hasNext);
        };
    }

    @Test(expected = NoSuchElementException.class)
    public void itShouldIterateSlices() {

        Iterator<Integer> sliceIterator = new SliceIterator<>(sliceFunction, 2);
        for (int expected : data) {
            assertThat(sliceIterator.hasNext()).isTrue();
            assertThat(sliceIterator.next()).isEqualTo(expected);
        }

        assertThat(sliceIterator.hasNext()).isFalse();

        // Force the exception
        sliceIterator.next();
    }

    @Test(expected = NoSuchElementException.class)
    public void itShouldIterateSlicesWithSmallFinalSlice() {

        Iterator<Integer> sliceIterator = new SliceIterator<>(sliceFunction, 3);
        for (int expected : data) {
            assertThat(sliceIterator.hasNext()).isTrue();
            assertThat(sliceIterator.next()).isEqualTo(expected);
        }

        assertThat(sliceIterator.hasNext()).isFalse();

        // Force the exception
        sliceIterator.next();
    }
}
