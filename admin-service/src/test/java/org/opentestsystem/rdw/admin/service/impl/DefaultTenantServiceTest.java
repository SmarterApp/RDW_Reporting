package org.opentestsystem.rdw.admin.service.impl;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.rdw.admin.configuration.multitenant.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.assertj.core.api.Assertions.assertThat;

public class DefaultTenantServiceTest {
    private static final Logger logger = LoggerFactory.getLogger(DefaultTenantServiceTest.class);

    //private HashMap<String, TenantConfiguration> tenantConfigurationMap = new HashMap<>();
    private DefaultTenantService service;

    @Before
    public void setUp() {
        //creating a new service so the cache is empty at the start of the tests
        service = new DefaultTenantService();
    }

    @Test
    public void getAll() {
        logger.info("TenantService getAll Test");

        // Add a couple of tenantConfiguration to test
        TenantConfiguration tenantConfiguration = createTestTenantFromJson(tenantJson);
        service.addTenantConfiguration(tenantConfiguration);

        TenantConfiguration tenantConfiguration2 = createTestTenantFromJson(tenantJson1);
        service.addTenantConfiguration(tenantConfiguration2);

        List<TenantConfiguration> tenantList = service.getAll();
        verifyTenantList(tenantList, 2);

        // visual dump of tenants
        tenantList.forEach(tenant -> {
            String tenantId = tenant.getTenantIdFromServiceProperties();
            logger.info("Tenant = {}", tenantId);
            logger.info("ServiceProperties = {}", tenant.getServiceProperties());
        });

    }

    @Test
    public void createTenant() {
        logger.info("TenantService createTenant Test");

        // create a tenantConfiguration to test
        TenantConfiguration tenantConfiguration = createTestTenantFromJson(tenantJson1);
        service.createTenant(tenantConfiguration);

        List<TenantConfiguration> tenantList = service.getAll();
        verifyTenantList(tenantList, 1, tenantConfiguration);
    }

    @Test
    public void deleteTenant() {
        // create a tenantConfiguration to test delete
        TenantConfiguration tenantConfiguration = createTestTenantFromJson(tenantJson2);
        service.createTenant(tenantConfiguration);

        // verify AZ tenant is created
        List<TenantConfiguration> tenantList = service.getAll();
        verifyTenantList(tenantList, 1, tenantConfiguration);

        // now ok to delete
        service.deleteTenant(tenantConfiguration.getTenantIdFromServiceProperties());

        // verify tenant was removed from list
        tenantList.clear();
        tenantList = service.getAll();
        assertThat(tenantList).isNotNull();
        assertThat(tenantList).isEmpty();
    }


    @Test
    public void updateTenant() {
        logger.info("TenantService updateTenant Test");

        // create a tenantConfiguration to test
        TenantConfiguration tenantConfiguration = createTestTenantFromJson(tenantJson1);
        service.createTenant(tenantConfiguration);

        List<TenantConfiguration> tenantList = service.getAll();
        verifyTenantList(tenantList, 1, tenantConfiguration);
    }

    /**
     * Verify the list Basics
     * @param tenantList list of current Tenants
     * @param expectedSize how many tenants are expected in the list
     */
    private void verifyTenantList(List<TenantConfiguration> tenantList, int expectedSize) {
        assertThat(tenantList).isNotNull();
        assertThat(tenantList).isNotEmpty();
        logger.info("TenantListSize = {}", tenantList.size());
        assertThat(tenantList.size()).isEqualTo(expectedSize);
    }

    /**
     * Verify a specific tenant in the list returned from getAll
     * @param tenantList list of current Tenants
     * @param expectedSize how many tenants are expected in the list
     * @param expectedTenantConfiguration the tenantConfiguration to validate against same tenantId in list
     */
    private void verifyTenantList(List<TenantConfiguration> tenantList, int expectedSize, TenantConfiguration expectedTenantConfiguration) {
        verifyTenantList(tenantList, expectedSize);

        tenantList.forEach(tenant -> verifyTenant(tenant, expectedTenantConfiguration));
    }

    /**
     * Validate the two given tenants are equal
     * todo improve the validation
     * @param tenantConfiguration the tenantConfiguration to test
     * @param expectedTenantConfiguration the tenant used to create or update the tenant config
     */
    private void verifyTenant(TenantConfiguration tenantConfiguration, TenantConfiguration expectedTenantConfiguration) {

        String tenantId = tenantConfiguration.getTenantIdFromServiceProperties();
        assertThat(tenantId).isEqualTo(expectedTenantConfiguration.getTenantIdFromServiceProperties());
        logger.info("Tenant id = {}", tenantId);
    }

    private TenantConfiguration createTestTenantFromJson(String tenantJson) {

        ServiceProperties serviceProperties = getTestServiceProperties(tenantJson);

        TenantConfiguration tenantConfiguration = new TenantConfiguration();
        tenantConfiguration.setServiceProperties(serviceProperties);
        return tenantConfiguration;
    }

    private ServiceProperties getTestServiceProperties(String testServices) {
        Gson gson = new GsonBuilder().create();
        return gson.fromJson(testServices, ServiceProperties.class);
    }

    private String tenantJson = "{ " +
            "  \"serviceProperties\": {" +
            "       \"tenant\":{" +
            "          \"id\":\"CA\"," +
            "          \"key\":\"CA\"," +
            "          \"displayName\":\"California\"," +
            "          \"description\":\"This is a California's Tenant.\"" +
            "       }" +
            "   }" +
            "}";

    private String tenantJson1 = "{" +
            " \"serviceProperties\": {" +
            "     \"tenant\": {" +
            "        \"id\": \"NV\"," +
            "        \"key\": \"NV\"," +
            "        \"displayName\": \"Nevada\"," +
            "        \"description\": \"This is a Nevada's Tenant\"" +
            "      },"+
            "      \"rdw-reporting-webapp\": {" +
            "        \"datasource\": {" +
            "          \"url-server\": \"rdw-aurora-\"," +
            "          \"username\": \"sbac\"," +
            "          \"password\": \"****\"" +
            "        }" +
            "      }" +
            "   }" +
            "}";

    private String tenantJson2 = "{" +
            "  \"serviceProperties\": {" +
            "     \"tenant\": {" +
            "        \"id\": \"AZ\"," +
            "        \"key\": \"AZ\"," +
            "        \"displayName\": \"Arizona\"," +
            "        \"description\": \"This is a Arizona's Tenant\"" +
            "      },"+
            "      \"rdw-reporting-webapp\": {" +
            "        \"datasource\": {" +
            "          \"url-server\": \"rdw-aurora-\"," +
            "          \"username\": \"sbac\"," +
            "          \"password\": \"****\"" +
            "        }," +
            "        \"reporting\": {" +
            "          \"school-year\": \"2018\"," +
            "          \"transfer-access-enabled\": \"true\"," +
            "          \"translation-location\": \"binary-\"," +
            "          \"analytics-tracking-id\": \"UA-102446884-4\"," +
            "          \"interpretive-guide-url\": \"https://portal.smarterbalanced.org/library/en/reporting-system-interpretive-guide.pdf\"," +
            "          \"user-guide-url\": \"https://portal.smarterbalanced.org/library/en/reporting-system-user-guide.pdf\"," +
            "          \"access-denied-url\": \"forward:/assets/public/access-denied.html\"," +
            "          \"landing-page-url\": \"forward:/landing.html\"," +
            "          \"percentile-display-enabled\": \"true\"," +
            "          \"report-languages\": \"es\"," +
            "          \"ui-languages\": \"es\"" +
            "        }," +
            "        \"tenantOverrides\": {" +
            "          \"datasource\": {" +
            "            \"initialSize\": \"1\"," +
            "            \"maxActive\": \"2\"" +
            "          }," +
            "          \"reporting\": {" +
            "            \"percentile-display-enabled\": \"false\"" +
            "          }" +
            "        }" +
            "      }," +
            "      \"rdw-reporting-admin-service\": {" +
            "        \"reporting_datasource\": {" +
            "          \"url-server\": \"rdw-aurora-\"," +
            "          \"username\": \"sbac\"," +
            "          \"password\": \"****\"" +
            "        }," +
            "        \"warehouse_datasource\": {" +
            "          \"url-server\": \"rdw-aurora-\"," +
            "          \"username\": \"sbac\"," +
            "          \"password\": \"****\"" +
            "        }," +
            "        \"reporting\": {" +
            "          \"school-year\": \"2018\"," +
            "          \"transfer-access-enabled\": \"true\"," +
            "          \"translation-location\": \"binary-\"," +
            "          \"state\": {" +
            "            \"code\": \"CA\"," +
            "            \"name\": \"California\"" +
            "          }" +
            "        }," +
            "        \"tenantOverrides\": {" +
            "          \"reporting_datasource\": {" +
            "            \"initialSize\": \"1\"," +
            "            \"maxActive\": \"2\"" +
            "          }," +
            "          \"warehouse_datasource\": {" +
            "            \"initialSize\": \"1\"," +
            "            \"maxActive\": \"2\"" +
            "          }," +
            "          \"reporting\": { " +
            "            \"code\": \"CA\", " +
            "            \"name\": \"California\" " +
            "          } " +
            "        } " +
            "      }, " +
            "      \"rdw-reporting-service\": { " +
            "        \"datasource\": { " +
            "          \"url-server\": \"rdw-aurora-\", " +
            "          \"username\": \"sbac\", " +
            "          \"paasword\": \"****\" " +
            "        }, " +
            "        \"writable_datasource\": { " +
            "          \"url-server\": \"rdw-aurora-\", " +
            "          \"username\": \"sbac\", " +
            "          \"password\": \"****\" " +
            "        }, " +
            "        \"reporting\": { " +
            "          \"school-year\": \"2018\", " +
            "          \"transfer-access-enabled\": \"true\", " +
            "          \"translation-location\": \"binary-\", " +
            "          \"student-fields\": { " +
            "            \"EconomicDisadvantage\": \"disabled\", " +
            "            \"LimitedEnglishProficiency\": \"disabled\", " +
            "            \"MigrantStatus\": \"enabled\", " +
            "            \"EnglishLanguageAcquisitionStatus\": \"enabled\", " +
            "            \"PrimaryLanguage\": \"enabled\", " +
            "            \"Ethnicity\": \"enabled\", " +
            "            \"Gender\": \"admin\", " +
            "            \"IndividualEducationPlan\": \"admin\", " +
            "            \"Section504\": \"admin\" " +
            "          } " +
            "        }, " +
            "        \"tenantProperties\": { " +
            "          \"datasource\": { " +
            "            \"initialSize\": \"1\", " +
            "            \"maxActive\": \"2\" " +
            "          }, " +
            "          \"writable_datasource\": { " +
            "            \"initialSize\": \"1\"," +
            "            \"maxActive\": \"2\"" +
            "          }," +
            "          \"reporting\": {" +
            "            \"code\": \"CA\"," +
            "            \"name\": \"California\"," +
            "            \"student-fields\": {" +
            "              \"EconomicDisadvantage\": \"enabled\"" +
            "            }" +
            "          }" +
            "        }" +
            "      }," +
            "      \"rdw-reporting-report-processor\": {" +
            "        \"datasource\": {" +
            "          \"url-server\": \"rdw-aurora-\"," +
            "          \"username\": \"sbac\"," +
            "          \"password\": \"****\"" +
            "        }," +
            "        \"task\": {" +
            "          \"remove-stale-reports\": {" +
            "            \"cron\": \"0 0 8 * * *\"," +
            "            \"max-report-lifetime-days\": \"30\"," +
            "            \"max-random-minutes\": \"20\"" +
            "          } " +
            "        } " +
            "      }, " +
            "      \"tenantProperties\": {" +
            "        \"datasource\": {" +
            "          \"initialSize\": \"1\"," +
            "          \"maxActive\": \"2\"" +
            "        }, " +
            "        \"reporting\": {" +
            "          \"code\": \"CA\"," +
            "          \"name\": \"California\"" +
            "        } " +
            "      }, " +
            "      \"rdw-reporting-aggregate-service\": {" +
            "        \"olap_datasource\": {" +
            "          \"initialSize\": \"1\"," +
            "          \"maxActive\": \"2\"" +
            "        }," +
            "        \"tenantProperties\": {" +
            "          \"reporting\": {" +
            "            \"code\": \"CA\"," +
            "            \"name\": \"California\"" +
            "          }" +
            "        }" +
            "      }" +
            "    }" +
            "}";
}