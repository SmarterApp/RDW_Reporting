package org.opentestsystem.rdw.admin.service.impl;

import com.google.common.collect.ImmutableMap;
import com.google.common.collect.ImmutableSet;
import org.junit.Before;
import org.junit.Test;

import org.opentestsystem.rdw.admin.model.AllApplicationTenantConfiguration;
import org.opentestsystem.rdw.admin.model.ApplicationTenantConfiguration;
import org.opentestsystem.rdw.admin.model.TenantConfiguration;
import org.opentestsystem.rdw.admin.model.TenantConfigurationStubs;
import org.opentestsystem.rdw.admin.repository.impl.InMemoryTenantRepository;
import org.opentestsystem.rdw.archive.ArchivePropertiesRoot;
import org.opentestsystem.rdw.multitenant.Tenant;
import org.opentestsystem.rdw.multitenant.TenantProperties;
import org.opentestsystem.rdw.multitenant.datasource.DataSourceElementsTenant;
import org.opentestsystem.rdw.reporting.common.configuration.ReportingSystemSettings;
import org.opentestsystem.rdw.reporting.common.multitenant.ReportingTenantIdResolver;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Optional;
import java.util.Set;

import static org.assertj.core.api.Assertions.assertThat;

import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

public class DefaultTenantServiceTest {

    private TenantProperties tenantProperties;

    private InMemoryTenantRepository inMemoryTenantRepository;

    private DefaultTenantService service;

    private DefaultActuatorClientRdwService defaultTenantPropertiesService;

    private ReportingTenantIdResolver reportingTenantIdResolver;

    @Before
    public void setUp() {

        tenantProperties = mock(TenantProperties.class);
        defaultTenantPropertiesService = mock(DefaultActuatorClientRdwService.class);
        inMemoryTenantRepository = mock(InMemoryTenantRepository.class);
        reportingTenantIdResolver = mock(ReportingTenantIdResolver.class);

        service = new DefaultTenantService(tenantProperties, inMemoryTenantRepository, defaultTenantPropertiesService, reportingTenantIdResolver);
    }

    @Test
    public void itShouldRetrieveAllTenants()  {
        // return a set of tenantConfigurations
        TenantConfiguration mockTenantCA = TenantConfigurationStubs.createMockTenantCA();
        TenantConfiguration mockTenantNV = TenantConfigurationStubs.createMockTenantNV();
        Set<TenantConfiguration> tenantConfigurationSet = ImmutableSet.of(mockTenantCA, mockTenantNV);
        when(inMemoryTenantRepository.getAll()).thenReturn(tenantConfigurationSet);

        Optional<ApplicationTenantConfiguration> applicationTenantConfiguration =
                Optional.of(TenantConfigurationStubs.getMockDefaultApplicationTenantConfiguration());

        when(defaultTenantPropertiesService.getReportingSystemSettings(any())).thenReturn(TenantConfigurationStubs.getReportingSystemSettings());
        when(defaultTenantPropertiesService.getReportingSystemSettingsImpl(any())).thenReturn(Optional.of(TenantConfigurationStubs.getReporting()));

        Optional<ArchivePropertiesRoot> archiveProperties = TenantConfigurationStubs.getArchivePropertiesRoot();

        when(defaultTenantPropertiesService.getArchivePropertiesRoot(any())).thenReturn(archiveProperties);
        when(defaultTenantPropertiesService.getArchivePropertiesTenant(any())).thenReturn(Optional.of(TenantConfigurationStubs.getArchivePropertiesTenant()));

        when(defaultTenantPropertiesService.getAggregateProperties(any())).thenReturn(Optional.of(applicationTenantConfiguration.get().getAggregateReportingPropertiesTenant()));
        when(defaultTenantPropertiesService.getAggregateReportingPropertiesRoot(any())).thenReturn(TenantConfigurationStubs.getAggregateReportingPropertiesRoot());

        when(defaultTenantPropertiesService.getDataSourceElementsProperties(any())).thenReturn(TenantConfigurationStubs.getDataSourceElementsProperties());
        when(defaultTenantPropertiesService.getDataSourceElementsTenant(any())).thenReturn(Optional.of(applicationTenantConfiguration.get().getDataSources().get("reporting_ro")));

        when(defaultTenantPropertiesService.getWarehouseDataSource(any())).thenReturn(TenantConfigurationStubs.getDataSourceWHElementsProperties());
        when(defaultTenantPropertiesService.getWarehouseDataSourceElementsTenant(any())).thenReturn(Optional.of(applicationTenantConfiguration.get().getDataSources().get("warehouse_rw")));

        when(defaultTenantPropertiesService.getWritableDataSource(any())).thenReturn(TenantConfigurationStubs.getDataSourceRWElementsProperties());
        when(defaultTenantPropertiesService.getWritableDataSourceElementsTenant(any())).thenReturn(Optional.of(applicationTenantConfiguration.get().getDataSources().get("reporting_rw")));

        when(defaultTenantPropertiesService.getOlapDataSource(any())).thenReturn(TenantConfigurationStubs.getDataSourceOlapElementsProperties());
        when(defaultTenantPropertiesService.getOlapDataSourceElementsTenant(any())).thenReturn(Optional.of(applicationTenantConfiguration.get().getDataSources().get("olap_ro")));

        when(defaultTenantPropertiesService.getAllResponseEntities()).thenReturn(getResponseEntities());
        when(tenantProperties.getTenants()).thenReturn(ImmutableMap.copyOf(get2tenants()));


        // test get all
        AllApplicationTenantConfiguration allApplicationTenantConfiguration = service.getAll();

        assertThat(allApplicationTenantConfiguration.getTenants()).isNotEmpty();
        assertThat(allApplicationTenantConfiguration.getTenants().size()).isEqualTo(2);
        verify(inMemoryTenantRepository, times(2)).getAll(); // todo adjust once mockdata being returned is removed
        verify(tenantProperties).getTenants();
        verify(defaultTenantPropertiesService).getAllResponseEntities();

        verify(defaultTenantPropertiesService).getAggregateProperties(any());
        verify(defaultTenantPropertiesService).getArchivePropertiesRoot(any());

        verify(defaultTenantPropertiesService).getReportingSystemSettings(any());
        verify(defaultTenantPropertiesService).getReportingSystemSettingsImpl(any());

        verify(defaultTenantPropertiesService).getDataSourceElementsProperties(any());
        verify(defaultTenantPropertiesService).getDataSourceElementsTenant(any());

        verify(defaultTenantPropertiesService).getWarehouseDataSource(any());
        verify(defaultTenantPropertiesService).getWarehouseDataSourceElementsTenant(any());

        verify(defaultTenantPropertiesService).getWritableDataSource(any());
        verify(defaultTenantPropertiesService).getWritableDataSourceElementsTenant(any());

        verify(defaultTenantPropertiesService).getOlapDataSource(any());
        verify(defaultTenantPropertiesService).getOlapDataSourceElementsTenant(any());

        Optional<TenantConfiguration> tenantCACfg = getTenantConfigurationfromKey(allApplicationTenantConfiguration, mockTenantCA.getTenant().getKey());
        if (tenantCACfg.isPresent() ) {
            assertThat(tenantCACfg.get().getTenant().getKey()).isEqualTo(mockTenantCA.getTenant().getKey());
            assertThat(tenantCACfg.get().getTenant().getId()).isEqualTo(mockTenantCA.getTenant().getId());
            assertThat(tenantCACfg.get().getTenant().getName()).isEqualTo(mockTenantCA.getTenant().getName());
            assertThat(tenantCACfg.get().getApplicationTenantConfiguration().getReporting().getAccessDeniedUrl())
                    .isEqualTo(mockTenantCA.getApplicationTenantConfiguration().getReporting().getAccessDeniedUrl());
            assertThat(tenantCACfg.get().getApplicationTenantConfiguration().getArchiveProperties().getUriRoot())
                    .isEqualTo(mockTenantCA.getApplicationTenantConfiguration().getArchiveProperties().getUriRoot());
        }

        Optional<TenantConfiguration> tenantNVCfg = getTenantConfigurationfromKey(allApplicationTenantConfiguration, mockTenantNV.getTenant().getKey());
        if (tenantNVCfg.isPresent() ) {
            assertThat(tenantNVCfg.get().getTenant().getKey()).isEqualTo(mockTenantNV.getTenant().getKey());
            assertThat(tenantNVCfg.get().getTenant().getId()).isEqualTo(mockTenantNV.getTenant().getId());
            assertThat(tenantNVCfg.get().getTenant().getName()).isEqualTo(mockTenantNV.getTenant().getName());
            assertThat(tenantNVCfg.get().getApplicationTenantConfiguration().getReporting().getAccessDeniedUrl())
                    .isEqualTo(mockTenantNV.getApplicationTenantConfiguration().getReporting().getAccessDeniedUrl());
            assertThat(tenantNVCfg.get().getApplicationTenantConfiguration().getArchiveProperties().getUriRoot())
                    .isEqualTo(mockTenantNV.getApplicationTenantConfiguration().getArchiveProperties().getUriRoot());
        }
    }

    @Test
    public void itShouldRetrieveDefaultsAndEmptyTenants() {
        Optional<ApplicationTenantConfiguration> applicationTenantConfiguration =
                Optional.of(TenantConfigurationStubs.getMockDefaultApplicationTenantConfiguration());
        when(defaultTenantPropertiesService.getArchivePropertiesTenant(any())).thenReturn(Optional.of(applicationTenantConfiguration.get().getArchiveProperties()));
        when(defaultTenantPropertiesService.getAggregateProperties(any())).thenReturn(Optional.of(applicationTenantConfiguration.get().getAggregateReportingPropertiesTenant()));
        when(defaultTenantPropertiesService.getReportingSystemSettings(any())).thenReturn(TenantConfigurationStubs.getReportingSystemSettings());
        when(defaultTenantPropertiesService.getAllResponseEntities()).thenReturn(getResponseEntities());
        when(defaultTenantPropertiesService.getDataSourceElementsTenant(any())).thenReturn(Optional.of(applicationTenantConfiguration.get().getDataSources().get("reporting_ro")));
        when(defaultTenantPropertiesService.getWarehouseDataSourceElementsTenant(any())).thenReturn(Optional.of(applicationTenantConfiguration.get().getDataSources().get("warehouse_rw")));
        when(defaultTenantPropertiesService.getWritableDataSourceElementsTenant(any())).thenReturn(Optional.of(applicationTenantConfiguration.get().getDataSources().get("reporting_rw")));
        when(defaultTenantPropertiesService.getOlapDataSourceElementsTenant(any())).thenReturn(Optional.of(applicationTenantConfiguration.get().getDataSources().get("olap_ro")));
        Map<String, Tenant> tenants = new HashMap<>();
        when(tenantProperties.getTenants()).thenReturn(ImmutableMap.copyOf(tenants));


        // return no tenants
        when(inMemoryTenantRepository.getAll()).thenReturn(Collections.emptySet());
        // get the expected defaults
        ApplicationTenantConfiguration expectedDefaultProperties
                = TenantConfigurationStubs.getMockDefaultApplicationTenantConfiguration();

        AllApplicationTenantConfiguration allApplicationTenantConfiguration = service.getAll();

        verify(inMemoryTenantRepository, times(2)).getAll();
        verify(defaultTenantPropertiesService).getAllResponseEntities();

        assertThat(allApplicationTenantConfiguration.getTenants()).isEmpty();
        assertThat(allApplicationTenantConfiguration.getTenants().size()).isEqualTo(0);
        // check ArchiveProperties
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getArchiveProperties().getUriRoot())
                .isEqualTo(expectedDefaultProperties.getArchiveProperties().getUriRoot());
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getArchiveProperties().getPathPrefix())
                .isEqualTo(expectedDefaultProperties.getArchiveProperties().getPathPrefix());
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getArchiveProperties().getS3AccessKey())
                .isEqualTo(expectedDefaultProperties.getArchiveProperties().getS3AccessKey());
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getArchiveProperties().getS3RegionStatic())
                .isEqualTo(expectedDefaultProperties.getArchiveProperties().getS3RegionStatic());
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getArchiveProperties().getS3SecretKey())
                .isEqualTo(expectedDefaultProperties.getArchiveProperties().getS3SecretKey());
        // Check Reporting Properties
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getReporting().getAccessDeniedUrl())
                .isEqualTo(expectedDefaultProperties.getReporting().getAccessDeniedUrl());

        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getReporting().getState())
                .isEqualToIgnoringNullFields(expectedDefaultProperties.getReporting().getState());

        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getReporting().getAnalyticsTrackingId())
                .isEqualTo(expectedDefaultProperties.getReporting().getAnalyticsTrackingId());
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getReporting().getInterpretiveGuideUrl())
                .isEqualTo(expectedDefaultProperties.getReporting().getInterpretiveGuideUrl());
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getReporting().getIrisVendorId())
                .isEqualTo(expectedDefaultProperties.getReporting().getIrisVendorId());
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getReporting().getLandingPageUrl())
                .isEqualTo(expectedDefaultProperties.getReporting().getLandingPageUrl());
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getReporting().getMinItemDataYear())
                .isEqualTo(expectedDefaultProperties.getReporting().getMinItemDataYear());
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getReporting().getSchoolYear())
                .isEqualTo(expectedDefaultProperties.getReporting().getSchoolYear());
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getReporting().getTranslationLocation())
                .isEqualTo(expectedDefaultProperties.getReporting().getTranslationLocation());
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getReporting().getUserGuideUrl())
                .isEqualTo(expectedDefaultProperties.getReporting().getUserGuideUrl());
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getReporting().getState()).isNotNull();
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getReporting().getState().getName())
                .isEqualTo(expectedDefaultProperties.getReporting().getState().getName());
                assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getReporting().getState().getCode())
                .isEqualTo(expectedDefaultProperties.getReporting().getState().getCode());
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getReporting().getReportLanguages())
                .isEqualTo(expectedDefaultProperties.getReporting().getReportLanguages());
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getReporting().getTargetReport())
                .isEqualToIgnoringNullFields(expectedDefaultProperties.getReporting().getTargetReport());
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getReporting().getReportLanguages().size())
                .isEqualToIgnoringNullFields(expectedDefaultProperties.getReporting().getReportLanguages().size());

        // Check Aggregate
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration()
                .getAggregateReportingPropertiesTenant().getAssessmentTypes().size())
                .isEqualTo(expectedDefaultProperties.getAggregateReportingPropertiesTenant().getAssessmentTypes().size());
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration()
                .getAggregateReportingPropertiesTenant().getStateAggregateAssessmentTypes().size())
                .isEqualTo(expectedDefaultProperties.getAggregateReportingPropertiesTenant().getStateAggregateAssessmentTypes().size());
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration()
                .getAggregateReportingPropertiesTenant().getStatewideUserAssessmentTypes().size())
                .isEqualTo(expectedDefaultProperties.getAggregateReportingPropertiesTenant().getStatewideUserAssessmentTypes().size());

        //Check Datasources
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getDataSources()).isNotNull();
        assertThat(allApplicationTenantConfiguration.getApplicationTenantConfiguration().getDataSources().size()).isEqualTo(
                expectedDefaultProperties.getDataSources().size());
        allApplicationTenantConfiguration.getApplicationTenantConfiguration().getDataSources().forEach( (k,v) -> {
            DataSourceElementsTenant dataSource = v;
            DataSourceElementsTenant expectedDataSource = expectedDefaultProperties.getDataSources().get(k);
            assertThat(dataSource.getPassword()).isEqualTo(expectedDataSource.getPassword());
            assertThat(dataSource.getUrl()).isEqualTo(expectedDataSource.getUrl());
            assertThat(dataSource.getUsername()).isEqualTo(expectedDataSource.getUsername());
            assertThat(dataSource.getInitialSize()).isEqualTo(expectedDataSource.getInitialSize());
            assertThat(dataSource.getMaxActive()).isEqualTo(expectedDataSource.getMaxActive());
            assertThat(dataSource.getMaxIdle()).isEqualTo(expectedDataSource.getMaxIdle());
            assertThat(dataSource.getMinIdle()).isEqualTo(expectedDataSource.getMinIdle());
            assertThat(dataSource.getJdbcInterceptors()).isEqualTo(expectedDataSource.getJdbcInterceptors());
            assertThat(dataSource.getDriverClassName()).isEqualTo(expectedDataSource.getDriverClassName());
            assertThat(dataSource.getRemoveAbandonedTimeout()).isEqualTo(expectedDataSource.getRemoveAbandonedTimeout());
            assertThat(dataSource.isRemoveAbandoned()).isEqualTo(expectedDataSource.isRemoveAbandoned());
            assertThat(dataSource.isLogAbandoned()).isEqualTo(expectedDataSource.isLogAbandoned());
            assertThat(dataSource.getTestWhileIdle()).isEqualTo(expectedDataSource.getTestWhileIdle());
        });

    }


    /**
     * Lookup the given key in the AllApplicationConfiguration tenant list
     * @param allApplicationTenantConfiguration conatains the tenant list to look through
     * @param key The key of the tenant to find
     * @return tenantConfiguration if key is found
     */
    private Optional<TenantConfiguration> getTenantConfigurationfromKey(final AllApplicationTenantConfiguration allApplicationTenantConfiguration, String key) {
        return allApplicationTenantConfiguration.getTenants().stream()
                .filter(tenant ->
                        tenant.getTenant().getKey().equals(key)
                ).findFirst();
    }

    @Test
    public void ifShouldCreateTenant() {
        // Create tenantConfiguration to add
        TenantConfiguration tenantConfigurationNV = TenantConfigurationStubs.createMockTenantNV();

        when(inMemoryTenantRepository.add(tenantConfigurationNV)).thenReturn(tenantConfigurationNV);
        when(inMemoryTenantRepository.tenantExists(tenantConfigurationNV.getTenant().getKey())).thenReturn(false);

        service.createTenant(tenantConfigurationNV);

        verify(inMemoryTenantRepository).add(tenantConfigurationNV);
    }

    @Test (expected = IllegalArgumentException.class)
    public void ifShouldNotCreateTenant() {
        // Create tenantConfiguration to add
        TenantConfiguration tenantConfigurationNV = TenantConfigurationStubs.createMockTenantNV();

        when(inMemoryTenantRepository.add(tenantConfigurationNV)).thenReturn(tenantConfigurationNV);
        when(inMemoryTenantRepository.tenantExists(tenantConfigurationNV.getTenant().getKey())).thenReturn(true);

        service.createTenant(tenantConfigurationNV);

        verify(inMemoryTenantRepository,times(0)).add(tenantConfigurationNV);
    }

    @Test
    public void itShouldDeleteTenant() {
        // create a tenantConfiguration to test delete
        String id = TenantConfigurationStubs.createMockTenantCA().getTenant().getId();

        // now ok to delete
        service.deleteTenant(id);

        // verify tenant was removed from list
        verify(inMemoryTenantRepository).delete(id);
    }

    @Test
    public void itShouldUpdateTenant() {
        String expectedDescription = "Updating description from the test";
        TenantConfiguration tenantConfiguration = TenantConfigurationStubs.createMockTenantCA();
        TenantConfiguration tenantConfigurationUpdated = TenantConfigurationStubs.createMockTenantCA();
        tenantConfigurationUpdated.getTenant().setDescription(expectedDescription);

        when(tenantProperties.getTenants()).thenReturn(ImmutableMap.copyOf(get2tenants()));

        when(inMemoryTenantRepository.tenantExists(tenantConfiguration.getTenant().getKey())).thenReturn(true);
        when(inMemoryTenantRepository.update(tenantConfiguration)).thenReturn(tenantConfigurationUpdated);

        TenantConfiguration tenantCfg = service.updateTenant(tenantConfiguration);

        verify(inMemoryTenantRepository).update(tenantConfiguration);
        assertThat(tenantCfg).isNotNull();
        assertThat(tenantCfg.getTenant().getDescription()).isEqualTo(tenantConfigurationUpdated.getTenant().getDescription());
   }


    @Test(expected = NoSuchElementException.class)
    public void itShouldNotUpdateTenant() {
        TenantConfiguration tenantConfiguration = TenantConfigurationStubs.createMockTenantCA();

        when(tenantProperties.getTenants()).thenReturn(ImmutableMap.of(TenantConfigurationStubs.getTenantNV().getKey(), TenantConfigurationStubs.getTenantNV()));
        when(inMemoryTenantRepository.tenantExists(tenantConfiguration.getTenant().getKey())).thenReturn(false);
        when(inMemoryTenantRepository.update(tenantConfiguration)).thenReturn(tenantConfiguration);

        service.updateTenant(tenantConfiguration);

        verify(inMemoryTenantRepository).update(tenantConfiguration);
    }

    private Map<String, Tenant> get2tenants() {
        Map<String, Tenant> tenants = new HashMap<>();
        tenants.put(TenantConfigurationStubs.getTenantCA().getKey(), TenantConfigurationStubs.getTenantCA());
        tenants.put(TenantConfigurationStubs.getTenantNV().getKey(), TenantConfigurationStubs.getTenantNV());
        return tenants;
    }

    private List<ResponseEntity<String>> getResponseEntities() {
        List<ResponseEntity<String>> responseEntities = new ArrayList<>();

        HttpHeaders header = new HttpHeaders();
        header.setContentType(MediaType.APPLICATION_JSON);

        ResponseEntity<String> responseEntity = new ResponseEntity<>(
                "{\"endpoints-org.springframework.boot.actuate.endpoint.EndpointProperties\":{\"prefix\":\"endpoints\",\"properties\":{\"enabled\":true,\"sensitive\":null}},\"parent\":{\"spring.cloud.config.retry-org.springframework.cloud.config.client.RetryProperties\":{\"prefix\":\"spring.cloud.config.retry\",\"properties\":{\"maxAttempts\":6,\"initialInterval\":2000,\"maxInterval\":3000,\"multiplier\":1.1}},\"configClientProperties\":{\"prefix\":\"spring.cloud.config\",\"properties\":{\"headers\":{},\"profile\":\"local-docker\",\"label\":\"rdw,develop,master\",\"uri\":\"http://config-server:8888\",\"enabled\":true,\"failFast\":true,\"token\":null,\"authorization\":null,\"password\":null,\"discovery\":{\"enabled\":false,\"serviceId\":\"configserver\"},\"name\":\"rdw-reporting-admin-service\",\"username\":\"user\"}},\"spring.cloud.config-org.springframework.cloud.bootstrap.config.PropertySourceBootstrapProperties\":{\"prefix\":\"spring.cloud.config\",\"properties\":{\"overrideSystemProperties\":true,\"overrideNone\":false,\"allowOverride\":true}},\"encrypt-org.springframework.cloud.bootstrap.encrypt.KeyProperties\":{\"prefix\":\"encrypt\",\"properties\":{\"failOnError\":true,\"key\":null,\"keyStore\":{\"location\":null,\"password\":null,\"alias\":null,\"secret\":null}}}},\"metricsEndpoint\":{\"prefix\":\"endpoints.metrics\",\"properties\":{\"id\":\"metrics\",\"sensitive\":true,\"enabled\":true}},\"management.info-org.springframework.boot.actuate.autoconfigure.InfoContributorProperties\":{\"prefix\":\"management.info\",\"properties\":{\"git\":{\"mode\":\"SIMPLE\"}}},\"inetUtilsProperties\":{\"prefix\":\"spring.cloud.inetutils\",\"properties\":{\"ignoredInterfaces\":[],\"preferredNetworks\":[],\"defaultIpAddress\":\"127.0.0.1\",\"timeoutSeconds\":1,\"defaultHostname\":\"localhost\",\"useOnlySiteLocalInterfaces\":false}},\"spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties\":{\"prefix\":\"spring.cache\",\"properties\":{\"ehcache\":{\"config\":null},\"caffeine\":{\"spec\":null},\"infinispan\":{\"config\":null},\"cacheNames\":[],\"couchbase\":{\"expiration\":0},\"hazelcast\":{\"config\":null},\"jcache\":{\"config\":null,\"provider\":null},\"type\":null,\"guava\":{\"spec\":null}}},\"featuresEndpoint\":{\"prefix\":\"endpoints.features\",\"properties\":{\"id\":\"features\",\"sensitive\":false,\"enabled\":true}},\"spring.cloud.codec.kryo-org.springframework.cloud.stream.config.codec.kryo.KryoCodecProperties\":{\"prefix\":\"spring.cloud.codec.kryo\",\"properties\":{}},\"environmentEndpoint\":{\"prefix\":\"endpoints.env\",\"properties\":{\"id\":\"env\",\"sensitive\":true,\"enabled\":true}},\"spring.rabbitmq-org.springframework.boot.autoconfigure.amqp.RabbitProperties\":{\"prefix\":\"spring.rabbitmq\",\"properties\":{\"template\":{\"retry\":{\"enabled\":false,\"maxAttempts\":3,\"initialInterval\":1000,\"multiplier\":1.0,\"maxInterval\":10000},\"mandatory\":null,\"receiveTimeout\":null,\"replyTimeout\":null},\"addresses\":null,\"cache\":{\"channel\":{\"size\":null,\"checkoutTimeout\":null},\"connection\":{\"mode\":\"CHANNEL\",\"size\":null}},\"listener\":{\"simple\":{\"autoStartup\":true,\"acknowledgeMode\":null,\"concurrency\":null,\"maxConcurrency\":null,\"prefetch\":null,\"transactionSize\":null,\"defaultRequeueRejected\":null,\"idleEventInterval\":null,\"retry\":{\"enabled\":false,\"maxAttempts\":3,\"initialInterval\":1000,\"multiplier\":1.0,\"maxInterval\":10000,\"stateless\":true}},\"autoStartup\":true,\"acknowledgeMode\":null,\"concurrency\":null,\"maxConcurrency\":null,\"prefetch\":null,\"transactionSize\":null,\"defaultRequeueRejected\":null,\"idleEventInterval\":null,\"retry\":{\"enabled\":false,\"maxAttempts\":3,\"initialInterval\":1000,\"multiplier\":1.0,\"maxInterval\":10000,\"stateless\":true}},\"publisherReturns\":false,\"virtualHost\":null,\"ssl\":{\"enabled\":false,\"keyStore\":null,\"keyStorePassword\":null,\"trustStore\":null,\"trustStorePassword\":null,\"algorithm\":null,\"validateServerCertificate\":true,\"verifyHostname\":null},\"password\":null,\"port\":5672,\"publisherConfirms\":false,\"host\":\"rabbitmq\",\"requestedHeartbeat\":null,\"connectionTimeout\":null,\"username\":null}},\"configClientHealthProperties\":{\"prefix\":\"health.config\",\"properties\":{\"timeToLive\":300000,\"enabled\":false}},\"spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties\":{\"prefix\":\"spring.cloud.service-registry.auto-registration\",\"properties\":{\"enabled\":true,\"registerManagement\":true,\"failFast\":false}},\"spring.cloud.stream-org.springframework.cloud.stream.config.BindingServiceProperties\":{\"prefix\":\"spring.cloud.stream\",\"properties\":{\"bindings\":{\"output\":{\"destination\":\"GROUPS\",\"group\":\"default\"},\"springCloudBusInput\":{\"destination\":\"springCloudBus\"},\"springCloudBusOutput\":{\"destination\":\"springCloudBus\",\"contentType\":\"application/json\"}}}},\"serverProperties\":{\"prefix\":\"server\",\"properties\":{\"contextParameters\":{},\"address\":null,\"maxHttpPostSize\":0,\"undertow\":{\"maxHttpPostSize\":-1,\"bufferSize\":null,\"buffersPerRegion\":null,\"ioThreads\":null,\"workerThreads\":null,\"directBuffers\":null,\"accesslog\":{\"enabled\":null,\"pattern\":\"common\",\"prefix\":\"access_log.\",\"suffix\":\"log\",\"dir\":\"/logs\",\"rotate\":true}},\"tomcat\":{\"accesslog\":{\"enabled\":false,\"pattern\":\"common\",\"directory\":\"logs\",\"prefix\":\"access_log\",\"suffix\":\".log\",\"rotate\":true,\"renameOnRotate\":false,\"fileDateFormat\":\".yyyy-MM-dd\",\"requestAttributesEnabled\":false,\"buffered\":true},\"internalProxies\":\"10\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|192\\\\.168\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|169\\\\.254\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|127\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|172\\\\.1[6-9]{1}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|172\\\\.2[0-9]{1}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|172\\\\.3[0-1]{1}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|0:0:0:0:0:0:0:1|::1\",\"protocolHeader\":null,\"protocolHeaderHttpsValue\":\"https\",\"portHeader\":\"X-Forwarded-Port\",\"remoteIpHeader\":null,\"basedir\":null,\"backgroundProcessorDelay\":10,\"maxThreads\":4,\"minSpareThreads\":10,\"maxHttpPostSize\":2097152,\"redirectContextRoot\":true,\"uriEncoding\":\"UTF-8\",\"maxConnections\":0,\"acceptCount\":10,\"additionalTldSkipPatterns\":[]},\"displayName\":\"application\",\"session\":{\"timeout\":null,\"trackingModes\":null,\"persistent\":false,\"storeDir\":null,\"cookie\":{\"name\":null,\"domain\":null,\"path\":null,\"comment\":null,\"httpOnly\":null,\"secure\":null,\"maxAge\":null}},\"contextPath\":null,\"error\":{\"path\":\"/error\",\"includeStacktrace\":\"NEVER\"},\"ssl\":null,\"serverHeader\":null,\"useForwardHeaders\":null,\"port\":null,\"maxHttpHeaderSize\":131072,\"servletPath\":\"/\",\"jspServlet\":null,\"jetty\":{\"maxHttpPostSize\":200000,\"acceptors\":-1,\"selectors\":-1},\"connectionTimeout\":null}},\"spring.metrics.export-org.springframework.boot.actuate.metrics.export.MetricExportProperties\":{\"prefix\":\"spring.metrics.export\",\"properties\":{\"excludes\":null,\"statsd\":{\"host\":null,\"port\":8125,\"prefix\":null},\"includes\":null,\"triggers\":{},\"enabled\":true,\"redis\":{\"prefix\":\"spring.metrics.rdw-reporting-admin-service.73072a22458d7ed01ae8243f4f23e32a\",\"key\":\"******\"},\"aggregate\":{\"prefix\":\"rdw-reporting-admin-service.73072a22458d7ed01ae8243f4f23e32a\",\"keyPattern\":\"k.d\"}}},\"spring.integration.poller-org.springframework.cloud.stream.config.DefaultPollerProperties\":{\"prefix\":\"spring.integration.poller\",\"properties\":{\"fixedDelay\":1000,\"maxMessagesPerPoll\":1}},\"configurationPropertiesReportEndpoint\":{\"prefix\":\"endpoints.configprops\",\"properties\":{\"id\":\"configprops\",\"sensitive\":true,\"enabled\":true}},\"scopedTarget.warehouseDataSourceElementsProperties\":{\"prefix\":\"datasources.warehouse_rw\",\"properties\":{\"urlParts\":{\"protocol\":\"jdbc:mysql:\",\"hosts\":\"host.docker.internal:3306\",\"database\":\"warehouse\",\"properties\":\"useSSL=false&useLegacyDatetimeCode=false&characterEncoding=utf8&connectTimeout=10000&socketTimeout=70000\"},\"tenants\":{\"CA\":{\"url\":null,\"urlParts\":null,\"jdbcInterceptors\":null,\"username\":null,\"password\":null,\"testWhileIdle\":null,\"validationQuery\":null,\"validationQueryTimeout\":null,\"driverClassName\":null,\"initialSize\":1,\"maxActive\":2,\"minIdle\":null,\"maxIdle\":null,\"removeAbandoned\":null,\"removeAbandonedTimeout\":null,\"logAbandoned\":null}},\"jdbcInterceptors\":\"QueryTimeoutInterceptor(queryTimeout=60)\",\"minIdle\":4,\"validationQuery\":\"SELECT 1\",\"initialSize\":4,\"url\":\"jdbc:mysql://host.docker.internal:3306/warehouse?useSSL=false&useLegacyDatetimeCode=false&characterEncoding=utf8&connectTimeout=10000&socketTimeout=70000\",\"logAbandoned\":false,\"password\":\"******\",\"testWhileIdle\":true,\"maxIdle\":10,\"removeAbandoned\":false,\"driverClassName\":\"com.mysql.jdbc.Driver\",\"removeAbandonedTimeout\":60,\"username\":\"root\",\"validationQueryTimeout\":10000,\"maxActive\":10}},\"loggersEndpoint\":{\"prefix\":\"endpoints.loggers\",\"properties\":{\"id\":\"loggers\",\"sensitive\":true,\"enabled\":true}},\"endpoints.jmx-org.springframework.boot.actuate.autoconfigure.EndpointMBeanExportProperties\":{\"prefix\":\"endpoints.jmx\",\"properties\":{\"uniqueNames\":false,\"staticNames\":{},\"enabled\":true,\"domain\":\"\"}},\"spring.http.encoding-org.springframework.boot.autoconfigure.web.HttpEncodingProperties\":{\"prefix\":\"spring.http.encoding\",\"properties\":{\"charset\":\"UTF-8\",\"force\":false,\"mapping\":null,\"forceRequest\":false,\"forceResponse\":false}},\"shutdownEndpoint\":{\"prefix\":\"endpoints.shutdown\",\"properties\":{\"id\":\"shutdown\",\"sensitive\":true,\"enabled\":false}},\"beansEndpoint\":{\"prefix\":\"endpoints.beans\",\"properties\":{\"id\":\"beans\",\"sensitive\":true,\"enabled\":true}},\"requestMappingEndpoint\":{\"prefix\":\"endpoints.mappings\",\"properties\":{\"id\":\"mappings\",\"sensitive\":true,\"enabled\":true}},\"scopedTarget.reportingSystemSettings\":{\"prefix\":\"reporting\",\"properties\":{\"irisVendorId\":null,\"tenants\":{\"CA\":{\"analyticsTrackingId\":null,\"interpretiveGuideUrl\":null,\"accessDeniedUrl\":null,\"irisVendorId\":null,\"minItemDataYear\":null,\"percentileDisplayEnabled\":null,\"reportLanguages\":[],\"schoolYear\":2019,\"state\":{\"name\":\"California\",\"code\":\"CA\"},\"transferAccessEnabled\":null,\"translationLocation\":null,\"uiLanguages\":[],\"userGuideUrl\":null,\"targetReport\":{\"insufficientDataCutoff\":null,\"minNumberOfStudents\":null},\"studentFields\":{},\"effectiveReportLanguages\":[\"en\"]}},\"transferAccessEnabled\":null,\"reportLanguages\":[],\"effectiveReportLanguages\":[\"en\"],\"interpretiveGuideUrl\":null,\"accessDeniedUrl\":null,\"uiLanguages\":[],\"translationLocation\":null,\"userGuideUrl\":null,\"schoolYear\":2019,\"minItemDataYear\":null,\"percentileDisplayEnabled\":null,\"state\":{\"name\":\"California\",\"code\":\"CA\"},\"targetReport\":{\"insufficientDataCutoff\":null,\"minNumberOfStudents\":null},\"studentFields\":{},\"analyticsTrackingId\":null}},\"refreshEndpoint\":{\"prefix\":\"endpoints.refresh\",\"properties\":{\"id\":\"refresh\",\"sensitive\":true,\"enabled\":true}},\"jwtSettings\":{\"prefix\":\"jwt\",\"properties\":{\"routePaths\":null,\"secret\":\"******\"}},\"spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties\":{\"prefix\":\"spring.transaction\",\"properties\":{\"rollbackOnCommitFailure\":null,\"defaultTimeout\":null}},\"statusEndpoint\":{\"prefix\":\"endpoints.status\",\"properties\":{\"id\":\"status\",\"sensitive\":true,\"enabled\":true}},\"spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties\":{\"prefix\":\"spring.jackson\",\"properties\":{\"serialization\":{\"WRITE_DATES_AS_TIMESTAMPS\":false},\"propertyNamingStrategy\":null,\"defaultPropertyInclusion\":\"NON_NULL\",\"parser\":{},\"dateFormat\":null,\"deserialization\":{},\"generator\":{},\"timeZone\":null,\"mapper\":{},\"locale\":null,\"jodaDateTimeFormat\":null}},\"busEndpoint\":{\"prefix\":\"endpoints.bus\",\"properties\":{\"id\":\"bus\",\"sensitive\":true,\"enabled\":true}},\"spring.http.multipart-org.springframework.boot.autoconfigure.web.MultipartProperties\":{\"prefix\":\"spring.http.multipart\",\"properties\":{\"maxRequestSize\":\"500MB\",\"fileSizeThreshold\":\"0\",\"location\":null,\"maxFileSize\":\"500MB\",\"enabled\":true,\"resolveLazily\":false}},\"spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties\":{\"prefix\":\"spring.info\",\"properties\":{\"build\":{\"location\":{}},\"git\":{\"location\":{}}}},\"spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties\":{\"prefix\":\"spring.datasource\",\"properties\":{\"schema\":null,\"dataPassword\":null,\"data\":null,\"dataUsername\":null,\"generateUniqueName\":false,\"xa\":{\"dataSourceClassName\":null,\"properties\":{}},\"type\":null,\"separator\":\";\",\"url\":null,\"platform\":\"all\",\"continueOnError\":false,\"jndiName\":null,\"sqlScriptEncoding\":null,\"password\":null,\"schemaPassword\":null,\"name\":\"testdb\",\"driverClassName\":null,\"initialize\":true,\"schemaUsername\":null,\"username\":null}},\"traceEndpoint\":{\"prefix\":\"endpoints.trace\",\"properties\":{\"id\":\"trace\",\"sensitive\":true,\"enabled\":true}},\"infoEndpoint\":{\"prefix\":\"endpoints.info\",\"properties\":{\"id\":\"info\",\"sensitive\":false,\"enabled\":true}},\"management.trace-org.springframework.boot.actuate.trace.TraceProperties\":{\"prefix\":\"management.trace\",\"properties\":{\"include\":[\"ERRORS\",\"REQUEST_HEADERS\",\"TIME_TAKEN\",\"RESPONSE_HEADERS\",\"COOKIES\"]}},\"spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties\":{\"prefix\":\"spring.resources\",\"properties\":{\"cachePeriod\":null,\"addMappings\":true,\"chain\":{\"cache\":true,\"htmlApplicationCache\":false,\"gzipped\":false,\"strategy\":{\"fixed\":{\"enabled\":false,\"paths\":[\"/**\"],\"version\":null},\"content\":{\"enabled\":false,\"paths\":[\"/**\"]}}},\"staticLocations\":[\"/\",\"classpath:/META-INF/resources/\",\"classpath:/resources/\",\"classpath:/static/\",\"classpath:/public/\"]}},\"management.health.status-org.springframework.boot.actuate.autoconfigure.HealthIndicatorProperties\":{\"prefix\":\"management.health.status\",\"properties\":{\"order\":null}},\"healthEndpoint\":{\"prefix\":\"endpoints.health\",\"properties\":{\"timeToLive\":1000,\"id\":\"health\",\"sensitive\":false,\"enabled\":true}},\"scopedTarget.tenantProperties\":{\"prefix\":\"tenant-properties\",\"properties\":{\"tenants\":[{\"id\":\"CA\",\"key\":\"******\",\"name\":null,\"description\":null},{\"id\":\"NV\",\"key\":\"******\",\"name\":null,\"description\":null}]}},\"spring.cloud.stream.integration-org.springframework.cloud.stream.config.SpringIntegrationProperties\":{\"prefix\":\"spring.cloud.stream.integration\",\"properties\":{\"messageHandlerNotPropagatedHeaders\":[\"contentType\"]}},\"configClientProperties\":{\"prefix\":\"spring.cloud.config\",\"properties\":{\"headers\":{},\"profile\":\"local-docker\",\"label\":\"rdw,develop,master\",\"uri\":\"http://config-server:8888\",\"enabled\":true,\"failFast\":true,\"token\":null,\"authorization\":null,\"password\":null,\"discovery\":{\"enabled\":false,\"serviceId\":\"configserver\"},\"name\":\"rdw-reporting-admin-service\",\"username\":\"user\"}},\"endpoints.metrics.filter-org.springframework.boot.actuate.autoconfigure.MetricFilterProperties\":{\"prefix\":\"endpoints.metrics.filter\",\"properties\":{\"counterSubmissions\":[\"MERGED\"],\"gaugeSubmissions\":[\"MERGED\"]}},\"securityProperties\":{\"prefix\":\"security\",\"properties\":{\"headers\":{\"xss\":true,\"cache\":true,\"frame\":true,\"contentType\":true,\"contentSecurityPolicy\":null,\"contentSecurityPolicyMode\":\"DEFAULT\",\"hsts\":\"ALL\"},\"ignored\":[],\"sessions\":\"STATELESS\",\"requireSsl\":false,\"filterOrder\":-100,\"enableCsrf\":false,\"filterDispatcherTypes\":null,\"basic\":{\"enabled\":true,\"realm\":\"Spring\",\"path\":[\"/**\"],\"authorizeMode\":\"ROLE\"},\"user\":{\"name\":\"user\",\"password\":\"******\",\"role\":[\"USER\",\"ACTUATOR\"]}}},\"dumpEndpoint\":{\"prefix\":\"endpoints.dump\",\"properties\":{\"id\":\"dump\",\"sensitive\":true,\"enabled\":true}},\"autoConfigurationReportEndpoint\":{\"prefix\":\"endpoints.autoconfig\",\"properties\":{\"id\":\"autoconfig\",\"sensitive\":true,\"enabled\":true}},\"scopedTarget.reportingDataSourceElementsProperties\":{\"prefix\":\"datasources.reporting_ro\",\"properties\":{\"urlParts\":{\"protocol\":\"jdbc:mysql:\",\"hosts\":\"host.docker.internal:3306\",\"database\":\"reporting\",\"properties\":\"useSSL=false&useLegacyDatetimeCode=false&characterEncoding=utf8&rewriteBatchedStatements=true&connectTimeout=10000&socketTimeout=40000\"},\"tenants\":{\"CA\":{\"url\":null,\"urlParts\":null,\"jdbcInterceptors\":null,\"username\":null,\"password\":null,\"testWhileIdle\":null,\"validationQuery\":null,\"validationQueryTimeout\":null,\"driverClassName\":null,\"initialSize\":1,\"maxActive\":2,\"minIdle\":null,\"maxIdle\":null,\"removeAbandoned\":null,\"removeAbandonedTimeout\":null,\"logAbandoned\":null}},\"jdbcInterceptors\":\"QueryTimeoutInterceptor(queryTimeout=30)\",\"minIdle\":4,\"validationQuery\":\"SELECT 1\",\"initialSize\":4,\"url\":\"jdbc:mysql://host.docker.internal:3306/reporting?useSSL=false&useLegacyDatetimeCode=false&characterEncoding=utf8&rewriteBatchedStatements=true&connectTimeout=10000&socketTimeout=40000\",\"logAbandoned\":false,\"password\":\"******\",\"testWhileIdle\":true,\"maxIdle\":10,\"removeAbandoned\":false,\"driverClassName\":\"com.mysql.jdbc.Driver\",\"removeAbandonedTimeout\":60,\"username\":\"root\",\"validationQueryTimeout\":10000,\"maxActive\":10}},\"managementServerProperties\":{\"prefix\":\"management\",\"properties\":{\"security\":{\"enabled\":false,\"roles\":[\"ACTUATOR\"],\"sessions\":\"STATELESS\"},\"address\":null,\"port\":8008,\"addApplicationContextHeader\":true,\"contextPath\":\"\",\"ssl\":null}},\"spring.cloud.bus-org.springframework.cloud.bus.BusProperties\":{\"prefix\":\"spring.cloud.bus\",\"properties\":{\"trace\":{\"enabled\":false},\"ack\":{\"enabled\":true,\"destinationService\":null},\"destination\":\"springCloudBus\",\"refresh\":{\"enabled\":true},\"env\":{\"enabled\":true},\"enabled\":true}},\"simpleDiscoveryProperties\":{\"prefix\":\"spring.cloud.discovery.client.simple\",\"properties\":{\"instances\":{},\"local\":{\"uri\":\"http://429b49a40198:0\",\"metadata\":{},\"serviceId\":\"rdw-reporting-admin-service\"}}},\"spring.mvc-org.springframework.boot.autoconfigure.web.WebMvcProperties\":{\"prefix\":\"spring.mvc\",\"properties\":{\"dateFormat\":null,\"servlet\":{\"loadOnStartup\":-1},\"staticPathPattern\":\"/**\",\"dispatchOptionsRequest\":true,\"dispatchTraceRequest\":false,\"locale\":null,\"ignoreDefaultModelOnRedirect\":true,\"logResolvedException\":false,\"async\":{\"requestTimeout\":null},\"messageCodesResolverFormat\":null,\"mediaTypes\":{},\"view\":{\"prefix\":null,\"suffix\":null},\"localeResolver\":\"ACCEPT_HEADER\",\"throwExceptionIfNoHandlerFound\":false}},\"diskSpaceHealthIndicatorProperties\":{\"prefix\":\"management.health.diskspace\",\"properties\":{\"path\":\"/.\",\"threshold\":10485760}}}",
                header,
                HttpStatus.OK // Or HttpStatus.ACCEPTED
        );
        responseEntities.add(responseEntity);

        ResponseEntity<String> responseEntity2 = new ResponseEntity<>(
                "{\"endpoints-org.springframework.boot.actuate.endpoint.EndpointProperties\":{\"prefix\":\"endpoints\",\"properties\":{\"enabled\":true,\"sensitive\":null}},\"parent\":{\"spring.cloud.config.retry-org.springframework.cloud.config.client.RetryProperties\":{\"prefix\":\"spring.cloud.config.retry\",\"properties\":{\"maxAttempts\":6,\"initialInterval\":2000,\"maxInterval\":3000,\"multiplier\":1.1}},\"configClientProperties\":{\"prefix\":\"spring.cloud.config\",\"properties\":{\"headers\":{},\"profile\":\"local-docker\",\"label\":\"develop,master\",\"uri\":\"http://config-server:8888\",\"enabled\":true,\"failFast\":true,\"token\":null,\"authorization\":null,\"password\":null,\"discovery\":{\"enabled\":false,\"serviceId\":\"configserver\"},\"name\":\"rdw-reporting-report-processor\",\"username\":\"user\"}},\"spring.cloud.config-org.springframework.cloud.bootstrap.config.PropertySourceBootstrapProperties\":{\"prefix\":\"spring.cloud.config\",\"properties\":{\"overrideSystemProperties\":true,\"overrideNone\":false,\"allowOverride\":true}},\"encrypt-org.springframework.cloud.bootstrap.encrypt.KeyProperties\":{\"prefix\":\"encrypt\",\"properties\":{\"failOnError\":true,\"key\":null,\"keyStore\":{\"location\":null,\"password\":null,\"alias\":null,\"secret\":null}}}},\"metricsEndpoint\":{\"prefix\":\"endpoints.metrics\",\"properties\":{\"id\":\"metrics\",\"sensitive\":true,\"enabled\":true}},\"management.info-org.springframework.boot.actuate.autoconfigure.InfoContributorProperties\":{\"prefix\":\"management.info\",\"properties\":{\"git\":{\"mode\":\"SIMPLE\"}}},\"inetUtilsProperties\":{\"prefix\":\"spring.cloud.inetutils\",\"properties\":{\"ignoredInterfaces\":[],\"preferredNetworks\":[],\"defaultIpAddress\":\"127.0.0.1\",\"timeoutSeconds\":1,\"defaultHostname\":\"localhost\",\"useOnlySiteLocalInterfaces\":false}},\"spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties\":{\"prefix\":\"spring.cache\",\"properties\":{\"ehcache\":{\"config\":null},\"caffeine\":{\"spec\":null},\"infinispan\":{\"config\":null},\"cacheNames\":[\"translations\",\"subjects\",\"subjectdefinitions\"],\"couchbase\":{\"expiration\":0},\"hazelcast\":{\"config\":null},\"jcache\":{\"config\":null,\"provider\":null},\"type\":\"SIMPLE\",\"guava\":{\"spec\":null}}},\"featuresEndpoint\":{\"prefix\":\"endpoints.features\",\"properties\":{\"id\":\"features\",\"sensitive\":false,\"enabled\":true}},\"spring.cloud.codec.kryo-org.springframework.cloud.stream.config.codec.kryo.KryoCodecProperties\":{\"prefix\":\"spring.cloud.codec.kryo\",\"properties\":{}},\"environmentEndpoint\":{\"prefix\":\"endpoints.env\",\"properties\":{\"id\":\"env\",\"sensitive\":true,\"enabled\":true}},\"spring.rabbitmq-org.springframework.boot.autoconfigure.amqp.RabbitProperties\":{\"prefix\":\"spring.rabbitmq\",\"properties\":{\"template\":{\"retry\":{\"enabled\":false,\"maxAttempts\":3,\"initialInterval\":1000,\"multiplier\":1.0,\"maxInterval\":10000},\"mandatory\":null,\"receiveTimeout\":null,\"replyTimeout\":null},\"addresses\":null,\"cache\":{\"channel\":{\"size\":null,\"checkoutTimeout\":null},\"connection\":{\"mode\":\"CHANNEL\",\"size\":null}},\"listener\":{\"simple\":{\"autoStartup\":true,\"acknowledgeMode\":null,\"concurrency\":null,\"maxConcurrency\":null,\"prefetch\":null,\"transactionSize\":null,\"defaultRequeueRejected\":null,\"idleEventInterval\":null,\"retry\":{\"enabled\":false,\"maxAttempts\":3,\"initialInterval\":1000,\"multiplier\":1.0,\"maxInterval\":10000,\"stateless\":true}},\"concurrency\":null,\"autoStartup\":true,\"acknowledgeMode\":null,\"maxConcurrency\":null,\"prefetch\":null,\"transactionSize\":null,\"defaultRequeueRejected\":null,\"idleEventInterval\":null,\"retry\":{\"enabled\":false,\"maxAttempts\":3,\"initialInterval\":1000,\"multiplier\":1.0,\"maxInterval\":10000,\"stateless\":true}},\"publisherReturns\":false,\"virtualHost\":null,\"ssl\":{\"enabled\":false,\"keyStore\":null,\"keyStorePassword\":null,\"trustStore\":null,\"trustStorePassword\":null,\"algorithm\":null,\"validateServerCertificate\":true,\"verifyHostname\":null},\"password\":null,\"port\":5672,\"publisherConfirms\":false,\"host\":\"rabbitmq\",\"requestedHeartbeat\":null,\"connectionTimeout\":null,\"username\":null}},\"report-org.opentestsystem.rdw.reporting.processor.configuration.ReportGenerationProperties\":{\"prefix\":\"report\",\"properties\":{\"chunkSize\":25,\"pdfPageCutoff\":1000}},\"configClientHealthProperties\":{\"prefix\":\"health.config\",\"properties\":{\"timeToLive\":300000,\"enabled\":false}},\"spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties\":{\"prefix\":\"spring.cloud.service-registry.auto-registration\",\"properties\":{\"enabled\":true,\"registerManagement\":true,\"failFast\":false}},\"spring.cloud.stream-org.springframework.cloud.stream.config.BindingServiceProperties\":{\"prefix\":\"spring.cloud.stream\",\"properties\":{\"bindings\":{\"AggregateRequest\":{\"group\":\"default\",\"contentType\":\"application/json\",\"producer\":{\"requiredGroups\":[\"default\"]}},\"AggregateResponse\":{\"group\":\"default\",\"contentType\":\"application/json\",\"producer\":{\"requiredGroups\":[\"default\"]}},\"ReportAggregateReportsIn\":{\"destination\":\"ReportAggregateReports\",\"group\":\"default\",\"contentType\":\"application/json\"},\"ReportAggregateReportsOut\":{\"destination\":\"ReportAggregateReports\",\"group\":\"default\",\"contentType\":\"application/json\",\"producer\":{\"requiredGroups\":[\"default\"]}},\"ReportCollateIn\":{\"destination\":\"ReportCollate\",\"group\":\"default\",\"contentType\":\"application/json\"},\"ReportCollateOut\":{\"destination\":\"ReportCollate\",\"group\":\"default\",\"contentType\":\"application/json\",\"producer\":{\"requiredGroups\":[\"default\"]}},\"ReportExportExamsIn\":{\"destination\":\"ReportExportExams\",\"group\":\"default\",\"contentType\":\"application/json\"},\"ReportExportExamsOut\":{\"destination\":\"ReportExportExams\",\"group\":\"default\",\"contentType\":\"application/json\",\"producer\":{\"requiredGroups\":[\"default\"]}},\"ReportFetchStudentsIn\":{\"destination\":\"ReportFetchStudents\",\"group\":\"default\",\"contentType\":\"application/json\"},\"ReportFetchStudentsOut\":{\"destination\":\"ReportFetchStudents\",\"group\":\"default\",\"contentType\":\"application/json\",\"producer\":{\"requiredGroups\":[\"default\"]}},\"ReportGenerateForStudentsIn\":{\"destination\":\"ReportGenerateForStudents\",\"group\":\"default\",\"contentType\":\"application/json\",\"consumer\":{\"concurrency\":2,\"instanceCount\":1,\"instanceIndex\":0}},\"ReportGenerateForStudentsOut\":{\"destination\":\"ReportGenerateForStudents\",\"group\":\"default\",\"contentType\":\"application/json\",\"producer\":{\"requiredGroups\":[\"default\"]}},\"springCloudBusInput\":{\"destination\":\"springCloudBus\"},\"springCloudBusOutput\":{\"destination\":\"springCloudBus\",\"contentType\":\"application/json\"}}}},\"serverProperties\":{\"prefix\":\"server\",\"properties\":{\"contextParameters\":{},\"address\":null,\"maxHttpPostSize\":0,\"undertow\":{\"maxHttpPostSize\":-1,\"bufferSize\":null,\"buffersPerRegion\":null,\"ioThreads\":null,\"workerThreads\":null,\"directBuffers\":null,\"accesslog\":{\"enabled\":null,\"pattern\":\"common\",\"prefix\":\"access_log.\",\"suffix\":\"log\",\"dir\":\"/logs\",\"rotate\":true}},\"tomcat\":{\"accesslog\":{\"enabled\":false,\"pattern\":\"common\",\"directory\":\"logs\",\"prefix\":\"access_log\",\"suffix\":\".log\",\"rotate\":true,\"renameOnRotate\":false,\"fileDateFormat\":\".yyyy-MM-dd\",\"requestAttributesEnabled\":false,\"buffered\":true},\"internalProxies\":\"10\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|192\\\\.168\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|169\\\\.254\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|127\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|172\\\\.1[6-9]{1}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|172\\\\.2[0-9]{1}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|172\\\\.3[0-1]{1}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|0:0:0:0:0:0:0:1|::1\",\"protocolHeader\":null,\"protocolHeaderHttpsValue\":\"https\",\"portHeader\":\"X-Forwarded-Port\",\"remoteIpHeader\":null,\"basedir\":null,\"backgroundProcessorDelay\":10,\"maxThreads\":200,\"minSpareThreads\":10,\"maxHttpPostSize\":2097152,\"redirectContextRoot\":true,\"uriEncoding\":\"UTF-8\",\"maxConnections\":10000,\"acceptCount\":100,\"additionalTldSkipPatterns\":[]},\"displayName\":\"application\",\"session\":{\"timeout\":null,\"trackingModes\":null,\"persistent\":false,\"storeDir\":null,\"cookie\":{\"name\":null,\"domain\":null,\"path\":null,\"comment\":null,\"httpOnly\":null,\"secure\":null,\"maxAge\":null}},\"contextPath\":null,\"error\":{\"path\":\"/error\",\"includeStacktrace\":\"NEVER\"},\"ssl\":null,\"serverHeader\":null,\"useForwardHeaders\":null,\"port\":null,\"maxHttpHeaderSize\":131072,\"servletPath\":\"/\",\"jspServlet\":null,\"jetty\":{\"maxHttpPostSize\":200000,\"acceptors\":-1,\"selectors\":-1},\"connectionTimeout\":null}},\"spring.metrics.export-org.springframework.boot.actuate.metrics.export.MetricExportProperties\":{\"prefix\":\"spring.metrics.export\",\"properties\":{\"excludes\":null,\"statsd\":{\"host\":null,\"port\":8125,\"prefix\":null},\"includes\":null,\"triggers\":{},\"enabled\":true,\"redis\":{\"prefix\":\"spring.metrics.rdw-reporting-report-processor.a14b841dec274a346ad5b9b1c241031e\",\"key\":\"******\"},\"aggregate\":{\"prefix\":\"rdw-reporting-report-processor.a14b841dec274a346ad5b9b1c241031e\",\"keyPattern\":\"k.d\"}}},\"spring.integration.poller-org.springframework.cloud.stream.config.DefaultPollerProperties\":{\"prefix\":\"spring.integration.poller\",\"properties\":{\"fixedDelay\":1000,\"maxMessagesPerPoll\":1}},\"configurationPropertiesReportEndpoint\":{\"prefix\":\"endpoints.configprops\",\"properties\":{\"id\":\"configprops\",\"sensitive\":true,\"enabled\":true}},\"loggersEndpoint\":{\"prefix\":\"endpoints.loggers\",\"properties\":{\"id\":\"loggers\",\"sensitive\":true,\"enabled\":true}},\"endpoints.jmx-org.springframework.boot.actuate.autoconfigure.EndpointMBeanExportProperties\":{\"prefix\":\"endpoints.jmx\",\"properties\":{\"uniqueNames\":false,\"staticNames\":{},\"enabled\":true,\"domain\":\"\"}},\"spring.http.encoding-org.springframework.boot.autoconfigure.web.HttpEncodingProperties\":{\"prefix\":\"spring.http.encoding\",\"properties\":{\"charset\":\"UTF-8\",\"force\":false,\"mapping\":null,\"forceRequest\":false,\"forceResponse\":false}},\"shutdownEndpoint\":{\"prefix\":\"endpoints.shutdown\",\"properties\":{\"id\":\"shutdown\",\"sensitive\":true,\"enabled\":false}},\"beansEndpoint\":{\"prefix\":\"endpoints.beans\",\"properties\":{\"id\":\"beans\",\"sensitive\":true,\"enabled\":true}},\"wkhtmltopdfOptions\":{\"prefix\":\"app.wkhtmltopdf.options\",\"properties\":{\"page-size\":\"Letter\",\"zoom\":0.75}},\"requestMappingEndpoint\":{\"prefix\":\"endpoints.mappings\",\"properties\":{\"id\":\"mappings\",\"sensitive\":true,\"enabled\":true}},\"scopedTarget.reportingSystemSettings\":{\"prefix\":\"reporting\",\"properties\":{\"irisVendorId\":null,\"tenants\":{\"CA\":{\"analyticsTrackingId\":null,\"interpretiveGuideUrl\":null,\"accessDeniedUrl\":null,\"irisVendorId\":null,\"minItemDataYear\":null,\"percentileDisplayEnabled\":null,\"reportLanguages\":[],\"schoolYear\":2019,\"state\":{\"name\":\"California\",\"code\":\"CA\"},\"transferAccessEnabled\":null,\"translationLocation\":null,\"uiLanguages\":[],\"userGuideUrl\":null,\"targetReport\":{\"insufficientDataCutoff\":null,\"minNumberOfStudents\":null},\"studentFields\":{},\"effectiveReportLanguages\":[\"en\"]}},\"transferAccessEnabled\":null,\"reportLanguages\":[],\"effectiveReportLanguages\":[\"en\"],\"interpretiveGuideUrl\":null,\"accessDeniedUrl\":null,\"uiLanguages\":[],\"translationLocation\":null,\"userGuideUrl\":null,\"schoolYear\":2019,\"minItemDataYear\":null,\"percentileDisplayEnabled\":null,\"state\":{\"name\":\"California\",\"code\":\"CA\"},\"targetReport\":{\"insufficientDataCutoff\":null,\"minNumberOfStudents\":null},\"studentFields\":{},\"analyticsTrackingId\":null}},\"refreshEndpoint\":{\"prefix\":\"endpoints.refresh\",\"properties\":{\"id\":\"refresh\",\"sensitive\":true,\"enabled\":true}},\"scopedTarget.dataSourceElementsProperties\":{\"prefix\":\"datasources.reporting_ro\",\"properties\":{\"urlParts\":{\"protocol\":\"jdbc:mysql:\",\"hosts\":\"host.docker.internal:3306\",\"database\":\"reporting\",\"properties\":\"useSSL=false&useLegacyDatetimeCode=false&characterEncoding=utf8&rewriteBatchedStatements=true&connectTimeout=10000&socketTimeout=600000\"},\"tenants\":{\"CA\":{\"url\":null,\"urlParts\":null,\"jdbcInterceptors\":null,\"username\":null,\"password\":null,\"testWhileIdle\":null,\"validationQuery\":null,\"validationQueryTimeout\":null,\"driverClassName\":null,\"initialSize\":1,\"maxActive\":2,\"minIdle\":null,\"maxIdle\":null,\"removeAbandoned\":null,\"removeAbandonedTimeout\":null,\"logAbandoned\":null}},\"jdbcInterceptors\":\"QueryTimeoutInterceptor(queryTimeout=120)\",\"minIdle\":4,\"validationQuery\":\"SELECT 1\",\"initialSize\":4,\"url\":\"jdbc:mysql://host.docker.internal:3306/reporting?useSSL=false&useLegacyDatetimeCode=false&characterEncoding=utf8&rewriteBatchedStatements=true&connectTimeout=10000&socketTimeout=600000\",\"logAbandoned\":false,\"password\":\"******\",\"testWhileIdle\":true,\"maxIdle\":20,\"removeAbandoned\":false,\"driverClassName\":\"com.mysql.jdbc.Driver\",\"removeAbandonedTimeout\":60,\"username\":\"root\",\"validationQueryTimeout\":10000,\"maxActive\":20}},\"jwtSettings\":{\"prefix\":\"jwt\",\"properties\":{\"routePaths\":null,\"secret\":\"******\"}},\"spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties\":{\"prefix\":\"spring.transaction\",\"properties\":{\"rollbackOnCommitFailure\":null,\"defaultTimeout\":null}},\"statusEndpoint\":{\"prefix\":\"endpoints.status\",\"properties\":{\"id\":\"status\",\"sensitive\":true,\"enabled\":true}},\"spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties\":{\"prefix\":\"spring.jackson\",\"properties\":{\"serialization\":{\"WRITE_DATES_AS_TIMESTAMPS\":false},\"propertyNamingStrategy\":null,\"defaultPropertyInclusion\":\"NON_NULL\",\"parser\":{},\"dateFormat\":null,\"deserialization\":{},\"generator\":{},\"timeZone\":null,\"mapper\":{},\"locale\":null,\"jodaDateTimeFormat\":null}},\"busEndpoint\":{\"prefix\":\"endpoints.bus\",\"properties\":{\"id\":\"bus\",\"sensitive\":true,\"enabled\":true}},\"spring.http.multipart-org.springframework.boot.autoconfigure.web.MultipartProperties\":{\"prefix\":\"spring.http.multipart\",\"properties\":{\"maxRequestSize\":\"10MB\",\"fileSizeThreshold\":\"0\",\"location\":null,\"maxFileSize\":\"1MB\",\"enabled\":true,\"resolveLazily\":false}},\"spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties\":{\"prefix\":\"spring.info\",\"properties\":{\"build\":{\"location\":{}},\"git\":{\"location\":{}}}},\"spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties\":{\"prefix\":\"spring.datasource\",\"properties\":{\"schema\":null,\"dataPassword\":null,\"data\":null,\"dataUsername\":null,\"generateUniqueName\":false,\"xa\":{\"dataSourceClassName\":null,\"properties\":{}},\"type\":null,\"separator\":\";\",\"url\":null,\"platform\":\"all\",\"continueOnError\":false,\"jndiName\":null,\"sqlScriptEncoding\":null,\"password\":null,\"schemaPassword\":null,\"name\":\"testdb\",\"driverClassName\":null,\"initialize\":true,\"schemaUsername\":null,\"username\":null}},\"traceEndpoint\":{\"prefix\":\"endpoints.trace\",\"properties\":{\"id\":\"trace\",\"sensitive\":true,\"enabled\":true}},\"infoEndpoint\":{\"prefix\":\"endpoints.info\",\"properties\":{\"id\":\"info\",\"sensitive\":false,\"enabled\":true}},\"management.trace-org.springframework.boot.actuate.trace.TraceProperties\":{\"prefix\":\"management.trace\",\"properties\":{\"include\":[\"RESPONSE_HEADERS\",\"TIME_TAKEN\",\"ERRORS\",\"COOKIES\",\"REQUEST_HEADERS\"]}},\"spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties\":{\"prefix\":\"spring.resources\",\"properties\":{\"cachePeriod\":null,\"addMappings\":true,\"chain\":{\"cache\":true,\"htmlApplicationCache\":false,\"gzipped\":false,\"strategy\":{\"fixed\":{\"enabled\":false,\"paths\":[\"/**\"],\"version\":null},\"content\":{\"enabled\":false,\"paths\":[\"/**\"]}}},\"staticLocations\":[\"/\",\"classpath:/META-INF/resources/\",\"classpath:/resources/\",\"classpath:/static/\",\"classpath:/public/\"]}},\"management.health.status-org.springframework.boot.actuate.autoconfigure.HealthIndicatorProperties\":{\"prefix\":\"management.health.status\",\"properties\":{\"order\":null}},\"healthEndpoint\":{\"prefix\":\"endpoints.health\",\"properties\":{\"timeToLive\":1000,\"id\":\"health\",\"sensitive\":false,\"enabled\":true}},\"scopedTarget.tenantProperties\":{\"prefix\":\"tenant-properties\",\"properties\":{\"tenants\":[{\"id\":\"CA\",\"key\":\"******\",\"name\":null,\"description\":null},{\"id\":\"NV\",\"key\":\"******\",\"name\":null,\"description\":null}]}},\"spring.cloud.stream.integration-org.springframework.cloud.stream.config.SpringIntegrationProperties\":{\"prefix\":\"spring.cloud.stream.integration\",\"properties\":{\"messageHandlerNotPropagatedHeaders\":[\"contentType\"]}},\"app.aggregate-report-org.opentestsystem.rdw.reporting.processor.configuration.AggregateReportProperties\":{\"prefix\":\"app.aggregate-report\",\"properties\":{\"url\":null}},\"configClientProperties\":{\"prefix\":\"spring.cloud.config\",\"properties\":{\"headers\":{},\"profile\":\"local-docker\",\"label\":\"develop,master\",\"uri\":\"http://config-server:8888\",\"enabled\":true,\"failFast\":true,\"token\":null,\"authorization\":null,\"password\":null,\"discovery\":{\"enabled\":false,\"serviceId\":\"configserver\"},\"name\":\"rdw-reporting-report-processor\",\"username\":\"user\"}},\"endpoints.metrics.filter-org.springframework.boot.actuate.autoconfigure.MetricFilterProperties\":{\"prefix\":\"endpoints.metrics.filter\",\"properties\":{\"counterSubmissions\":[\"MERGED\"],\"gaugeSubmissions\":[\"MERGED\"]}},\"spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties\":{\"prefix\":\"spring.thymeleaf\",\"properties\":{\"excludedViewNames\":null,\"cache\":true,\"checkTemplate\":true,\"prefix\":\"classpath:/templates/\",\"viewNames\":null,\"suffix\":\".html\",\"encoding\":\"UTF-8\",\"enabled\":true,\"mode\":\"HTML\",\"checkTemplateLocation\":true,\"templateResolverOrder\":null,\"contentType\":{\"parameters\":{}}}},\"app.retry-org.opentestsystem.rdw.reporting.processor.configuration.ReportGenerationRetryProperties\":{\"prefix\":\"app.retry\",\"properties\":{\"maxRetries\":7,\"initialInterval\":1000,\"multiplier\":2}},\"securityProperties\":{\"prefix\":\"security\",\"properties\":{\"headers\":{\"xss\":true,\"cache\":true,\"frame\":true,\"contentType\":true,\"contentSecurityPolicy\":null,\"contentSecurityPolicyMode\":\"DEFAULT\",\"hsts\":\"ALL\"},\"ignored\":[],\"sessions\":\"STATELESS\",\"requireSsl\":false,\"filterOrder\":-100,\"enableCsrf\":false,\"filterDispatcherTypes\":null,\"basic\":{\"enabled\":true,\"realm\":\"Spring\",\"path\":[\"/**\"],\"authorizeMode\":\"ROLE\"},\"user\":{\"name\":\"user\",\"password\":\"******\",\"role\":[\"USER\",\"ACTUATOR\"]}}},\"dumpEndpoint\":{\"prefix\":\"endpoints.dump\",\"properties\":{\"id\":\"dump\",\"sensitive\":true,\"enabled\":true}},\"autoConfigurationReportEndpoint\":{\"prefix\":\"endpoints.autoconfig\",\"properties\":{\"id\":\"autoconfig\",\"sensitive\":true,\"enabled\":true}},\"managementServerProperties\":{\"prefix\":\"management\",\"properties\":{\"security\":{\"enabled\":false,\"roles\":[\"ACTUATOR\"],\"sessions\":\"STATELESS\"},\"address\":null,\"port\":8008,\"addApplicationContextHeader\":true,\"contextPath\":\"\",\"ssl\":null}},\"spring.cloud.bus-org.springframework.cloud.bus.BusProperties\":{\"prefix\":\"spring.cloud.bus\",\"properties\":{\"trace\":{\"enabled\":false},\"ack\":{\"enabled\":true,\"destinationService\":null},\"destination\":\"springCloudBus\",\"refresh\":{\"enabled\":true},\"env\":{\"enabled\":true},\"enabled\":true}},\"simpleDiscoveryProperties\":{\"prefix\":\"spring.cloud.discovery.client.simple\",\"properties\":{\"instances\":{},\"local\":{\"uri\":\"http://475ad051eb66:0\",\"metadata\":{},\"serviceId\":\"rdw-reporting-report-processor\"}}},\"spring.mvc-org.springframework.boot.autoconfigure.web.WebMvcProperties\":{\"prefix\":\"spring.mvc\",\"properties\":{\"dateFormat\":null,\"servlet\":{\"loadOnStartup\":-1},\"staticPathPattern\":\"/**\",\"dispatchOptionsRequest\":true,\"dispatchTraceRequest\":false,\"locale\":null,\"ignoreDefaultModelOnRedirect\":true,\"logResolvedException\":false,\"async\":{\"requestTimeout\":null},\"messageCodesResolverFormat\":null,\"mediaTypes\":{},\"view\":{\"prefix\":null,\"suffix\":null},\"localeResolver\":\"ACCEPT_HEADER\",\"throwExceptionIfNoHandlerFound\":false}},\"diskSpaceHealthIndicatorProperties\":{\"prefix\":\"management.health.diskspace\",\"properties\":{\"path\":\"/.\",\"threshold\":10485760}}}>",
                header,
                HttpStatus.OK // Or HttpStatus.ACCEPTED
        );
        responseEntities.add(responseEntity2);

        ResponseEntity<String> responseEntity3 = new ResponseEntity<>(
                "{\"endpoints-org.springframework.boot.actuate.endpoint.EndpointProperties\":{\"prefix\":\"endpoints\",\"properties\":{\"enabled\":true,\"sensitive\":null}},\"parent\":{\"spring.cloud.config.retry-org.springframework.cloud.config.client.RetryProperties\":{\"prefix\":\"spring.cloud.config.retry\",\"properties\":{\"maxAttempts\":6,\"initialInterval\":2000,\"maxInterval\":3000,\"multiplier\":1.1}},\"configClientProperties\":{\"prefix\":\"spring.cloud.config\",\"properties\":{\"headers\":{},\"profile\":\"local-docker\",\"label\":\"rdw,develop,master\",\"uri\":\"http://config-server:8888\",\"enabled\":true,\"failFast\":true,\"token\":null,\"authorization\":null,\"password\":null,\"discovery\":{\"enabled\":false,\"serviceId\":\"configserver\"},\"name\":\"rdw-reporting-service\",\"username\":\"user\"}},\"spring.cloud.config-org.springframework.cloud.bootstrap.config.PropertySourceBootstrapProperties\":{\"prefix\":\"spring.cloud.config\",\"properties\":{\"overrideSystemProperties\":true,\"overrideNone\":false,\"allowOverride\":true}},\"encrypt-org.springframework.cloud.bootstrap.encrypt.KeyProperties\":{\"prefix\":\"encrypt\",\"properties\":{\"failOnError\":true,\"key\":null,\"keyStore\":{\"location\":null,\"password\":null,\"alias\":null,\"secret\":null}}}},\"metricsEndpoint\":{\"prefix\":\"endpoints.metrics\",\"properties\":{\"id\":\"metrics\",\"sensitive\":true,\"enabled\":true}},\"management.info-org.springframework.boot.actuate.autoconfigure.InfoContributorProperties\":{\"prefix\":\"management.info\",\"properties\":{\"git\":{\"mode\":\"SIMPLE\"}}},\"inetUtilsProperties\":{\"prefix\":\"spring.cloud.inetutils\",\"properties\":{\"ignoredInterfaces\":[],\"preferredNetworks\":[],\"defaultIpAddress\":\"127.0.0.1\",\"timeoutSeconds\":1,\"defaultHostname\":\"localhost\",\"useOnlySiteLocalInterfaces\":false}},\"spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties\":{\"prefix\":\"spring.cache\",\"properties\":{\"ehcache\":{\"config\":null},\"caffeine\":{\"spec\":null},\"infinispan\":{\"config\":null},\"cacheNames\":[\"subjects\",\"subjectdefinitions\"],\"couchbase\":{\"expiration\":0},\"hazelcast\":{\"config\":null},\"jcache\":{\"config\":null,\"provider\":null},\"type\":\"SIMPLE\",\"guava\":{\"spec\":null}}},\"featuresEndpoint\":{\"prefix\":\"endpoints.features\",\"properties\":{\"id\":\"features\",\"sensitive\":false,\"enabled\":true}},\"spring.cloud.codec.kryo-org.springframework.cloud.stream.config.codec.kryo.KryoCodecProperties\":{\"prefix\":\"spring.cloud.codec.kryo\",\"properties\":{}},\"environmentEndpoint\":{\"prefix\":\"endpoints.env\",\"properties\":{\"id\":\"env\",\"sensitive\":true,\"enabled\":true}},\"spring.rabbitmq-org.springframework.boot.autoconfigure.amqp.RabbitProperties\":{\"prefix\":\"spring.rabbitmq\",\"properties\":{\"template\":{\"retry\":{\"enabled\":false,\"maxAttempts\":3,\"initialInterval\":1000,\"multiplier\":1.0,\"maxInterval\":10000},\"mandatory\":null,\"receiveTimeout\":null,\"replyTimeout\":null},\"addresses\":null,\"cache\":{\"channel\":{\"size\":null,\"checkoutTimeout\":null},\"connection\":{\"mode\":\"CHANNEL\",\"size\":null}},\"listener\":{\"simple\":{\"autoStartup\":true,\"acknowledgeMode\":null,\"concurrency\":null,\"maxConcurrency\":null,\"prefetch\":null,\"transactionSize\":null,\"defaultRequeueRejected\":null,\"idleEventInterval\":null,\"retry\":{\"enabled\":false,\"maxAttempts\":3,\"initialInterval\":1000,\"multiplier\":1.0,\"maxInterval\":10000,\"stateless\":true}},\"retry\":{\"enabled\":false,\"maxAttempts\":3,\"initialInterval\":1000,\"multiplier\":1.0,\"maxInterval\":10000,\"stateless\":true},\"maxConcurrency\":null,\"prefetch\":null,\"transactionSize\":null,\"concurrency\":null,\"autoStartup\":true,\"acknowledgeMode\":null,\"defaultRequeueRejected\":null,\"idleEventInterval\":null},\"publisherReturns\":false,\"virtualHost\":null,\"ssl\":{\"enabled\":false,\"keyStore\":null,\"keyStorePassword\":null,\"trustStore\":null,\"trustStorePassword\":null,\"algorithm\":null,\"validateServerCertificate\":true,\"verifyHostname\":null},\"password\":null,\"port\":5672,\"publisherConfirms\":false,\"host\":\"rabbitmq\",\"requestedHeartbeat\":null,\"connectionTimeout\":null,\"username\":null}},\"configClientHealthProperties\":{\"prefix\":\"health.config\",\"properties\":{\"timeToLive\":300000,\"enabled\":false}},\"spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties\":{\"prefix\":\"spring.cloud.service-registry.auto-registration\",\"properties\":{\"enabled\":true,\"registerManagement\":true,\"failFast\":false}},\"spring.cloud.stream-org.springframework.cloud.stream.config.BindingServiceProperties\":{\"prefix\":\"spring.cloud.stream\",\"properties\":{\"bindings\":{\"springCloudBusInput\":{\"destination\":\"springCloudBus\"},\"springCloudBusOutput\":{\"destination\":\"springCloudBus\",\"contentType\":\"application/json\"}}}},\"serverProperties\":{\"prefix\":\"server\",\"properties\":{\"contextParameters\":{},\"address\":null,\"maxHttpPostSize\":0,\"undertow\":{\"maxHttpPostSize\":-1,\"bufferSize\":null,\"buffersPerRegion\":null,\"ioThreads\":null,\"workerThreads\":null,\"directBuffers\":null,\"accesslog\":{\"enabled\":null,\"pattern\":\"common\",\"prefix\":\"access_log.\",\"suffix\":\"log\",\"dir\":\"/logs\",\"rotate\":true}},\"tomcat\":{\"accesslog\":{\"enabled\":false,\"pattern\":\"common\",\"directory\":\"logs\",\"prefix\":\"access_log\",\"suffix\":\".log\",\"rotate\":true,\"renameOnRotate\":false,\"fileDateFormat\":\".yyyy-MM-dd\",\"requestAttributesEnabled\":false,\"buffered\":true},\"internalProxies\":\"10\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|192\\\\.168\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|169\\\\.254\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|127\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|172\\\\.1[6-9]{1}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|172\\\\.2[0-9]{1}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|172\\\\.3[0-1]{1}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}|0:0:0:0:0:0:0:1|::1\",\"protocolHeader\":null,\"protocolHeaderHttpsValue\":\"https\",\"portHeader\":\"X-Forwarded-Port\",\"remoteIpHeader\":null,\"basedir\":null,\"backgroundProcessorDelay\":10,\"maxThreads\":4,\"minSpareThreads\":10,\"maxHttpPostSize\":2097152,\"redirectContextRoot\":true,\"uriEncoding\":\"UTF-8\",\"maxConnections\":0,\"acceptCount\":10,\"additionalTldSkipPatterns\":[]},\"displayName\":\"application\",\"session\":{\"timeout\":null,\"trackingModes\":null,\"persistent\":false,\"storeDir\":null,\"cookie\":{\"name\":null,\"domain\":null,\"path\":null,\"comment\":null,\"httpOnly\":null,\"secure\":null,\"maxAge\":null}},\"contextPath\":null,\"error\":{\"path\":\"/error\",\"includeStacktrace\":\"NEVER\"},\"ssl\":null,\"serverHeader\":null,\"useForwardHeaders\":null,\"port\":null,\"maxHttpHeaderSize\":131072,\"servletPath\":\"/\",\"jspServlet\":null,\"jetty\":{\"maxHttpPostSize\":200000,\"acceptors\":-1,\"selectors\":-1},\"connectionTimeout\":null}},\"spring.metrics.export-org.springframework.boot.actuate.metrics.export.MetricExportProperties\":{\"prefix\":\"spring.metrics.export\",\"properties\":{\"excludes\":null,\"statsd\":{\"host\":null,\"port\":8125,\"prefix\":null},\"includes\":null,\"triggers\":{},\"enabled\":true,\"redis\":{\"prefix\":\"spring.metrics.rdw-reporting-service.6fa75a46c7cdecf3d0ab39e5ddef2f80\",\"key\":\"******\"},\"aggregate\":{\"prefix\":\"rdw-reporting-service.6fa75a46c7cdecf3d0ab39e5ddef2f80\",\"keyPattern\":\"k.d\"}}},\"spring.integration.poller-org.springframework.cloud.stream.config.DefaultPollerProperties\":{\"prefix\":\"spring.integration.poller\",\"properties\":{\"fixedDelay\":1000,\"maxMessagesPerPoll\":1}},\"configurationPropertiesReportEndpoint\":{\"prefix\":\"endpoints.configprops\",\"properties\":{\"id\":\"configprops\",\"sensitive\":true,\"enabled\":true}},\"scopedTarget.writableDataSourceElementsProperties\":{\"prefix\":\"datasources.reporting_rw\",\"properties\":{\"urlParts\":{\"protocol\":\"jdbc:mysql:\",\"hosts\":\"host.docker.internal:3306\",\"database\":\"reporting\",\"properties\":\"useSSL=false&useLegacyDatetimeCode=false&characterEncoding=utf8&rewriteBatchedStatements=true&useCompression=true&connectTimeout=10000&socketTimeout=40000\"},\"tenants\":{\"CA\":{\"url\":null,\"urlParts\":null,\"jdbcInterceptors\":null,\"username\":null,\"password\":null,\"testWhileIdle\":null,\"validationQuery\":null,\"validationQueryTimeout\":null,\"driverClassName\":null,\"initialSize\":1,\"maxActive\":2,\"minIdle\":null,\"maxIdle\":null,\"removeAbandoned\":null,\"removeAbandonedTimeout\":null,\"logAbandoned\":null}},\"jdbcInterceptors\":\"QueryTimeoutInterceptor(queryTimeout=30)\",\"minIdle\":4,\"validationQuery\":\"SELECT 1\",\"initialSize\":4,\"url\":\"jdbc:mysql://host.docker.internal:3306/reporting?useSSL=false&useLegacyDatetimeCode=false&characterEncoding=utf8&rewriteBatchedStatements=true&useCompression=true&connectTimeout=10000&socketTimeout=40000\",\"logAbandoned\":false,\"password\":\"******\",\"testWhileIdle\":true,\"maxIdle\":10,\"removeAbandoned\":false,\"driverClassName\":\"com.mysql.jdbc.Driver\",\"removeAbandonedTimeout\":60,\"username\":\"root\",\"validationQueryTimeout\":10000,\"maxActive\":10}},\"loggersEndpoint\":{\"prefix\":\"endpoints.loggers\",\"properties\":{\"id\":\"loggers\",\"sensitive\":true,\"enabled\":true}},\"endpoints.jmx-org.springframework.boot.actuate.autoconfigure.EndpointMBeanExportProperties\":{\"prefix\":\"endpoints.jmx\",\"properties\":{\"uniqueNames\":false,\"staticNames\":{},\"enabled\":true,\"domain\":\"\"}},\"spring.http.encoding-org.springframework.boot.autoconfigure.web.HttpEncodingProperties\":{\"prefix\":\"spring.http.encoding\",\"properties\":{\"charset\":\"UTF-8\",\"force\":false,\"mapping\":null,\"forceRequest\":false,\"forceResponse\":false}},\"shutdownEndpoint\":{\"prefix\":\"endpoints.shutdown\",\"properties\":{\"id\":\"shutdown\",\"sensitive\":true,\"enabled\":false}},\"beansEndpoint\":{\"prefix\":\"endpoints.beans\",\"properties\":{\"id\":\"beans\",\"sensitive\":true,\"enabled\":true}},\"requestMappingEndpoint\":{\"prefix\":\"endpoints.mappings\",\"properties\":{\"id\":\"mappings\",\"sensitive\":true,\"enabled\":true}},\"scopedTarget.reportingSystemSettings\":{\"prefix\":\"reporting\",\"properties\":{\"irisVendorId\":null,\"tenants\":{\"CA\":{\"analyticsTrackingId\":null,\"interpretiveGuideUrl\":null,\"accessDeniedUrl\":null,\"irisVendorId\":null,\"minItemDataYear\":null,\"percentileDisplayEnabled\":null,\"reportLanguages\":[],\"schoolYear\":2019,\"state\":{\"name\":\"California\",\"code\":\"CA\"},\"transferAccessEnabled\":null,\"translationLocation\":null,\"uiLanguages\":[],\"userGuideUrl\":null,\"targetReport\":{\"insufficientDataCutoff\":null,\"minNumberOfStudents\":null},\"studentFields\":{},\"effectiveReportLanguages\":[\"en\"]}},\"transferAccessEnabled\":null,\"reportLanguages\":[],\"effectiveReportLanguages\":[\"en\"],\"interpretiveGuideUrl\":null,\"accessDeniedUrl\":null,\"uiLanguages\":[],\"translationLocation\":null,\"userGuideUrl\":null,\"schoolYear\":2019,\"minItemDataYear\":null,\"percentileDisplayEnabled\":null,\"state\":{\"name\":\"California\",\"code\":\"CA\"},\"targetReport\":{\"insufficientDataCutoff\":null,\"minNumberOfStudents\":null},\"studentFields\":{},\"analyticsTrackingId\":null}},\"refreshEndpoint\":{\"prefix\":\"endpoints.refresh\",\"properties\":{\"id\":\"refresh\",\"sensitive\":true,\"enabled\":true}},\"scopedTarget.dataSourceElementsProperties\":{\"prefix\":\"datasources.reporting_ro\",\"properties\":{\"urlParts\":{\"protocol\":\"jdbc:mysql:\",\"hosts\":\"host.docker.internal:3306\",\"database\":\"reporting\",\"properties\":\"useSSL=false&useLegacyDatetimeCode=false&characterEncoding=utf8&rewriteBatchedStatements=true&connectTimeout=10000&socketTimeout=40000\"},\"tenants\":{\"CA\":{\"url\":null,\"urlParts\":null,\"jdbcInterceptors\":null,\"username\":null,\"password\":null,\"testWhileIdle\":null,\"validationQuery\":null,\"validationQueryTimeout\":null,\"driverClassName\":null,\"initialSize\":1,\"maxActive\":2,\"minIdle\":null,\"maxIdle\":null,\"removeAbandoned\":null,\"removeAbandonedTimeout\":null,\"logAbandoned\":null}},\"jdbcInterceptors\":\"QueryTimeoutInterceptor(queryTimeout=30)\",\"minIdle\":4,\"validationQuery\":\"SELECT 1\",\"initialSize\":4,\"url\":\"jdbc:mysql://host.docker.internal:3306/reporting?useSSL=false&useLegacyDatetimeCode=false&characterEncoding=utf8&rewriteBatchedStatements=true&connectTimeout=10000&socketTimeout=40000\",\"logAbandoned\":false,\"password\":\"******\",\"testWhileIdle\":true,\"maxIdle\":10,\"removeAbandoned\":false,\"driverClassName\":\"com.mysql.jdbc.Driver\",\"removeAbandonedTimeout\":60,\"username\":\"root\",\"validationQueryTimeout\":10000,\"maxActive\":10}},\"jwtSettings\":{\"prefix\":\"jwt\",\"properties\":{\"routePaths\":null,\"secret\":\"******\"}},\"spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties\":{\"prefix\":\"spring.transaction\",\"properties\":{\"rollbackOnCommitFailure\":null,\"defaultTimeout\":null}},\"statusEndpoint\":{\"prefix\":\"endpoints.status\",\"properties\":{\"id\":\"status\",\"sensitive\":true,\"enabled\":true}},\"spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties\":{\"prefix\":\"spring.jackson\",\"properties\":{\"serialization\":{\"WRITE_DATES_AS_TIMESTAMPS\":false},\"propertyNamingStrategy\":null,\"defaultPropertyInclusion\":\"NON_NULL\",\"parser\":{},\"dateFormat\":null,\"deserialization\":{},\"generator\":{},\"timeZone\":null,\"mapper\":{},\"locale\":null,\"jodaDateTimeFormat\":null}},\"busEndpoint\":{\"prefix\":\"endpoints.bus\",\"properties\":{\"id\":\"bus\",\"sensitive\":true,\"enabled\":true}},\"spring.http.multipart-org.springframework.boot.autoconfigure.web.MultipartProperties\":{\"prefix\":\"spring.http.multipart\",\"properties\":{\"maxRequestSize\":\"10MB\",\"fileSizeThreshold\":\"0\",\"location\":null,\"maxFileSize\":\"1MB\",\"enabled\":true,\"resolveLazily\":false}},\"spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties\":{\"prefix\":\"spring.info\",\"properties\":{\"build\":{\"location\":{}},\"git\":{\"location\":{}}}},\"spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties\":{\"prefix\":\"spring.datasource\",\"properties\":{\"schema\":null,\"dataPassword\":null,\"data\":null,\"dataUsername\":null,\"generateUniqueName\":false,\"xa\":{\"dataSourceClassName\":null,\"properties\":{}},\"type\":null,\"separator\":\";\",\"url\":null,\"platform\":\"all\",\"continueOnError\":false,\"jndiName\":null,\"sqlScriptEncoding\":null,\"password\":null,\"schemaPassword\":null,\"name\":\"testdb\",\"driverClassName\":null,\"initialize\":true,\"schemaUsername\":null,\"username\":null}},\"traceEndpoint\":{\"prefix\":\"endpoints.trace\",\"properties\":{\"id\":\"trace\",\"sensitive\":true,\"enabled\":true}},\"infoEndpoint\":{\"prefix\":\"endpoints.info\",\"properties\":{\"id\":\"info\",\"sensitive\":false,\"enabled\":true}},\"management.trace-org.springframework.boot.actuate.trace.TraceProperties\":{\"prefix\":\"management.trace\",\"properties\":{\"include\":[\"COOKIES\",\"ERRORS\",\"TIME_TAKEN\",\"REQUEST_HEADERS\",\"RESPONSE_HEADERS\"]}},\"spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties\":{\"prefix\":\"spring.resources\",\"properties\":{\"cachePeriod\":null,\"addMappings\":true,\"chain\":{\"cache\":true,\"htmlApplicationCache\":false,\"gzipped\":true,\"strategy\":{\"fixed\":{\"enabled\":false,\"paths\":[\"/**\"],\"version\":null},\"content\":{\"enabled\":false,\"paths\":[\"/**\"]}}},\"staticLocations\":[\"/\",\"classpath:/META-INF/resources/\",\"classpath:/resources/\",\"classpath:/static/\",\"classpath:/public/\"]}},\"management.health.status-org.springframework.boot.actuate.autoconfigure.HealthIndicatorProperties\":{\"prefix\":\"management.health.status\",\"properties\":{\"order\":null}},\"healthEndpoint\":{\"prefix\":\"endpoints.health\",\"properties\":{\"timeToLive\":1000,\"id\":\"health\",\"sensitive\":false,\"enabled\":true}},\"scopedTarget.tenantProperties\":{\"prefix\":\"tenant-properties\",\"properties\":{\"tenants\":[{\"id\":\"CA\",\"key\":\"******\",\"name\":null,\"description\":null},{\"id\":\"NV\",\"key\":\"******\",\"name\":null,\"description\":null}]}},\"sqlBuilderConfig\":{\"prefix\":\"sqlbuilder\",\"properties\":{\"templates\":null}},\"spring.cloud.stream.integration-org.springframework.cloud.stream.config.SpringIntegrationProperties\":{\"prefix\":\"spring.cloud.stream.integration\",\"properties\":{\"messageHandlerNotPropagatedHeaders\":[\"contentType\"]}},\"configClientProperties\":{\"prefix\":\"spring.cloud.config\",\"properties\":{\"headers\":{},\"profile\":\"local-docker\",\"label\":\"rdw,develop,master\",\"uri\":\"http://config-server:8888\",\"enabled\":true,\"failFast\":true,\"token\":null,\"authorization\":null,\"password\":null,\"discovery\":{\"enabled\":false,\"serviceId\":\"configserver\"},\"name\":\"rdw-reporting-service\",\"username\":\"user\"}},\"endpoints.metrics.filter-org.springframework.boot.actuate.autoconfigure.MetricFilterProperties\":{\"prefix\":\"endpoints.metrics.filter\",\"properties\":{\"counterSubmissions\":[\"MERGED\"],\"gaugeSubmissions\":[\"MERGED\"]}},\"securityProperties\":{\"prefix\":\"security\",\"properties\":{\"headers\":{\"xss\":true,\"cache\":true,\"frame\":true,\"contentType\":true,\"contentSecurityPolicy\":null,\"contentSecurityPolicyMode\":\"DEFAULT\",\"hsts\":\"ALL\"},\"ignored\":[],\"sessions\":\"STATELESS\",\"requireSsl\":false,\"filterOrder\":-100,\"enableCsrf\":false,\"filterDispatcherTypes\":null,\"basic\":{\"enabled\":true,\"realm\":\"Spring\",\"path\":[\"/**\"],\"authorizeMode\":\"ROLE\"},\"user\":{\"name\":\"user\",\"password\":\"******\",\"role\":[\"USER\",\"ACTUATOR\"]}}},\"dumpEndpoint\":{\"prefix\":\"endpoints.dump\",\"properties\":{\"id\":\"dump\",\"sensitive\":true,\"enabled\":true}},\"autoConfigurationReportEndpoint\":{\"prefix\":\"endpoints.autoconfig\",\"properties\":{\"id\":\"autoconfig\",\"sensitive\":true,\"enabled\":true}},\"artifactRepositorySettings\":{\"prefix\":\"artifacts\",\"properties\":{\"examItem\":{\"directory\":\"item-content/bank/items/Item-{0}/\",\"fileName\":\"item-{0}.xml\"},\"root\":\"s3://rdw-resources/\"}},\"managementServerProperties\":{\"prefix\":\"management\",\"properties\":{\"security\":{\"enabled\":false,\"roles\":[\"ACTUATOR\"],\"sessions\":\"STATELESS\"},\"address\":null,\"port\":8008,\"addApplicationContextHeader\":true,\"contextPath\":\"\",\"ssl\":null}},\"spring.cloud.bus-org.springframework.cloud.bus.BusProperties\":{\"prefix\":\"spring.cloud.bus\",\"properties\":{\"trace\":{\"enabled\":false},\"ack\":{\"enabled\":true,\"destinationService\":null},\"destination\":\"springCloudBus\",\"refresh\":{\"enabled\":true},\"env\":{\"enabled\":true},\"enabled\":true}},\"simpleDiscoveryProperties\":{\"prefix\":\"spring.cloud.discovery.client.simple\",\"properties\":{\"instances\":{},\"local\":{\"uri\":\"http://47d22f379308:0\",\"metadata\":{},\"serviceId\":\"rdw-reporting-service\"}}},\"spring.mvc-org.springframework.boot.autoconfigure.web.WebMvcProperties\":{\"prefix\":\"spring.mvc\",\"properties\":{\"dateFormat\":null,\"servlet\":{\"loadOnStartup\":-1},\"staticPathPattern\":\"/**\",\"dispatchOptionsRequest\":true,\"dispatchTraceRequest\":false,\"locale\":null,\"ignoreDefaultModelOnRedirect\":true,\"logResolvedException\":false,\"async\":{\"requestTimeout\":null},\"messageCodesResolverFormat\":null,\"mediaTypes\":{},\"view\":{\"prefix\":null,\"suffix\":null},\"localeResolver\":\"ACCEPT_HEADER\",\"throwExceptionIfNoHandlerFound\":false}},\"diskSpaceHealthIndicatorProperties\":{\"prefix\":\"management.health.diskspace\",\"properties\":{\"path\":\"/.\",\"threshold\":10485760}}}",
                header,
                HttpStatus.OK // Or HttpStatus.ACCEPTED
        );
        responseEntities.add(responseEntity3);
        return responseEntities;
    }
}