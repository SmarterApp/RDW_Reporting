package org.opentestsystem.rdw.admin.service.impl;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.rdw.admin.configuration.multitenant.*;
import org.opentestsystem.rdw.multitenant.TenantProperties;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.assertj.core.api.Assertions.assertThat;

public class DefaultTenantServiceTest {
    private static final Logger logger = LoggerFactory.getLogger(DefaultTenantServiceTest.class);

    TenantProperties tenantProperties;

    //private HashMap<String, TenantConfiguration> tenantConfigurationMap = new HashMap<>();
    private DefaultTenantService service;

    @Before
    public void setUp() {
        //creating a new service so the cache is empty at the start of the tests
        service = new DefaultTenantService(tenantProperties);
    }

    @Test
    public void getAll() {
        logger.info("TenantService getAll Test");

        // Add a couple of tenantConfiguration to test
        TenantConfiguration tenantConfiguration = createTestTenantFromJson(tenantJson);
        service.addTenantConfiguration(tenantConfiguration);

        TenantConfiguration tenantConfiguration2 = createTestTenantFromJson(tenantJson1);
        service.addTenantConfiguration(tenantConfiguration2);

        List<TenantConfiguration> tenantList = service.getAll();
        verifyTenantList(tenantList, 2);

        // visual dump of tenants
        tenantList.forEach(tenant -> {
            String tenantId = tenant.getTenant().getId();
            logger.info("Tenant = {}", tenantId);
            logger.info("ServiceProperties = {}", tenant.getConfigurationProperties());
        });

    }

    @Test
    public void createTenant() {
        logger.info("TenantService createTenant Test");

        // create a tenantConfiguration to test
        TenantConfiguration tenantConfiguration = createTestTenantFromJson(tenantJson1);
        service.createTenant(tenantConfiguration.getTenantOverride());

        List<TenantConfiguration> tenantList = service.getAll();
        verifyTenantList(tenantList, 1, tenantConfiguration);
    }

    @Test
    public void deleteTenant() {
        // create a tenantConfiguration to test delete
        TenantConfiguration tenantConfiguration = createTestTenantFromJson(tenantJson2);
        service.createTenant(tenantConfiguration.getTenantOverride());

        // verify AZ tenant is created
        List<TenantConfiguration> tenantList = service.getAll();
        verifyTenantList(tenantList, 1, tenantConfiguration);

        // now ok to delete
        service.deleteTenant(tenantConfiguration.getTenant().getId());

        // verify tenant was removed from list
        tenantList.clear();
        tenantList = service.getAll();
        assertThat(tenantList).isNotNull();
        assertThat(tenantList).isEmpty();
    }


    @Test
    public void updateTenant() {
        logger.info("TenantService updateTenant Test");

        // create a tenantConfiguration to test
        TenantConfiguration tenantConfiguration = createTestTenantFromJson(tenantJson1);
        service.createTenant(tenantConfiguration.getTenantOverride());

        List<TenantConfiguration> tenantList = service.getAll();
        verifyTenantList(tenantList, 1, tenantConfiguration);
    }

    /**
     * Verify the list Basics
     * @param tenantList list of current Tenants
     * @param expectedSize how many tenants are expected in the list
     */
    private void verifyTenantList(List<TenantConfiguration> tenantList, int expectedSize) {
        assertThat(tenantList).isNotNull();
        assertThat(tenantList).isNotEmpty();
        logger.info("TenantListSize = {}", tenantList.size());
        assertThat(tenantList.size()).isEqualTo(expectedSize);
    }

    /**
     * Verify a specific tenant in the list returned from getAll
     * @param tenantList list of current Tenants
     * @param expectedSize how many tenants are expected in the list
     * @param expectedTenantConfiguration the tenantConfiguration to validate against same tenantId in list
     */
    private void verifyTenantList(List<TenantConfiguration> tenantList, int expectedSize, TenantConfiguration expectedTenantConfiguration) {
        verifyTenantList(tenantList, expectedSize);

        tenantList.forEach(tenant -> verifyTenant(tenant, expectedTenantConfiguration));
    }

    /**
     * Validate the two given tenants are equal
     * todo improve the validation
     * @param tenantConfiguration the tenantConfiguration to test
     * @param expectedTenantConfiguration the tenant used to create or update the tenant config
     */
    private void verifyTenant(TenantConfiguration tenantConfiguration, TenantConfiguration expectedTenantConfiguration) {

        String tenantId = tenantConfiguration.getTenant().getId();
        assertThat(tenantId).isEqualTo(expectedTenantConfiguration.getTenant().getId());
        logger.info("Tenant id = {}", tenantId);
    }

    private TenantConfiguration createTestTenantFromJson(String tenantJson) {

        ConfigurationProperties configurationProperties = getTestConfigurationProperties(tenantJson);

        TenantConfiguration tenantConfiguration = new TenantConfiguration();
        tenantConfiguration.setConfigurationProperties(configurationProperties);
        return tenantConfiguration;
    }

    private ConfigurationProperties getTestConfigurationProperties(String testServices) {
        Gson gson = new GsonBuilder().create();
        return gson.fromJson(testServices, ConfigurationProperties.class);
    }

    private TenantConfiguration getTestConfiguration(String testServices) {
        Gson gson = new GsonBuilder().create();
        return gson.fromJson(testServices, TenantConfiguration.class);
    }
    
    private String tenantJson = "{ " +
            "   \"tenant\":{" +
            "      \"id\":\"CA\"," +
            "      \"key\":\"CA\"," +
            "      \"name\":\"California\"," +
            "      \"description\":\"This is a California's Tenant.\"" +
            "   }," +
            "   \"tenantOverrides\":{ " +
            "      \"tenant\":{ " +
            "         \"id\":\"CA\", " +
            "         \"key\":\"CA\", " +
            "         \"name\":\"California\", " +
            "         \"description\":\"Updated description\" " +
            "      }" +
            "   }" +
            "}";

    private String tenantJson1 = "{" +
            "     \"tenant\": {" +
            "        \"id\": \"NV\"," +
            "        \"key\": \"NV\"," +
            "        \"displayName\": \"Nevada\"," +
            "        \"description\": \"This is a Nevada's Tenant\"" +
            "      },"+
            "   \"configurationProperties\":{ " +
            "      \"datasources\":{ " +
            "         \"reporting_ro\":{ " +
            "            \"url-server\":\"rdw-aurora-\", " +
            "            \"username\":\"sbac\", " +
            "            \"password\":\"****\", " +
            "            \"initialSize\":\"1\", " +
            "            \"maxActive\":\"2\" " +
            "         } " +
            "      }," +
            "      \"reporting\":{ " +
            "         \"school-year\":\"2018\", " +
            "         \"transfer-access-enabled\":\"true\", " +
            "         \"translation-location\":\"binary-\", " +
            "      }" +
            "   }," +
            "   \"tenantOverrides\":{ " +
            "      \"tenant\":{ " +
            "         \"id\":\"CA\", " +
            "         \"key\":\"CA\", " +
            "         \"name\":\"California\", " +
            "         \"description\":\"Updated description\" " +
            "      }, " +
            "      \"configurationProperties\":{ " +
            "         \"datasources\":{ " +
            "            \"reporting_ro\":{ " +
            "               \"maxActive\":\"3\" " +
            "            } " +
            "         } " +
            "      }," +
            "      \"reporting\":{ " +
            "         \"transfer-access-enabled\":\"false\", " +
            "         \"student-fields\":{ " +
            "            \"EconomicDisadvantage\":\"enabled\" " +
            "         }, " +
            "      }" +
            "   }" +
            "}";

    private String tenantJson2 = "{ " +
            "   \"tenant\":{ " +
            "      \"id\":\"CA\", " +
            "      \"key\":\"CA\", " +
            "      \"name\":\"California\", " +
            "      \"description\":\"This is a description\" " +
            "   }, " +
            "   \"configurationProperties\":{ " +
            "      \"datasources\":{ " +
            "         \"reporting_ro\":{ " +
            "            \"url-server\":\"rdw-aurora-\", " +
            "            \"username\":\"sbac\", " +
            "            \"password\":\"****\", " +
            "            \"initialSize\":\"1\", " +
            "            \"maxActive\":\"2\" " +
            "         }, " +
            "         \"warehouse_rw\":{ " +
            "            \"url-server\":\"rdw-aurora-\", " +
            "            \"username\":\"sbac\", " +
            "            \"password\":\"****\" " +
            "            \"initialSize\":\"1\",, " +
            "            \"maxActive\":\"2\" " +
            "         }, " +
            "         \"olap_ro\":{ " +
            "            \"url-server\":\"rdw-aurora-\", " +
            "            \"username\":\"sbac\", " +
            "            \"password\":\"****\", " +
            "            \"initialSize\":\"1\", " +
            "            \"maxActive\":\"2\" " +
            "         }, " +
            "         \"reporting_rw\":{ " +
            "            \"url-server\":\"rdw-aurora-\", " +
            "            \"username\":\"sbac\", " +
            "            \"password\":\"****\", " +
            "            \"initialSize\":\"1\", " +
            "            \"maxActive\":\"2\" " +
            "         } " +
            "      }, " +
            "      \"reporting\":{ " +
            "         \"school-year\":\"2018\", " +
            "         \"transfer-access-enabled\":\"true\", " +
            "         \"translation-location\":\"binary-\", " +
            "         \"analytics-tracking-id\":\"UA-102446884-4\", " +
            "         \"interpretive-guide-url\":\"https://portal.smarterbalanced.org/library/en/reporting-system-interpretive-guide.pdf\", " +
            "         \"user-guide-url\":\"https://portal.smarterbalanced.org/library/en/reporting-system-user-guide.pdf\", " +
            "         \"access-denied-url\":\"forward:/assets/public/access-denied.html\", " +
            "         \"landing-page-url\":\"forward:/landing.html\", " +
            "         \"percentile-display-enabled\":\"true\", " +
            "         \"report-languages\":\"es\", " +
            "         \"ui-languages\":\"es\", " +
            "         \"student-fields\":{ " +
            "            \"EconomicDisadvantage\":\"disabled\", " +
            "            \"LimitedEnglishProficiency\":\"disabled\", " +
            "            \"MigrantStatus\":\"enabled\", " +
            "            \"EnglishLanguageAcquisitionStatus\":\"enabled\", " +
            "            \"PrimaryLanguage\":\"enabled\", " +
            "            \"Ethnicity\":\"enabled\", " +
            "            \"Gender\":\"admin\", " +
            "            \"IndividualEducationPlan\":\"admin\", " +
            "            \"Section504\":\"admin\" " +
            "         }, " +
            "         \"state\":{ " +
            "            \"code\":\"CA\", " +
            "            \"name\":\"California\" " +
            "         } " +
            "      }, " +
            "      \"task\":{ " +
            "         \"remove-stale-reports\":{ " +
            "            \"cron\":\"0 0 8 * * *\", " +
            "            \"max-report-lifetime-days\":\"30\", " +
            "            \"max-random-minutes\":\"20\" " +
            "         } " +
            "      } " +
            "   }, " +
            "   \"tenantOverrides\":{ " +
            "      \"tenant\":{ " +
            "         \"id\":\"CA\", " +
            "         \"key\":\"CA\", " +
            "         \"name\":\"California\", " +
            "         \"description\":\"This is a description\" " +
            "      }, " +
            "      \"configurationProperties\":{ " +
            "         \"datasources\":{ " +
            "            \"reporting_ro_datasource\":{ " +
            "               \"initialSize\":\"1\", " +
            "               \"maxActive\":\"2\" " +
            "            }, " +
            "            \"warehouse_rw_datasource\":{ " +
            "               \"initialSize\":\"1\", " +
            "               \"maxActive\":\"2\" " +
            "            }, " +
            "            \"olap_ro_datasource\":{ " +
            "               \"initialSize\":\"1\", " +
            "               \"maxActive\":\"2\" " +
            "            }, " +
            "            \"reporting_rw_datasource\":{ " +
            "               \"initialSize\":\"1\", " +
            "               \"maxActive\":\"2\" " +
            "            } " +
            "         }, " +
            "         \"reporting\":{ " +
            "            \"percentile-display-enabled\":\"false\", " +
            "            \"student-fields\":{ " +
            "               \"EconomicDisadvantage\":\"enabled\" " +
            "            }, " +
            "            \"state\":{ " +
            "               \"code\":\"CA\", " +
            "               \"name\":\"California\" " +
            "            } " +
            "         } " +
            "      } " +
            "   } " +
            "}";


}