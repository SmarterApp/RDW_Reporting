package org.opentestsystem.rdw.olap.repository.impl;

import org.junit.Test;
import org.opentestsystem.rdw.olap.model.ReportQuery;
import org.opentestsystem.rdw.olap.model.ReportRow;
import org.opentestsystem.rdw.olap.repository.CustomAggregateReportRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Import;
import org.springframework.test.context.jdbc.Sql;

import java.util.List;

import static com.google.common.collect.ImmutableList.of;
import static org.assertj.core.api.Assertions.assertThat;
import static org.opentestsystem.rdw.olap.model.DimensionType.Ethnicity;
import static org.opentestsystem.rdw.olap.model.DimensionType.Gender;
import static org.opentestsystem.rdw.olap.model.DimensionType.Overall;

@Import(JdbcCustomAggregateReportRowRepository.class)
@Sql(scripts = {
        "classpath:OlapCodesSetup.sql",
        "classpath:OlapEntitiesSetup.sql"
})
public class JdbcCustomAggregateReportRowRepositoryRST extends RepositoryBackedIT {

    @Autowired
    private CustomAggregateReportRepository reportRepository;

    @Test
    public void itShouldFindByQuery() {
        final List<ReportRow> reportRows = reportRepository.findByQuery(ReportQuery.builder()
                .asmtGrades(of(-98))
                .includeState(true)
                .schoolYears(of(1999))
                .subjectIds(of(1))
                .dimension(Overall)
                .includeAllDistricts(true)
                .includeAllSchools(true)
                .build());
        assertThat(reportRows.size()).isEqualTo(5);
    }

    @Test
    public void itShouldFindByQueryWithGender() {
        final List<ReportRow> reportRows = reportRepository.findByQuery(ReportQuery.builder()
                .asmtGrades(of(-98))
                .includeState(true)
                .schoolYears(of(1999))
                .subjectIds(of(1))
                .dimensions(of(Overall, Gender))
                .includeAllDistricts(true)
                .includeAllSchools(true)
                .build());
        assertThat(reportRows.size()).isEqualTo(10);
    }

    @Test
    public void itShouldFindByQueryWithEthnicity() {
        final List<ReportRow> reportRows = reportRepository.findByQuery(ReportQuery.builder()
                .asmtGrades(of(-98))
                .includeState(true)
                .schoolYears(of(1999))
                .subjectIds(of(1))
                .dimensions(of(Ethnicity))
                .includeAllDistricts(true)
                .includeAllSchools(true)
                .build());
        assertThat(reportRows.size()).isEqualTo(5);
    }
}