package org.opentestsystem.rdw.reporting.processor.service;

import org.opentestsystem.rdw.archive.ArchiveService;
import org.opentestsystem.rdw.reporting.common.model.Report;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.io.InputStream;
import java.net.URI;

/**
 * This implementation of a ReportContentService is backed by an ArchiveService.
 */
@Service
public class ArchiveBackedReportContentService implements ReportContentService {
    private final static String BasePath = "REPORTS/USER/";

    private final ArchiveService archiveService;
    private final ReportService reportService;

    @Autowired
    public ArchiveBackedReportContentService(final ArchiveService archiveService,
                                             final ReportService reportService) {
        this.archiveService = archiveService;
        this.reportService = reportService;
    }

    @Override
    public Report writeContent(final Report report, final InputStream content) {
        final URI uri = createUri(report);
        archiveService.writeResource(uri.toASCIIString(), content, null);

        return reportService.update(report.copy()
            .reportResourceUri(uri)
            .build());
    }

    @Override
    public InputStream openContent(final Report report) {
        final URI uri = report.getReportResourceUri();
        if (uri == null) {
            throw new IllegalArgumentException("Report has no content URI: " + report.getId());
        }

        return archiveService.openResource(uri.toASCIIString());
    }

    private URI createUri(final Report report) {
        return URI.create(BasePath + report.getId() + ".pdf");
    }
}
