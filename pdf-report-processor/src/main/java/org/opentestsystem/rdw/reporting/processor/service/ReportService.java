package org.opentestsystem.rdw.reporting.processor.service;

import org.opentestsystem.rdw.reporting.common.report.BatchExamReportRequestHolder;
import org.opentestsystem.rdw.reporting.processor.model.Report;

import java.io.InputStream;
import java.util.Collection;
import java.util.List;
import java.util.Optional;

/**
 * Implementations of this interface are responsible for creating and retrieving Reports.
 */
public interface ReportService {

    /**
     * Create a new Report.  This triggers a report generation asynchronously and
     * returns the new Report in a Running state.
     *
     * @param requestHolder The report generation request
     * @return The new Report
     */
    Report generateReport(BatchExamReportRequestHolder requestHolder);

    /**
     * Find all Reports for a given user, optionally filtered by Report id.
     *
     * @param user      The user
     * @param reportIds Optional report id filter, empty returns all reports for the user
     * @return  The requested reports
     */
    List<Report> findAllByUserAndId(String user, Collection<Long> reportIds);

    /**
     * Retrieve the report content bytes for the given report.
     * Note: Callers MUST close the InputStream when finished.
     *
     * @param reportId  A report id
     * @return A stream providing the report bytes
     */
    InputStream getContent(long reportId);

    /**
     * Retrieve a report by id.
     *
     * @param reportId  The report id
     * @return The report, if it exists
     */
    Optional<Report> findOneById(long reportId);
}
