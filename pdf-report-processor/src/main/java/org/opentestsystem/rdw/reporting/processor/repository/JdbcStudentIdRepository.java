package org.opentestsystem.rdw.reporting.processor.repository;

import com.google.common.collect.ImmutableMap;
import org.opentestsystem.rdw.reporting.common.report.ExamFilter;
import org.opentestsystem.rdw.reporting.common.security.PermissionScope;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;

import java.util.Collection;

import static org.opentestsystem.rdw.reporting.common.jdbc.QueryUtils.getExamFilterParameters;
import static org.opentestsystem.rdw.reporting.common.jdbc.QueryUtils.getSecurityParameters;

/**
 * JDBC-backed implementation of a StudentIdRepository
 */
@Repository
public class JdbcStudentIdRepository implements StudentIdRepository {

    @Value("${sql.studentId.findByExamFilter}")
    private String findByExamFilter;

    private final NamedParameterJdbcTemplate template;

    @Autowired
    public JdbcStudentIdRepository(final NamedParameterJdbcTemplate template) {
        this.template = template;
    }

    @Override
    public Collection<Long> findStudentIdsBySchoolGradeAndYear(final PermissionScope permissionScope,
                                                               final ExamFilter examFilter) {
        return template.query(
                findByExamFilter,
                ImmutableMap.<String, Object>builder()
                        .putAll(getSecurityParameters(permissionScope))
                        .putAll(getExamFilterParameters(examFilter))
                        .build(),
                (row, rowNum) -> row.getLong("id")
        );
    }
}
