package org.opentestsystem.rdw.reporting.processor.service;

import com.google.common.collect.ImmutableList;
import org.opentestsystem.rdw.reporting.common.model.Report;
import org.opentestsystem.rdw.reporting.common.model.ReportStatus;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.io.InputStream;
import java.util.Calendar;
import java.util.Collection;
import java.util.List;
import java.util.Optional;
import java.util.concurrent.atomic.AtomicLong;

/**
 * Default implementation of a ReportService
 */
@Service
public class StubReportService implements ReportService {

    private static final AtomicLong reportIdx = new AtomicLong(1);

    @Autowired
    public StubReportService() {
    }

    @Override
    public Report insert(final Report report) {
        return report.copy()
                .id(reportIdx.getAndIncrement())
                .build();
    }

    @Override
    public List<Report> findAllByUserAndId(final String user, final Collection<Long> reportIds) {
        return ImmutableList.of(
                Report.builder()
                        .id(1L)
                        .label("Stub Report 1")
                        .status(ReportStatus.COMPLETED)
                        .created(new Calendar.Builder().setDate(2017, 1, 1).build().toInstant())
                        .build(),
                Report.builder()
                        .id(2L)
                        .label("Stub Report 2")
                        .status(ReportStatus.EXPIRED)
                        .created(new Calendar.Builder().setDate(2017, 1, 2).build().toInstant())
                        .build(),
                Report.builder()
                        .id(3L)
                        .label("Stub Report 3")
                        .status(ReportStatus.FAILED)
                        .created(new Calendar.Builder().setDate(2017, 2, 7).build().toInstant())
                        .build(),
                Report.builder()
                        .id(4L)
                        .label("Stub Report 4")
                        .status(ReportStatus.RUNNING)
                        .created(new Calendar.Builder().setDate(2017, 3, 8).build().toInstant())
                        .build()
        );
    }

    @Override
    public InputStream getContent(final long reportId) {
        return null;
    }

    @Override
    public Optional<Report> findOneById(final long reportId) {
        return Optional.empty();
    }

    @Override
    public Report update(final Report report) {
        return report;
    }
}
