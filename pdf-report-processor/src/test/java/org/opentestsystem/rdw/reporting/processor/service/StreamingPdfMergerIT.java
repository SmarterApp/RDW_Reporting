package org.opentestsystem.rdw.reporting.processor.service;

import com.google.common.io.Resources;
import com.itextpdf.text.pdf.PdfReader;
import org.apache.commons.io.IOUtils;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.TemporaryFolder;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.net.URL;
import java.util.List;
import java.util.function.Supplier;

import static com.google.common.collect.Lists.newArrayList;
import static org.assertj.core.api.Assertions.assertThat;

public class StreamingPdfMergerIT {

    @Rule
    public TemporaryFolder temporaryFolder = new TemporaryFolder();

    private URL testPdfUrl;
    private StreamingPdfMerger merger;

    @Before
    public void setup() {
        testPdfUrl = Resources.getResource("test-report.pdf");
        merger = new StreamingPdfMerger();
    }

    @Test
    public void itShouldMergePDFs() throws Exception {
        final File pdfA = new File(testPdfUrl.toURI());
        final File pdfB = new File(testPdfUrl.toURI());
        final File mergedPdf = temporaryFolder.newFile();

        final List<Supplier<InputStream>> sources = newArrayList(supplier(pdfA), supplier(pdfB));

        try (final FileOutputStream output = new FileOutputStream(mergedPdf);
             final InputStream mergedContent = merger.mergePdfs(sources)) {
            IOUtils.copy(mergedContent, output);
        }

        try (final FileInputStream mergedContent = new FileInputStream(mergedPdf)) {
            final PdfReader reader = new PdfReader(mergedContent);
            assertThat(reader.getNumberOfPages()).isEqualTo(4);
        }
    }

    private Supplier<InputStream> supplier(final File file) {
        return () -> {
            try {
                return new FileInputStream(file);
            } catch (final FileNotFoundException e) {
                throw new RuntimeException("File not found", e);
            }
        };
    }

}