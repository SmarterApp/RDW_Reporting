import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

apply plugin: 'com.bmuschko.docker-remote-api'
apply plugin: 'org.springframework.boot'

dependencies {
    compile project(':rdw-reporting-common')
    compile 'org.opentestsystem.rdw.common:rdw-common-security:0.0.1-SNAPSHOT'
    compile 'org.opentestsystem.rdw.common:rdw-common-utils:0.0.1-SNAPSHOT'
    optional 'org.springframework.boot:spring-boot-configuration-processor'
    runtime 'org.springframework.boot:spring-boot-devtools'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-cache'
    compile 'org.springframework.boot:spring-boot-starter-aop'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compile 'org.springframework.cloud:spring-cloud-stream'
    compile 'org.springframework.cloud:spring-cloud-starter-config'
    compile 'org.springframework.cloud:spring-cloud-starter-aws'
    compile 'org.springframework.cloud:spring-cloud-starter-stream-rabbit'
    compile 'org.springframework.retry:spring-retry'
    compile 'org.apache.commons:commons-io:1.3.2'
    compile 'com.google.guava:guava:21.0'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.7'

    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude(module: 'commons-logging')
    }
    testCompile 'org.springframework.security:spring-security-test'
}

// generate coverage report automatically (./build/reports/jacoco/test/html/index.html)
test.finalizedBy(jacocoTestReport)

// trigger creation of build-info.properties
classes.dependsOn(createBuildInfoFile)

// task to build the docker image
task buildImage(type: DockerBuildImage, dependsOn: [build, createDockerfile]) {
    dockerFile = createDockerfile.destFile
    inputDir = project.file('build/docker/')
    tag = "fwsbac/${project.name}"
    doFirst {
        copy {
            from jar
            into inputDir
        }
    }
}
