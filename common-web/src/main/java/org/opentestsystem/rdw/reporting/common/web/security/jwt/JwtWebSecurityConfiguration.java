package org.opentestsystem.rdw.reporting.common.web.security.jwt;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.actuate.endpoint.AbstractEndpoint;
import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Import;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.builders.WebSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.web.authentication.www.BasicAuthenticationFilter;

import java.util.Set;

@Configuration
@EnableWebSecurity
@Import({
        JwtSecurityConfiguration.class
})
public class JwtWebSecurityConfiguration extends WebSecurityConfigurerAdapter {

    @Autowired
    private JwtService service;

    @Autowired
    private Set<AbstractEndpoint> actuatorEndpoints;

    @Override
    public void configure(final AuthenticationManagerBuilder auth) throws Exception {
        auth.authenticationProvider(new JwtAuthenticationProvider(service));
    }

    @Override
    public void configure(final WebSecurity web) throws Exception {
        // Spring management.security.enabled=false is overridden when @WebSecurityConfiguration is used
        // See here: https://github.com/spring-projects/spring-boot/issues/8646
        // Also, we cannot prefix the secured paths with /api because zuul cannot route to them:
        // See here: https://github.com/spring-cloud/spring-cloud-netflix/issues/1069
        for (final AbstractEndpoint endpoint : actuatorEndpoints) {
            web.ignoring().antMatchers("/" + endpoint.getId() + "/**");
        }
    }

    @Override
    protected void configure(final HttpSecurity http) throws Exception {
        http
                .addFilterBefore(
                        new JwtAuthenticationFilter("/**", authenticationManager()),
                        BasicAuthenticationFilter.class
                )
                .sessionManagement()
                .sessionCreationPolicy(SessionCreationPolicy.STATELESS)
                .and()
                .csrf().disable()
                .authorizeRequests()
                .anyRequest().authenticated();
    }

}
