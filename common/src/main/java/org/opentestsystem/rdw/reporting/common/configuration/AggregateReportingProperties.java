package org.opentestsystem.rdw.reporting.common.configuration;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.stream.Collectors;

public interface AggregateReportingProperties {
    /**
     * This helper allows the property to be set to "null" (or "none") to create an empty set.
     * This is necessary because the default setting for this property is not empty and there
     * is no Spring way to create an empty property that overrides the default setting.
     *
     * @param values type values, may be null
     * @return list with "none"/"null" removed, may be empty but never null
     */
    static List<String> toTypes(final Collection<String> values) {
        return values == null ? new ArrayList<>() : values.stream()
                .filter(value -> !value.equalsIgnoreCase("none") && !value.equalsIgnoreCase("null"))
                .distinct()
                .collect(Collectors.toList());
    }

    /**
     * @return The assessment types non statewide aggregate reporters can select for aggregate reports
     */
    List<String> getAssessmentTypes();

    /**
     * @return The assessment types a statewide aggregate reporter can select for aggregate reports
     */
    List<String> getStatewideUserAssessmentTypes();

    /**
     * @return The assessment types allowed for the state level aggregation in the aggregate report
     */
    List<String> getStateAggregateAssessmentTypes();

}
