package org.opentestsystem.rdw.reporting.common.model;

import javax.validation.constraints.NotNull;
import java.util.Set;

import static com.google.common.base.Preconditions.checkArgument;
import static com.google.common.collect.Sets.newHashSet;

/**
 * Represents a query for the custom aggregate report
 */
public class ReportQuery {
    private int assessmentTypeId;
    private Set<Integer> subjectIds;
    private Set<Integer> schoolYears;
    private Set<Integer> assessmentGradeIds;
    private boolean includeState;
    private boolean includeAllDistricts;
    private boolean includeAllSchoolsOfDistricts;
    private boolean includeAllDistrictsOfSchools;
    private Set<Long> districtIds;
    private Set<Long> schoolIds;
    private Set<DimensionType> dimensionTypes;
    //pass through values
    private String valueDisplayType;
    private String achievementLevelDisplayType;
    // optional filters
    private Set<Integer> completenessIds;
    private Set<Integer> administrativeConditionIds;
    private Set<Integer> genderIds;
    private Set<Integer> ethnicityIds;
    private Set<Integer> lepIds;
    private Set<Integer> migrantStatusIds;
    private Set<Integer> section504Ids;
    private Set<Integer> iepIds;
    private Set<Integer> economicDisadvantageIds;

    public int getAssessmentTypeId() {
        return assessmentTypeId;
    }

    public Set<Integer> getSubjectIds() {
        return subjectIds == null ? newHashSet() : newHashSet(subjectIds);
    }

    public Set<Integer> getSchoolYears() {
        return schoolYears == null ? newHashSet() : newHashSet(schoolYears);
    }

    public Set<Integer> getAssessmentGradeIds() {
        return assessmentGradeIds == null ? newHashSet() : newHashSet(assessmentGradeIds);
    }

    public boolean isIncludeState() {
        return includeState;
    }

    public boolean isIncludeAllDistricts() {
        return includeAllDistricts;
    }

    public boolean isIncludeAllSchoolsOfDistricts() {
        return includeAllSchoolsOfDistricts;
    }

    public boolean isIncludeAllDistrictsOfSchools() {
        return includeAllDistrictsOfSchools;
    }

    public Set<Long> getSchoolIds() {
        return schoolIds == null ? newHashSet() : newHashSet(schoolIds);
    }

    public Set<Long> getDistrictIds() {
        return districtIds == null ? newHashSet() : newHashSet(districtIds);
    }

    public String getValueDisplayType() {
        return valueDisplayType;
    }

    public String getAchievementLevelDisplayType() {
        return achievementLevelDisplayType;
    }

    public Set<DimensionType> getDimensionTypes() {
        return dimensionTypes == null ? newHashSet() : newHashSet(dimensionTypes);
    }

    public Set<Integer> getCompletenessIds() {
        return completenessIds == null ? newHashSet() : newHashSet(completenessIds);
    }

    public Set<Integer> getAdministrativeConditionIds() {
        return administrativeConditionIds == null ? newHashSet() : newHashSet(administrativeConditionIds);
    }

    public Set<Integer> getGenderIds() {
        return genderIds == null ? newHashSet() : newHashSet(genderIds);
    }

    public Set<Integer> getEthnicityIds() {
        return ethnicityIds == null ? newHashSet() : newHashSet(ethnicityIds);
    }

    public Set<Integer> getLepIds() {
        return lepIds == null ? newHashSet() : newHashSet(lepIds);
    }

    public Set<Integer> getMigrantStatusIds() {
        return migrantStatusIds == null ? newHashSet() : newHashSet(migrantStatusIds);
    }

    public Set<Integer> getSection504Ids() {
        return section504Ids == null ? newHashSet() : newHashSet(section504Ids);
    }

    public Set<Integer> getIepIds() {
        return iepIds == null ? newHashSet() : newHashSet(iepIds);
    }

    public Set<Integer> getEconomicDisadvantageIds() {
        return economicDisadvantageIds == null ? newHashSet() : newHashSet(economicDisadvantageIds);
    }

    public boolean contains(final DimensionType dimension) {
        for (final DimensionType existing : getDimensionTypes()) {
            if (existing.equals(dimension)) return true;
        }
        return false;
    }

    public ReportQuery.Builder copy() {
        return builder().copy(this);
    }

    public static void checkIsValid(@NotNull final ReportQuery query) {
        checkArgument(!query.getSubjectIds().isEmpty(), "report query is missing subjects");
        checkArgument(!query.getAssessmentGradeIds().isEmpty(), "report query is missing asmt grades");
        checkArgument(!query.getSchoolYears().isEmpty(), "report query is missing school years");
        checkArgument(!query.getDimensionTypes().isEmpty(), "report query is missing dimensionTypes");
        checkArgument(!(!query.isIncludeState() && !query.isIncludeAllDistricts() && query.getDistrictIds().isEmpty() && query.getSchoolIds().isEmpty()), "report query is missing organization");
    }

    public static ReportQuery.Builder builder() {
        return new ReportQuery.Builder();
    }

    public static class Builder {
        private int assessmentTypeId;
        private Set<Integer> subjectIds;
        private Set<Integer> schoolYears;
        private Set<Integer> assessmentGradeIds;
        private boolean includeState = false;
        private boolean includeAllDistricts = false;
        private boolean includeAllSchoolsOfDistricts = false;
        private boolean includeAllDistrictsOfSchools = false;
        private Set<Long> districtIds;
        private Set<Long> schoolIds;
        private Set<DimensionType> dimensionTypes;
        private String valueDisplayType;
        private String achievementLevelDisplayType;
        private Set<Integer> completenessIds;
        private Set<Integer> administrativeConditionIds;
        private Set<Integer> genderIds;
        private Set<Integer> ethnicityIds;
        private Set<Integer> lepIds;
        private Set<Integer> migrantStatusIds;
        private Set<Integer> section504Ids;
        private Set<Integer> iepIds;
        private Set<Integer> economicDisadvantageIds;

        public ReportQuery build() {
            ReportQuery query = new ReportQuery();
            query.assessmentTypeId = assessmentTypeId;
            query.subjectIds = subjectIds;
            query.schoolYears = schoolYears;
            query.assessmentGradeIds = assessmentGradeIds;
            query.includeState = includeState;
            query.includeAllDistricts = includeAllDistricts;
            query.includeAllSchoolsOfDistricts = includeAllSchoolsOfDistricts;
            query.includeAllDistrictsOfSchools = includeAllDistrictsOfSchools;
            query.schoolIds = schoolIds;
            query.districtIds = districtIds;
            query.dimensionTypes = dimensionTypes;
            query.valueDisplayType = valueDisplayType;
            query.achievementLevelDisplayType = achievementLevelDisplayType;
            query.completenessIds = completenessIds;
            query.administrativeConditionIds = administrativeConditionIds;
            query.genderIds = genderIds;
            query.ethnicityIds = ethnicityIds;
            query.lepIds = lepIds;
            query.migrantStatusIds = migrantStatusIds;
            query.section504Ids = section504Ids;
            query.iepIds = iepIds;
            query.economicDisadvantageIds = economicDisadvantageIds;
            return query;
        }

        public Builder copy(final ReportQuery query) {
            assessmentTypeId = query.getAssessmentTypeId();
            subjectIds = query.getSubjectIds();
            schoolYears = query.getSchoolYears();
            assessmentGradeIds = query.getAssessmentGradeIds();
            includeState = query.isIncludeState();
            includeAllDistricts = query.isIncludeAllDistricts();
            includeAllSchoolsOfDistricts = query.isIncludeAllSchoolsOfDistricts();
            includeAllDistrictsOfSchools = query.isIncludeAllDistrictsOfSchools();
            schoolIds = query.getSchoolIds();
            districtIds = query.getDistrictIds();
            dimensionTypes = query.getDimensionTypes();
            valueDisplayType = query.getValueDisplayType();
            achievementLevelDisplayType = query.getAchievementLevelDisplayType();
            completenessIds = query.getCompletenessIds();
            administrativeConditionIds = query.getAdministrativeConditionIds();
            genderIds = query.getGenderIds();
            ethnicityIds = query.getEthnicityIds();
            lepIds = query.getLepIds();
            migrantStatusIds = query.getMigrantStatusIds();
            section504Ids = query.getSection504Ids();
            iepIds = query.getIepIds();
            economicDisadvantageIds = query.getEconomicDisadvantageIds();
            return this;
        }

        public Builder assessmentTypeId(final int assessmentTypeId) {
            this.assessmentTypeId = assessmentTypeId;
            return this;
        }

        public Builder subjectIds(final Set<Integer> subjectIds) {
            this.subjectIds = subjectIds;
            return this;
        }

        public Builder schoolYears(final Set<Integer> schoolYears) {
            this.schoolYears = schoolYears;
            return this;
        }

        public Builder assessmentGradeIds(final Set<Integer> assessmentGradeIds) {
            this.assessmentGradeIds = assessmentGradeIds;
            return this;
        }

        public Builder includeState(final boolean includeState) {
            this.includeState = includeState;
            return this;
        }

        public Builder includeAllDistricts(final boolean includeAllDistricts) {
            this.includeAllDistricts = includeAllDistricts;
            return this;
        }


        public Builder includeAllSchoolsOfDistricts(final boolean includeAllSchoolsOfDistricts) {
            this.includeAllSchoolsOfDistricts = includeAllSchoolsOfDistricts;
            return this;
        }

        public Builder includeAllDistrictsOfSchools(final boolean includeAllDistrictsOfSchools) {
            this.includeAllDistrictsOfSchools = includeAllDistrictsOfSchools;
            return this;
        }

        public Builder schoolIds(final Set<Long> schoolIds) {
            this.schoolIds = schoolIds;
            return this;
        }

        public Builder districtIds(final Set<Long> districtIds) {
            this.districtIds = districtIds;
            return this;
        }

        public Builder dimensionTypes(final Set<DimensionType> dimensionTypes) {
            this.dimensionTypes = dimensionTypes;
            return this;
        }

        public Builder dimensionType(final DimensionType dimensionType) {
            if (dimensionTypes == null) dimensionTypes = newHashSet();
            dimensionTypes.add(dimensionType);
            return this;
        }

        public Builder completenessIds(final Set<Integer> completenessIds) {
            this.completenessIds = completenessIds;
            return this;
        }

        public Builder administrativeConditionIds(final Set<Integer> administrativeConditionIds) {
            this.administrativeConditionIds = administrativeConditionIds;
            return this;
        }

        public Builder genderIds(final Set<Integer> genderIds) {
            this.genderIds = genderIds;
            return this;
        }

        public Builder ethnicityIds(final Set<Integer> ethnicityIds) {
            this.ethnicityIds = ethnicityIds;
            return this;
        }

        public Builder lepIds(final Set<Integer> lepIds) {
            this.lepIds = lepIds;
            return this;
        }

        public Builder migrantStatusIds(final Set<Integer> migrantStatusIds) {
            this.migrantStatusIds = migrantStatusIds;
            return this;
        }

        public Builder section504Ids(final Set<Integer> section504Ids) {
            this.section504Ids = section504Ids;
            return this;
        }

        public Builder iepIds(final Set<Integer> iepIds) {
            this.iepIds = iepIds;
            return this;
        }

        public Builder economicDisadvantageIds(final Set<Integer> economicDisadvantageIds) {
            this.economicDisadvantageIds = economicDisadvantageIds;
            return this;
        }
    }
}