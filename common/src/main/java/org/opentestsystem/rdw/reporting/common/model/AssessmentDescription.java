package org.opentestsystem.rdw.reporting.common.model;

import java.util.Objects;

/**
 * Represents an assessment's data with an associated exam year in which it
 * was administered.
 */
public class AssessmentDescription {
    private String gradeCode;
    private String subjectCode;
    private int examSchoolYear;

    /**
     * if there are exams for this assessment, then it is a year in which it was administered;
     * otherwise it is a year it is designed for
     */
    public int getExamSchoolYear() {
        return examSchoolYear;
    }

    public String getGradeCode() {
        return gradeCode;
    }

    public String getSubjectCode() {
        return subjectCode;
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        final AssessmentDescription that = (AssessmentDescription) o;
        return examSchoolYear == that.examSchoolYear &&
                Objects.equals(gradeCode, that.gradeCode) &&
                Objects.equals(subjectCode, that.subjectCode);
    }

    @Override
    public int hashCode() {
        return Objects.hash(gradeCode, subjectCode, examSchoolYear);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder<B extends Builder, A extends AssessmentDescription> {
        private String gradeCode;
        private String subjectCode;
        private int examSchoolYear;

        protected A createInstance() {
            return (A) new AssessmentDescription();
        }

        public A build() {
            final AssessmentDescription assessment = createInstance();
            assessment.gradeCode = gradeCode;
            assessment.subjectCode = subjectCode;
            assessment.examSchoolYear = examSchoolYear;
            return (A) assessment;
        }


        public B examSchoolYear(final int examSchoolYear) {
            this.examSchoolYear = examSchoolYear;
            return (B) this;
        }

        public B gradeCode(final String gradeCode) {
            this.gradeCode = gradeCode;
            return (B) this;
        }

        public B subjectCode(final String subjectCode) {
            this.subjectCode = subjectCode;
            return (B) this;
        }
    }
}