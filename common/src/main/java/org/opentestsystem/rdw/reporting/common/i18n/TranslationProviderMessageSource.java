package org.opentestsystem.rdw.reporting.common.i18n;

import org.springframework.context.support.AbstractMessageSource;

import java.text.MessageFormat;
import java.util.Locale;
import java.util.Map;

/**
 * This implementation of a message source provides from a TranslationProvider
 * for the given locale, using English as the fallback message locale.
 */
public class TranslationProviderMessageSource extends AbstractMessageSource {
    static final Locale DefaultLocale = Locale.US;

    private TranslationProvider provider;

    public TranslationProviderMessageSource(final TranslationProvider provider) {
        this.provider = provider;
    }

    @Override
    protected MessageFormat resolveCode(final String code, final Locale locale) {
        final Map<String, String> messages = provider.getTranslationsByCode(locale);
        if (messages.containsKey(code)) {
            return createMessageFormat(messages.get(code), locale);
        }

        //Fall back to the default locale
        return DefaultLocale.getLanguage().equalsIgnoreCase(locale.getLanguage())
                ? null
                : resolveCode(code, DefaultLocale);
    }
}
