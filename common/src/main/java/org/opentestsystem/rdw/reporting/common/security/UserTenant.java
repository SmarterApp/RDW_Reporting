package org.opentestsystem.rdw.reporting.common.security;

/**
 * Represents some tenant metadata of interest for security operations
 */
public class UserTenant {

    private String id;
    private String name;
    private boolean sandbox = true;
    private String logoutUrl;
    private String logoutSuccessUrl;
    private String sessionRefreshUrl;

    public String getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public boolean isSandbox() {
        return sandbox;
    }

    public String getLogoutUrl() {
        return logoutUrl;
    }

    public String getLogoutSuccessUrl() {
        return logoutSuccessUrl;
    }

    public String getSessionRefreshUrl() {
        return sessionRefreshUrl;
    }

    public Builder copy() {
        return builder().copy(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder {
        private String id;
        private String name;
        private boolean sandbox = true;
        private String logoutUrl;
        private String logoutSuccessUrl;
        private String sessionRefreshUrl;

        public Builder id(final String id) {
            this.id = id;
            return this;
        }

        public Builder name(final String name) {
            this.name = name;
            return this;
        }

        public Builder sandbox(final boolean sandbox) {
            this.sandbox = sandbox;
            return this;
        }

        public Builder logoutUrl(String logoutUrl) {
            this.logoutUrl = logoutUrl;
            return this;
        }

        public Builder logoutSuccessUrl(final String logoutSuccessUrl) {
            this.logoutSuccessUrl = logoutSuccessUrl;
            return this;
        }

        public Builder sessionRefreshUrl(final String sessionRefreshUrl) {
            this.sessionRefreshUrl = sessionRefreshUrl;
            return this;
        }

        public Builder copy(final UserTenant userTenant) {
            return id(userTenant.getId())
                    .name(userTenant.getName())
                    .sandbox(userTenant.isSandbox())
                    .logoutUrl(userTenant.getLogoutUrl())
                    .logoutSuccessUrl(userTenant.getLogoutSuccessUrl())
                    .sessionRefreshUrl(userTenant.getSessionRefreshUrl());
        }

        public UserTenant build() {
            final UserTenant userTenant = new UserTenant();
            userTenant.id = id;
            userTenant.name = name;
            userTenant.sandbox = sandbox;
            userTenant.logoutUrl = logoutUrl;
            userTenant.logoutSuccessUrl = logoutSuccessUrl;
            userTenant.sessionRefreshUrl = sessionRefreshUrl;
            return userTenant;
        }

    }

}
