package org.opentestsystem.rdw.reporting.common.model.jackson;

import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.deser.std.StdDeserializer;
import org.opentestsystem.rdw.reporting.common.model.AggregateQuery;
import org.opentestsystem.rdw.reporting.common.model.AggregateReportType;

import java.io.IOException;

/**
 * This de-serializer uses a key value to deserialize AggregateQuery interface implementations.
 */
class AggregateQueryDeserializer extends StdDeserializer<AggregateQuery> {

    public AggregateQueryDeserializer() {
        super(AggregateQuery.class);
    }

    @Override
    public AggregateQuery deserialize(final JsonParser parser, final DeserializationContext ctxt) throws IOException, JsonProcessingException {
        final ObjectMapper mapper = (ObjectMapper) parser.getCodec();
        final JsonNode jsonNode = mapper.readTree(parser);
        final JsonNode reportTypeNode = jsonNode.get("reportType");
        final AggregateReportType reportType = AggregateReportType.valueOf(reportTypeNode.asText());
        return mapper.readValue(jsonNode.toString(), reportType.getQueryClass());
    }
}
