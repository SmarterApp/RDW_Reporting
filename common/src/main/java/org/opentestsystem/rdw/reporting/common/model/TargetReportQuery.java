package org.opentestsystem.rdw.reporting.common.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.google.common.collect.ImmutableSet;

import java.util.Set;

/**
 * This class represents a query for the aggregate report with {@link TargetRow}s
 */
@SuppressWarnings("unchecked")
public class TargetReportQuery extends AbstractAggregateReportQuery {
    private int schoolYear;
    private String subjectCode;

    @Override
    public boolean isFilteredSubgroupQuery() {
        return false;
    }

    @Override
    public ReportQueryType getType() {
        return ReportQueryType.Target;
    }

    @Override
    public AggregateReportType getReportType() {
        return AggregateReportType.Target;
    }

    @Override
    @JsonIgnore
    public Set<Integer> getSchoolYears() {
        return ImmutableSet.of(schoolYear);
    }

    @Override
    @JsonIgnore
    public Set<String> getSubjectCodes() {
        return ImmutableSet.of(subjectCode);
    }

    public int getSchoolYear() {
        return schoolYear;
    }

    public String getSubjectCode() {
        return subjectCode;
    }

    public Builder copy() {
        return new Builder().copy(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder extends AbstractAggregateReportQuery.Builder<TargetReportQuery, Builder> {
        private int schoolYear;
        private String subjectCode;

        @Override
        public TargetReportQuery build() {
            final TargetReportQuery value = super.build(new TargetReportQuery());
            value.schoolYear = schoolYear;
            value.subjectCode = subjectCode;
            return value;
        }

        @Override
        public Builder copy(final TargetReportQuery value) {
            super.copy(value);
            this.schoolYear = value.schoolYear;
            this.subjectCode = value.subjectCode;
            return this;
        }

        public Builder schoolYear(final int schoolYear) {
            this.schoolYear = schoolYear;
            return this;
        }

        public Builder subjectCode(final String subjectCode) {
            this.subjectCode = subjectCode;
            return this;
        }
    }
}