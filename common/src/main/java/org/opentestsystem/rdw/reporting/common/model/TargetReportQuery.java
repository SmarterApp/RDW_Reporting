package org.opentestsystem.rdw.reporting.common.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.google.common.collect.ImmutableSet;

import java.util.Set;

/**
 * This class represents a query for the aggregate report with {@link TargetRow}s
 */
public class TargetReportQuery extends AbstractAggregateReportQuery {
    private String subjectCode;

    @Override
    public ReportQueryType getType() {
        return ReportQueryType.Target;
    }

    @Override
    @JsonIgnore
    public Set<String> getSubjectCodes() {
        return ImmutableSet.of(subjectCode);
    }

    @JsonIgnore
    public int getSchoolYear() {
        return super.getSchoolYears().iterator().next();
    }

    public String getSubjectCode() {
        return subjectCode;
    }

    /**
     * @return a builder with this report's values
     */
    public Builder copy() {
        return builder().copy(this);
    }

    /**
     * @return a builder for this report query
     */
    public static Builder builder() {
        return new Builder();
    }


    public static class Builder extends AbstractAggregateReportQuery.Builder<TargetReportQuery, Builder> {
        private String subjectCode;

        @Override
        public TargetReportQuery build() {
            final TargetReportQuery reportQuery = new TargetReportQuery();
            super.build(reportQuery);
            reportQuery.subjectCode = subjectCode;
            return reportQuery;
        }

        public Builder copy(final TargetReportQuery reportQuery) {
            super.copy(reportQuery);
            this.subjectCode = reportQuery.subjectCode;
            return this;
        }

        // backward compatible method to avoid code changes
        public Builder schoolYear(final int schoolYear) {
            super.schoolYears(ImmutableSet.of(schoolYear));
            return this;
        }

        public Builder subjectCode(final String subjectCode) {
            this.subjectCode = subjectCode;
            return this;
        }
    }
}

