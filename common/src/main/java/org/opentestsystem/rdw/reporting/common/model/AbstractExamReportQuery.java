package org.opentestsystem.rdw.reporting.common.model;

/**
 * Base class for all exam reports
 * Declares all additional properties associated with exam reports
 */
public abstract class AbstractExamReportQuery extends AbstractReportQuery {

    protected int schoolYear;
    protected boolean disableTransferAccess;

    public int getSchoolYear() {
        return schoolYear;
    }

    public boolean isDisableTransferAccess() {
        return disableTransferAccess;
    }

    @SuppressWarnings({"unchecked"})
    public static abstract class Builder<A extends AbstractExamReportQuery, B extends Builder<A, B>> extends AbstractReportQuery.Builder<A, B> {

        private int schoolYear;
        private boolean disableTransferAccess;

        public B schoolYear(final int schoolYear) {
            this.schoolYear = schoolYear;
            return (B) this;
        }

        public B disableTransferAccess(final boolean disableTransferAccess) {
            this.disableTransferAccess = disableTransferAccess;
            return (B) this;
        }

        protected B copy(final B builder, final A value) {
            return super.copy(value)
                    .schoolYear(value.schoolYear)
                    .disableTransferAccess(value.disableTransferAccess);
        }

        protected A build(final A value) {
            super.build(value);
            value.schoolYear = schoolYear;
            value.disableTransferAccess = disableTransferAccess;
            return value;
        }

    }
}
