package org.opentestsystem.rdw.reporting.common.repository;


import org.opentestsystem.rdw.multitenant.TenantIdResolver;
import org.opentestsystem.rdw.multitenant.datasource.DataSourceElements;
import org.opentestsystem.rdw.multitenant.datasource.DataSourceElementsProperties;
import org.opentestsystem.rdw.multitenant.datasource.DataSourceElementsResolver;
import org.opentestsystem.rdw.multitenant.datasource.TenantDynamicRoutingDataSource;
import org.opentestsystem.rdw.reporting.common.multitenant.ReportingTenantIdResolver;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.cloud.context.config.annotation.RefreshScope;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;

import javax.sql.DataSource;

/**
 * Configuration for the common data mart data source.
 */
@Configuration
public class DataSourceConfiguration {

    /**
     * DataSourceElementsProperties config properties
     *
     * @return DataSourceElements
     */
    @Primary
    @Bean(name = "dataSourceElementsProperties")
    @ConfigurationProperties("spring.datasource")
    @RefreshScope
    public DataSourceElementsProperties dataSourceElementsProperties() {
        return new DataSourceElementsProperties();
    }

    /**
     * DataSourceElementsResolver
     *
     * @param tenantIdResolver id resolver
     * @param dataSourceElementsProperties config properties
     * @return DataSourceElementsResolver
     */
    @Bean(name = "dataSourceElementsResolver")
    @RefreshScope
    public DataSourceElementsResolver dataSourceElementsResolver(TenantIdResolver tenantIdResolver,
                                                                 @Qualifier("dataSourceElementsProperties") DataSourceElementsProperties dataSourceElementsProperties) {
        return new DataSourceElementsResolver(tenantIdResolver, dataSourceElementsProperties);
    }

    @Bean(name = "reportingTenantIdResolver")
    public ReportingTenantIdResolver reportingTenantIdResolver() {
        return new ReportingTenantIdResolver();
    }

    /**
     * data mart DataSource
     *
     * @param dataSourceElementsResolver reporting dataSourceElementsResolver
     * @param reportingTenantIdResolver  reporting tenant id resolver
     * @return DataSource
     */
    @Primary
    @Bean(name = "dataSource")
    @RefreshScope
    public DataSource dataSource(@Qualifier("dataSourceElementsResolver") DataSourceElements dataSourceElementsResolver,
                                 ReportingTenantIdResolver reportingTenantIdResolver) {
        return new TenantDynamicRoutingDataSource(dataSourceElementsResolver, reportingTenantIdResolver);
    }

    /**
     * @param dataSource the data mart data source
     * @return the jdbc template used to read from the data mart
     */
    @Primary
    @Bean
    public NamedParameterJdbcTemplate namedParameterJdbcTemplate(final DataSource dataSource) {
        return new NamedParameterJdbcTemplate(dataSource);
    }
}