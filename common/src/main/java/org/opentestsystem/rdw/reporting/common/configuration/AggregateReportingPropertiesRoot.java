package org.opentestsystem.rdw.reporting.common.configuration;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.google.common.base.Objects;
import org.opentestsystem.rdw.multitenant.TenantConfigurationStatus;
import org.opentestsystem.rdw.multitenant.TenantConfigurationStatusProvider;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.HashMap;

public class AggregateReportingPropertiesRoot extends AggregateReportingPropertiesTenant implements TenantConfigurationStatusProvider {

    private static final Logger logger = LoggerFactory.getLogger(AggregateReportingPropertiesRoot.class);

    @JsonIgnore
    private final LocalDateTime created = LocalDateTime.now();

    private HashMap<String, AggregateReportingPropertiesTenant> tenants = new HashMap<>();

    public HashMap<String, AggregateReportingPropertiesTenant> getTenants() {
        return tenants;
    }

    public AggregateReportingPropertiesRoot() {
        logger.debug("created: {} tenants: {} ", created, tenants);
    }

    public void setTenants(HashMap<String, AggregateReportingPropertiesTenant> tenants) {
        this.tenants = tenants;
    }

    @JsonIgnore
    @Override
    public TenantConfigurationStatus getStatus() {
        return TenantConfigurationStatus.builder()
                .created(created)
                .tenantKeys(new ArrayList<>(tenants.keySet()))
                .build();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof AggregateReportingPropertiesRoot)) return false;
        if (!super.equals(o)) return false;
        AggregateReportingPropertiesRoot that = (AggregateReportingPropertiesRoot) o;
        return Objects.equal(tenants, that.tenants);
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(super.hashCode(), tenants);
    }
}
