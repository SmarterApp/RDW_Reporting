package org.opentestsystem.rdw.reporting.common.multitenant;

import org.opentestsystem.rdw.multitenant.messaging.TenantMessageRequestResolver;
import org.opentestsystem.rdw.reporting.common.security.User;
import org.opentestsystem.rdw.reporting.common.stream.MessageSecurityService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.messaging.Message;

import static org.opentestsystem.rdw.multitenant.TenantIdResolver.NO_TENANT_ID;

public class ReportingTenantMessageRequestResolver implements TenantMessageRequestResolver {

    private final MessageSecurityService messageSecurityService;
    private static final Logger logger = LoggerFactory.getLogger(ReportingTenantMessageRequestResolver.class);

    public ReportingTenantMessageRequestResolver(MessageSecurityService messageSecurityService) {
        this.messageSecurityService = messageSecurityService;
    }

    @Override
    public String resolveTenantId(Message<?> message) {
        String tenantId = NO_TENANT_ID;
        try {
            final User user = messageSecurityService.getUser(message);
            tenantId = user.getTenantId();
            logger.info("Resolving user {} to tenant {} for message.", user.getUsername(), tenantId);
        } catch (Exception e) {
            logger.error("Error resolving user: ", e);
        }
        return tenantId;
    }

}

