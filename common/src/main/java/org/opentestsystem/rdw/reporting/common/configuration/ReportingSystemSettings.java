package org.opentestsystem.rdw.reporting.common.configuration;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.opentestsystem.rdw.reporting.common.model.SearchFieldPermissionLevel;
import org.opentestsystem.rdw.reporting.common.model.StudentFieldType;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ReportingSystemSettings extends AbstractReportingSystemProperties {

    @JsonProperty("analytics-tracking-id")
    private String analyticsTrackingId;
    @JsonProperty("interpretive-guide-url")
    private String interpretiveGuideUrl;
    @JsonProperty("access-denied-url")
    private String accessDeniedUrl;
    private String irisVendorId;
    private Integer minItemDataYear;
    @JsonProperty("percentile-display-enabled")
    private Boolean percentileDisplayEnabled;
    @JsonProperty("report-languages")
    private List<String> reportLanguages = new ArrayList<>();
    @JsonProperty("school-year")
    private Integer schoolYear;
    private StateProperties state = new StateProperties();
    @JsonProperty("transfer-access-enabled")
    private Boolean transferAccessEnabled;
    @JsonProperty("translation-location")
    private String translationLocation;
    @JsonProperty("ui-languages")
    private List<String> uiLanguages = new ArrayList<>();
    @JsonProperty("user-guide-url")
    private String userGuideUrl;
    private TargetReportProperties targetReport = new TargetReportProperties();
    @JsonProperty("student-fields")
    private Map<StudentFieldType, SearchFieldPermissionLevel> studentFields = new HashMap<>();
    private Map<String, ReportingSystemPropertiesImpl> tenants = new HashMap<>();

    public ReportingSystemSettings() {}

    @Override
    public String getAnalyticsTrackingId() {
        return analyticsTrackingId;
    }

    public void setAnalyticsTrackingId(final String analyticsTrackingId) {
        this.analyticsTrackingId = analyticsTrackingId;
    }

    @Override
    public String getInterpretiveGuideUrl() {
        return interpretiveGuideUrl;
    }

    public void setInterpretiveGuideUrl(final String interpretiveGuideUrl) {
        this.interpretiveGuideUrl = interpretiveGuideUrl;
    }

    @Override
    public String getAccessDeniedUrl() {
        return accessDeniedUrl;
    }

    public void setAccessDeniedUrl(final String accessDeniedUrl) {
        this.accessDeniedUrl = accessDeniedUrl;
    }

    @Override
    public String getIrisVendorId() {
        return this.irisVendorId;
    }

    public void setIrisVendorId(final String irisVendorId) {
        this.irisVendorId = irisVendorId;
    }

    @Override
    public Integer getMinItemDataYear() {
        return minItemDataYear;
    }

    public void setMinItemDataYear(final Integer minItemDataYear) {
        this.minItemDataYear = minItemDataYear;
    }

    @Override
    public Boolean isPercentileDisplayEnabled() {
        return percentileDisplayEnabled;
    }

    public void setPercentileDisplayEnabled(final Boolean percentileDisplayEnabled) {
        this.percentileDisplayEnabled = percentileDisplayEnabled;
    }

    @Override
    public List<String> getReportLanguages() {
        return reportLanguages;
    }

    public void setReportLanguages(final List<String> reportLanguages) {
        this.reportLanguages = reportLanguages;
    }

    @Override
    public Integer getSchoolYear() {
        return schoolYear;
    }

    public void setSchoolYear(final Integer schoolYear) {
        this.schoolYear = schoolYear;
    }

    @Override
    public StateProperties getState() {
        return state;
    }

    public void setState(final StateProperties state) {
        this.state = state;
    }

    @Override
    public Boolean isTransferAccessEnabled() {
        return transferAccessEnabled;
    }

    public void setTransferAccessEnabled(final Boolean transferAccessEnabled) {
        this.transferAccessEnabled = transferAccessEnabled;
    }

    @Override
    public String getTranslationLocation() {
        return translationLocation;
    }

    public void setTranslationLocation(final String translationLocation) {
        this.translationLocation = translationLocation;
    }

    @Override
    public List<String> getUiLanguages() {
        return uiLanguages;
    }

    public void setUiLanguages(final List<String> uiLanguages) {
        this.uiLanguages = uiLanguages;
    }

    @Override
    public String getUserGuideUrl() {
        return userGuideUrl;
    }

    public void setUserGuideUrl(final String userGuideUrl) {
        this.userGuideUrl = userGuideUrl;
    }

    public TargetReportProperties getTargetReport() {
        return targetReport;
    }

    public void setTargetReport(final TargetReportProperties targetReport) {
        this.targetReport = targetReport;
    }

    @Override
    public Map<StudentFieldType, SearchFieldPermissionLevel> getStudentFields() {
        return studentFields;
    }

    public void setStudentFields(final Map<StudentFieldType, SearchFieldPermissionLevel> studentFields) {
        this.studentFields = studentFields;
    }

    public Map<String, ReportingSystemPropertiesImpl> getTenants() {
        return tenants;
    }

    public void setTenants(Map<String, ReportingSystemPropertiesImpl> tenants) {
        this.tenants = tenants;
    }

    @Override
    public String toString() {
        return "ReportingSystemSettings{" +
                "analyticsTrackingId='" + analyticsTrackingId + '\'' +
                ", interpretiveGuideUrl='" + interpretiveGuideUrl + '\'' +
                ", accessDeniedUrl='" + accessDeniedUrl + '\'' +
                ", irisVendorId='" + irisVendorId + '\'' +
                ", minItemDataYear=" + minItemDataYear +
                ", percentileDisplayEnabled=" + percentileDisplayEnabled +
                ", reportLanguages=" + reportLanguages +
                ", schoolYear=" + schoolYear +
                ", state=" + state +
                ", transferAccessEnabled=" + transferAccessEnabled +
                ", translationLocation='" + translationLocation + '\'' +
                ", uiLanguages=" + uiLanguages +
                ", userGuideUrl='" + userGuideUrl + '\'' +
                ", targetReport=" + targetReport +
                ", studentFields=" + studentFields +
                ", tenants=" + tenants.toString() +
                '}';
    }
}
