package org.opentestsystem.rdw.reporting.common.model;

import com.google.common.collect.ImmutableSet;

import java.util.Set;

/**
 * This class represents a filtered subgroup query for the claim aggregate report
 */
public class ClaimAggregateReportQuery extends AbstractAggregateReportQuery {
    private ImmutableSet<Integer> schoolYears;
    private ImmutableSet<String> claimCodes;

    @Override
    public AggregateReportType getReportType() {
        return AggregateReportType.CustomAggregate;
    }

    @Override
    public Builder copy() {
        return new Builder().copy(this);
    }

    @Override
    public Set<Integer> getSchoolYears() {
        return getNullSafe(schoolYears);
    }

    public Set<String> getClaimCodes() {
        return getNullSafe(claimCodes);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder extends AbstractAggregateReportQuery.Builder<Builder, ClaimAggregateReportQuery> {
        private Set<Integer> schoolYears;
        private Set<String> claimCodes;

        @Override
        public ClaimAggregateReportQuery build() {
            final ClaimAggregateReportQuery query = super.build();
            query.schoolYears = asImmutable(schoolYears);
            query.claimCodes = asImmutable(claimCodes);
            return query;
        }

        @Override
        public Builder copy(final ClaimAggregateReportQuery query) {
            super.copy(query);
            this.schoolYears = query.schoolYears;
            this.claimCodes = query.claimCodes;
            return this;
        }

        @Override
        protected ClaimAggregateReportQuery createInstance() {
            return new ClaimAggregateReportQuery();
        }

        public Builder schoolYears(final Set<Integer> schoolYears) {
            this.schoolYears = schoolYears;
            return this;
        }

        public Builder claimCodes(final Set<String> claimCodes) {
            this.claimCodes = claimCodes;
            return this;
        }
    }
}
