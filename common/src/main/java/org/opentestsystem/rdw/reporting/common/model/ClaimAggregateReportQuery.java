package org.opentestsystem.rdw.reporting.common.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.google.common.collect.ImmutableMap;

import java.util.Map;
import java.util.Set;

import static org.opentestsystem.rdw.reporting.common.util.CollectionUtils.safeImmutableOf;

/**
 * This class represents a query for the aggregate report with {@link ClaimRow}s
 *
 * This overrides subjectCodes behavior, deriving them from a subject/claim map.
 */
@JsonIgnoreProperties(value="subjectCodes", allowGetters = true)
public class ClaimAggregateReportQuery extends AbstractAggregateReportQuery {
    private ImmutableMap<String, Set<String>> claimCodesBySubject;

    public ReportQueryType getType() {
        return ReportQueryType.Claim;
    }

    public ImmutableMap<String, Set<String>> getClaimCodesBySubject() {
        return claimCodesBySubject == null ? ImmutableMap.of() : claimCodesBySubject;
    }

    @Override
    public Set<String> getSubjectCodes() {
        return getClaimCodesBySubject().keySet();
    }

    public Builder copy() {
        return builder().copy(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder extends AbstractAggregateReportQuery.Builder<ClaimAggregateReportQuery, Builder> {
        private Map<String, Set<String>> claimCodesBySubject;

        @Override
        public ClaimAggregateReportQuery build() {
            final ClaimAggregateReportQuery reportQuery = new ClaimAggregateReportQuery();
            super.build(reportQuery);
            reportQuery.claimCodesBySubject = safeImmutableOf(claimCodesBySubject);
            return reportQuery;
        }

        public Builder copy(final ClaimAggregateReportQuery value) {
            return super.copy(value)
                    .claimCodesBySubject(value.claimCodesBySubject);
        }

        public Builder claimCodesBySubject(final Map<String, Set<String>> claimCodesBySubject) {
            this.claimCodesBySubject = claimCodesBySubject;
            return this;
        }
    }
}
