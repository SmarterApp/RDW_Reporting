package org.opentestsystem.rdw.reporting.common.report;

import com.fasterxml.jackson.databind.ObjectMapper;
import org.opentestsystem.rdw.reporting.common.report.client.WkhtmltopdfWebServiceClient;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.MediaType;
import org.springframework.http.client.ClientHttpRequestFactory;
import org.springframework.http.client.SimpleClientHttpRequestFactory;
import org.springframework.http.converter.ByteArrayHttpMessageConverter;
import org.springframework.http.converter.HttpMessageConverter;
import org.springframework.web.client.RestTemplate;

import java.util.List;

import static com.google.common.collect.Lists.newArrayList;

@Configuration
@ComponentScan("org.opentestsystem.rdw.reporting.common.report")
public class ReportConfiguration {

    @Bean
    public ClientHttpRequestFactory requestFactory() {
        return new SimpleClientHttpRequestFactory();
    }

    @Bean
    public WkhtmltopdfWebServiceClient wkhtmlToPdfWebServiceClient(
            @Value("${app.wkhtmltopdf.url}") final String url,
            final ClientHttpRequestFactory requestFactory,
            final ObjectMapper objectMapper) {
        return new WkhtmltopdfWebServiceClient(requestFactory, url, objectMapper);
    }

    @Bean
    public RestTemplate pdfAcceptingRestTemplate() {
        final RestTemplate template = new RestTemplate();
        final List<HttpMessageConverter<?>> converters = template.getMessageConverters();
        final ByteArrayHttpMessageConverter pdfByteArrayHttpMessageConverter = new ByteArrayHttpMessageConverter();
        pdfByteArrayHttpMessageConverter.setSupportedMediaTypes(newArrayList(MediaType.APPLICATION_PDF));
        converters.add(pdfByteArrayHttpMessageConverter);
        template.setMessageConverters(converters);
        return template;
    }

}
