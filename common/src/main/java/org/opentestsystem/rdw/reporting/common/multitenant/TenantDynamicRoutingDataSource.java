package org.opentestsystem.rdw.reporting.common.multitenant;

import org.opentestsystem.rdw.multitenant.TenantContextHolder;
import org.opentestsystem.rdw.multitenant.datasource.AbstractTenantDynamicRoutingDataSource;
import org.opentestsystem.rdw.multitenant.datasource.DataSourceElements;
import org.opentestsystem.rdw.multitenant.datasource.TenantDataSourceOverrideResolver;
import org.opentestsystem.rdw.reporting.common.security.Users;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.security.core.context.SecurityContextHolder;

/**
 * RDW_Reporting specific implementation of {@link AbstractTenantDynamicRoutingDataSource}
 */
public class TenantDynamicRoutingDataSource extends AbstractTenantDynamicRoutingDataSource {

    private static final Logger logger = LoggerFactory.getLogger(TenantDynamicRoutingDataSource.class);

    public TenantDynamicRoutingDataSource(DataSourceElements dataSourceElements, TenantDataSourceOverrideResolver tenantDataSourceOverrideResolver) {
        super(dataSourceElements, tenantDataSourceOverrideResolver);
    }

    @Override
    protected String getTenantId() {
        if (SecurityContextHolder.getContext().getAuthentication() != null) {
            return Users.getCurrentUser().getTenantId();
        } else {
            //special case for authentication process.  User has been authenticated, but
            //not stored in security context yet
            return TenantContextHolder.getTenantId();
        }
    }
}
