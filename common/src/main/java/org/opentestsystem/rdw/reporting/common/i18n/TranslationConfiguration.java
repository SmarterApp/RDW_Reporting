package org.opentestsystem.rdw.reporting.common.i18n;

import org.opentestsystem.rdw.reporting.common.configuration.TenantProperties;
import org.opentestsystem.rdw.utils.YamlPropertiesConfigurator;
import org.springframework.cache.annotation.EnableCaching;
import org.springframework.context.MessageSource;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Import;
import org.springframework.context.support.AbstractMessageSource;
import org.springframework.context.support.ReloadableResourceBundleMessageSource;
import org.springframework.context.support.ResourceBundleMessageSource;
import org.springframework.core.io.ResourceLoader;

import static org.springframework.util.StringUtils.isEmpty;

@Configuration
@EnableCaching
@Import({
        YamlPropertiesConfigurator.class,
        JdbcTranslationRepository.class,
        DefaultInternalTranslationService.class
})
public class TranslationConfiguration {

    @Bean
    public MessageSource messageSource(final InternalTranslationService translationService,
                                       final ResourceLoader resourceLoader,
                                       final TenantProperties tenantProperties) {

        final ResourceBundleMessageSource baseMessages = new ResourceBundleMessageSource();
        baseMessages.setBasenames("messages");
        baseMessages.setDefaultEncoding("UTF-8");

        final AbstractMessageSource databaseMessages = new TranslationServiceMessageSource(translationService);
        databaseMessages.setParentMessageSource(baseMessages);

        if (isEmpty(tenantProperties.getTranslationLocation())) {
            return databaseMessages;
        }

        final ReloadableResourceBundleMessageSource configMessages = new ReloadableResourceBundleMessageSource();
        configMessages.setResourceLoader(resourceLoader);
        configMessages.setBasename(tenantProperties.getTranslationLocation() + "messages");
        configMessages.setParentMessageSource(databaseMessages);
        return configMessages;
    }

}
