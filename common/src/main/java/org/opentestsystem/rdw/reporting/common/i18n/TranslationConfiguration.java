package org.opentestsystem.rdw.reporting.common.i18n;

import org.opentestsystem.rdw.reporting.common.configuration.ReportingSystemSettings;
import org.springframework.context.MessageSource;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Import;
import org.springframework.core.io.ResourceLoader;

import java.util.List;

import static com.google.common.collect.Lists.newArrayList;
import static org.apache.commons.lang.StringUtils.isNotBlank;

/**
 * This configuration registers:
 * 1. a {@link TranslationProvider} for providing translation key-value pairs for a given Locale
 * 2. a {@link MessageSource} backed by the translation provider
 */
@Configuration
@Import({
        JdbcTranslationRepository.class
})
public class TranslationConfiguration {

    @Bean
    public TranslationProvider translationProvider(final ResourceLoader resourceLoader,
                                                   final TranslationRepository translationRepository,
                                                   final ReportingSystemSettings settings) {
        final List<TranslationProvider> providers = newArrayList();
        //Add embedded translations
        providers.add(new JsonBackedTranslationProvider("classpath:/i18n/", resourceLoader));
        //Add repository translations
        providers.add(new RepositoryBackedTranslationProvider(translationRepository));

        if (isNotBlank(settings.getTranslationLocation())) {
            //Add external translations
            providers.add(new JsonBackedTranslationProvider(settings.getTranslationLocation(), resourceLoader));
        }

        return new DelegatingTranslationProvider(providers);
    }

    @Bean
    public MessageSource messageSource(final TranslationProvider translationProvider) {
        return new TranslationProviderMessageSource(translationProvider);
    }
}
