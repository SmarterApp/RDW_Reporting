package org.opentestsystem.rdw.reporting.common.model;

import com.google.common.collect.ImmutableSet;

import java.util.Set;

/**
 * This class represents student exam result filters for aggregate reports.
 */
public class StudentFilters {

    private ImmutableSet<String> genderCodes;
    private ImmutableSet<String> ethnicityCodes;
    private ImmutableSet<String> lepCodes;
    private ImmutableSet<String> elasCodes;
    private ImmutableSet<String> migrantStatusCodes;
    private ImmutableSet<String> section504Codes;
    private ImmutableSet<String> iepCodes;
    private ImmutableSet<String> economicDisadvantageCodes;

    public Set<String> getGenderCodes() {
        return getNullSafe(genderCodes);
    }

    public Set<String> getEthnicityCodes() {
        return getNullSafe(ethnicityCodes);
    }

    public Set<String> getLepCodes() {
        return getNullSafe(lepCodes);
    }

    public Set<String> getElasCodes() {
        return getNullSafe(elasCodes);
    }

    public Set<String> getMigrantStatusCodes() {
        return getNullSafe(migrantStatusCodes);
    }

    public Set<String> getSection504Codes() {
        return getNullSafe(section504Codes);
    }

    public Set<String> getIepCodes() {
        return getNullSafe(iepCodes);
    }

    public Set<String> getEconomicDisadvantageCodes() {
        return getNullSafe(economicDisadvantageCodes);
    }

    private Set<String> getNullSafe(final Set<String> values) {
        return values == null ? ImmutableSet.of() : values;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder {
        private Set<String> genderCodes;
        private Set<String> ethnicityCodes;
        private Set<String> lepCodes;
        private Set<String> elasCodes;
        private Set<String> migrantStatusCodes;
        private Set<String> section504Codes;
        private Set<String> iepCodes;
        private Set<String> economicDisadvantageCodes;

        public StudentFilters build() {
            final StudentFilters filters = new StudentFilters();
            filters.genderCodes = asImmutable(genderCodes);
            filters.ethnicityCodes = asImmutable(ethnicityCodes);
            filters.lepCodes = asImmutable(lepCodes);
            filters.elasCodes = asImmutable(elasCodes);
            filters.migrantStatusCodes = asImmutable(migrantStatusCodes);
            filters.section504Codes = asImmutable(section504Codes);
            filters.iepCodes = asImmutable(iepCodes);
            filters.economicDisadvantageCodes = asImmutable(economicDisadvantageCodes);
            return filters;
        }

        public Builder copy(final StudentFilters filters) {
            this.genderCodes = filters.genderCodes;
            this.ethnicityCodes = filters.ethnicityCodes;
            this.lepCodes = filters.lepCodes;
            this.elasCodes = filters.elasCodes;
            this.migrantStatusCodes = filters.migrantStatusCodes;
            this.section504Codes = filters.section504Codes;
            this.iepCodes = filters.iepCodes;
            this.economicDisadvantageCodes = filters.economicDisadvantageCodes;
            return this;
        }

        public Builder genderCodes(final Set<String> genderCodes) {
            this.genderCodes = genderCodes;
            return this;
        }

        public Builder ethnicityCodes(final Set<String> ethnicityCodes) {
            this.ethnicityCodes = ethnicityCodes;
            return this;
        }

        public Builder lepCodes(final Set<String> lepCodes) {
            this.lepCodes = lepCodes;
            return this;
        }

        public Builder elasCodes(final Set<String> elasCodes) {
            this.elasCodes = elasCodes;
            return this;
        }

        public Builder migrantStatusCodes(final Set<String> migrantStatusCodes) {
            this.migrantStatusCodes = migrantStatusCodes;
            return this;
        }

        public Builder section504Codes(final Set<String> section504Codes) {
            this.section504Codes = section504Codes;
            return this;
        }

        public Builder iepCodes(final Set<String> iepCodes) {
            this.iepCodes = iepCodes;
            return this;
        }

        public Builder economicDisadvantageCodes(final Set<String> economicDisadvantageCodes) {
            this.economicDisadvantageCodes = economicDisadvantageCodes;
            return this;
        }

        private <T> ImmutableSet<T> asImmutable(final Set<T> values) {
            return values == null ? null : ImmutableSet.copyOf(values);
        }
    }
}
