package org.opentestsystem.rdw.reporting.common.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.google.common.collect.ImmutableMap;

import java.util.Map;
import java.util.Set;

import static org.opentestsystem.rdw.reporting.common.util.CollectionUtils.safeImmutableOf;

/**
 * This class represents a query for the aggregate report with {@link AltScoreRow}s
 *
 * This overrides subjectCodes behavior, deriving them from a subject/alt-score map.
 */
@JsonIgnoreProperties(value="subjectCodes", allowGetters = true)
public class AltScoreAggregateReportQuery extends AbstractAggregateReportQuery {
    private ImmutableMap<String, Set<String>> altScoreCodesBySubject;

    public ReportQueryType getType() {
        return ReportQueryType.AltScore;
    }

    public ImmutableMap<String, Set<String>> getAltScoreCodesBySubject() {
        return altScoreCodesBySubject == null ? ImmutableMap.of() : altScoreCodesBySubject;
    }

    @Override
    public Set<String> getSubjectCodes() {
        return getAltScoreCodesBySubject().keySet();
    }

    public Builder copy() {
        return builder().copy(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder extends AbstractAggregateReportQuery.Builder<AltScoreAggregateReportQuery, Builder> {
        private Map<String, Set<String>> altScoreCodesBySubject;

        @Override
        public AltScoreAggregateReportQuery build() {
            final AltScoreAggregateReportQuery reportQuery = new AltScoreAggregateReportQuery();
            super.build(reportQuery);
            reportQuery.altScoreCodesBySubject = safeImmutableOf(altScoreCodesBySubject);
            return reportQuery;
        }

        public Builder copy(final AltScoreAggregateReportQuery value) {
            return super.copy(value)
                    .altScoreCodesBySubject(value.altScoreCodesBySubject);
        }

        public Builder altScoreCodesBySubject(final Map<String, Set<String>> altScoreCodesBySubject) {
            this.altScoreCodesBySubject = altScoreCodesBySubject;
            return this;
        }
    }
}
