package org.opentestsystem.rdw.reporting.common.model;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Objects;

/**
 * Represents an assessment's data with an associated exam year in which it was administered.
 */
public class ActiveAssessment extends AssessmentDescription {
    private int id;
    private String label;

    public int getId() {
        return id;
    }

    public String getLabel() {
        return label;
    }

    public static ActiveAssessment map(final ResultSet row) throws SQLException {
        return ActiveAssessment.builder()
                .id(row.getInt("asmt_id"))
                .gradeCode(row.getString("asmt_grade_code"))
                .subjectCode(row.getString("subject_code"))
                .label(row.getString("asmt_label"))
                .examSchoolYear(row.getInt("school_year"))
                .build();
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        final ActiveAssessment that = (ActiveAssessment) o;
        return super.equals(that) &&
                id == that.id &&
                Objects.equals(label, that.label);
    }

    @Override
    public int hashCode() {
        return Objects.hash(super.hashCode(), id, label);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder extends AssessmentDescription.Builder<Builder, ActiveAssessment> {
        private int id;
        private String label;

        @Override
        protected ActiveAssessment createInstance() {
            return new ActiveAssessment();
        }

        public ActiveAssessment build() {
            final ActiveAssessment assessment = super.build();
            assessment.id = id;
            assessment.label = label;
            return assessment;
        }

        public Builder id(final int id) {
            this.id = id;
            return this;
        }

        public Builder label(final String label) {
            this.label = label;
            return this;
        }
    }
}