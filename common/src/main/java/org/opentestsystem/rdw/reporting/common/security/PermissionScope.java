package org.opentestsystem.rdw.reporting.common.security;

import com.google.common.collect.ImmutableSet;

import java.io.Serializable;
import java.util.Collection;
import java.util.Set;

/**
 * Used to limit database query results
 */
public class PermissionScope implements Serializable {

    /**
     * Statewide permission scope flyweight
     * Since all statewide permission scopes will be identical, we can use the same immutable object instance
     */
    public static final PermissionScope STATEWIDE = new PermissionScope();

    /**
     * Empty permission scope flyweight
     */
    public static final PermissionScope EMPTY = new PermissionScope(false);

    /**
     * Holds district entity IDs to which the permission is granted
     */
    private Set<Long> districtIds = ImmutableSet.of();

    /**
     * Holds institution entity IDs to which the permission is granted
     */
    private Set<Long> institutionIds = ImmutableSet.of();

    /**
     * true if the permission scope is statewide
     */
    private boolean statewide;

    private PermissionScope() {
        this.statewide = true;
    }

    private PermissionScope(final boolean statewide) {
        this.statewide = statewide;
    }

    public PermissionScope(
            final Collection<Long> districtIds,
            final Collection<Long> institutionIds) {
        this.districtIds = districtIds != null ? ImmutableSet.copyOf(districtIds) : ImmutableSet.of();
        this.institutionIds = institutionIds != null ? ImmutableSet.copyOf(institutionIds) : ImmutableSet.of();
        this.statewide = this.districtIds.isEmpty() && this.institutionIds.isEmpty();
    }

    public boolean isStatewide() {
        return this.statewide;
    }

    public Set<Long> getDistrictIds() {
        return districtIds;
    }

    public Set<Long> getInstitutionIds() {
        return institutionIds;
    }

}

