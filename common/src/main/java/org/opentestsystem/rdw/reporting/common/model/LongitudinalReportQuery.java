package org.opentestsystem.rdw.reporting.common.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.google.common.collect.ImmutableSet;

import java.util.Set;

import static org.opentestsystem.rdw.reporting.common.util.CollectionUtils.safeImmutableOf;

/**
 * This class represents a query for the aggregate report with {@link LongitudinalRow}s
 */
@SuppressWarnings("unchecked")
public class LongitudinalReportQuery extends AbstractAggregateReportQuery {
    private int toSchoolYear;
    private ImmutableSet<String> subjectCodes;

    @Override
    public AggregateReportType getReportType() {
        return AggregateReportType.Longitudinal;
    }

    @Override
    @JsonIgnore
    public Set<Integer> getSchoolYears() {
        return ImmutableSet.of(toSchoolYear);
    }

    public int getToSchoolYear() {
        return toSchoolYear;
    }

    public Set<String> getSubjectCodes() {
        return safeImmutableOf(subjectCodes);
    }

    public Builder copy() {
        return new Builder().copy(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder extends AbstractAggregateReportQuery.Builder<Builder, LongitudinalReportQuery> {
        private int toSchoolYear;
        private Set<String> subjectCodes;

        @Override
        public LongitudinalReportQuery build() {
            final LongitudinalReportQuery query = super.build();
            query.toSchoolYear = toSchoolYear;
            query.subjectCodes = safeImmutableOf(subjectCodes);
            return query;
        }

        @Override
        public Builder copy(final LongitudinalReportQuery query) {
            super.copy(query);
            this.toSchoolYear = query.toSchoolYear;
            this.subjectCodes = query.subjectCodes;
            return this;
        }

        @Override
        protected LongitudinalReportQuery createInstance() {
            return new LongitudinalReportQuery();
        }

        public Builder toSchoolYear(final int toSchoolYear) {
            this.toSchoolYear = toSchoolYear;
            return this;
        }

        public Builder subjectCodes(final Set<String> subjectCodes) {
            this.subjectCodes = subjectCodes;
            return this;
        }
    }
}
