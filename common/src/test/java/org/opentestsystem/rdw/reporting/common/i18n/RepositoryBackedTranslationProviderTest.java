package org.opentestsystem.rdw.reporting.common.i18n;

import org.junit.Before;
import org.junit.Test;

import java.util.List;
import java.util.Locale;

import static com.google.common.collect.Lists.newArrayList;
import static java.util.stream.Collectors.toMap;
import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;


public class RepositoryBackedTranslationProviderTest {

    private static final String ns1 = "ns1";
    private static final String ns2 = "ns2";
    private static final List<Translation> englishTranslations = newArrayList(
            new Translation("a", "A"),
            new Translation("b", "B")
    );
    private static final List<Translation> japaneseTranslations = newArrayList(
            new Translation("c", "C")
    );

    private RepositoryBackedTranslationProvider service;

    @Before
    public void before() {
        final TranslationRepository repository = mock(TranslationRepository.class);
        service = new RepositoryBackedTranslationProvider(repository);
        when(repository.findAllForLanguage(Locale.ENGLISH.getISO3Language())).thenReturn(englishTranslations);
        when(repository.findAllForLanguage(Locale.JAPANESE.getISO3Language())).thenReturn(japaneseTranslations);
    }

    @Test
    public void getTranslationsByCodeForEnglishReturnsJustEnglish() throws Exception {
        assertThat(service.getTranslationsByCode(Locale.ENGLISH))
                .isEqualTo(englishTranslations.stream().collect(toMap(Translation::getCode, Translation::getValue)));
    }

    @Test
    public void getTranslationsByCodeForJapaneseReturnsJustJapanese() throws Exception {
        assertThat(service.getTranslationsByCode(Locale.JAPANESE))
                .isEqualTo(japaneseTranslations.stream().collect(toMap(Translation::getCode, Translation::getValue)));
    }
}