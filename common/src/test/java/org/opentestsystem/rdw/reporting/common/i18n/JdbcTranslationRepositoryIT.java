package org.opentestsystem.rdw.reporting.common.i18n;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.reporting.common.test.ITDataSourceConfiguration;
import org.opentestsystem.rdw.reporting.common.test.RepositoryIT;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit4.SpringRunner;

import static org.assertj.core.api.Assertions.assertThat;
import static org.opentestsystem.rdw.reporting.common.i18n.TranslationNamespace.INTERNAL;

@RunWith(SpringRunner.class)
@RepositoryIT
@ContextConfiguration(classes = {ITDataSourceConfiguration.class, JdbcTranslationRepository.class})
@Sql(scripts = {"translations.sql"})
@ActiveProfiles("test")
public class JdbcTranslationRepositoryIT {

    private final Translation ns1_eng_msg1 = new Translation("msg1", "Namespace 1: English Message 1");
    private final Translation ns1_eng_msg2 = new Translation("msg2", "Namespace 1: English Message 2");

    @Autowired
    private JdbcTranslationRepository repository;

    @Test
    public void itShouldGetOnlyTheMessagesForTheSelectedLanguageAndNamespace() throws Exception {
        assertThat(repository.findAllForLanguageAndNamespace("eng", INTERNAL))
                .usingRecursiveFieldByFieldElementComparator()
                .containsExactlyInAnyOrder(ns1_eng_msg1, ns1_eng_msg2);
    }

}
