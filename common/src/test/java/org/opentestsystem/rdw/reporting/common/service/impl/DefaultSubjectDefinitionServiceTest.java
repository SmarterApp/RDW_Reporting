package org.opentestsystem.rdw.reporting.common.service.impl;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;

import java.util.Collection;
import org.opentestsystem.rdw.reporting.common.model.SubjectDefinition;
import org.opentestsystem.rdw.reporting.common.repository.SubjectDefinitionRepository;

import static com.google.common.collect.ImmutableList.of;
import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Mockito.when;

@RunWith(MockitoJUnitRunner.class)
public class DefaultSubjectDefinitionServiceTest {

    @Mock
    private SubjectDefinitionRepository definitionRepository;

    private DefaultSubjectDefinitionService service;

    @Before
    public void setup() {
        service = new DefaultSubjectDefinitionService(definitionRepository);
    }

    @Test
    public void itShouldUseRepositoryToFindAll() {
        final Collection<SubjectDefinition> srcDefinitions = of(
                definition("subject_a", "type_a"),
                definition("subject_a", "type_b"),
                definition("subject_b", "type_a")
        );
        when(definitionRepository.findAll()).thenReturn(srcDefinitions);

        final Collection<SubjectDefinition> definitions = service.findAll();
        assertThat(definitions).isEqualTo(srcDefinitions);
    }

    private SubjectDefinition definition(final String subject, final String asmtType) {
        return SubjectDefinition.builder()
                .subjectCode(subject)
                .asmtTypeCode(asmtType)
                .build();
    }
}
