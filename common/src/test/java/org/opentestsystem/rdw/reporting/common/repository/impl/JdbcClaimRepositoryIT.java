package org.opentestsystem.rdw.reporting.common.repository.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.reporting.common.model.Claim;
import org.opentestsystem.rdw.reporting.common.model.CodedEntity;
import org.opentestsystem.rdw.reporting.common.repository.ClaimRepository;
import org.opentestsystem.rdw.reporting.common.test.ITDataSourceConfiguration;
import org.opentestsystem.rdw.reporting.common.test.RepositoryIT;
import org.opentestsystem.rdw.reporting.common.test.TenantConfiguration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Import;
import org.springframework.test.context.junit4.SpringRunner;

import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;

@RunWith(SpringRunner.class)
@Import({
        JdbcClaimRepository.class,
        ITDataSourceConfiguration.class,
        TenantConfiguration.class
})
@RepositoryIT
public class JdbcClaimRepositoryIT {

    @Autowired
    public ClaimRepository repository;

    @Test
    public void itShouldFindAllClaimsOrderedByDisplayOrder() {
        final List<Claim> claims = repository.findAll();
        assertThat(claims.size()).isGreaterThan(10);
        assertThat(claims.stream()
                .filter(claim -> claim.getSubjectCode().equals("Math") &&
                        claim.getAssessmentTypeCode().equals("ica"))
                .map(CodedEntity::getCode))
                .containsExactly("1", "SOCK_2", "3");
    }

}