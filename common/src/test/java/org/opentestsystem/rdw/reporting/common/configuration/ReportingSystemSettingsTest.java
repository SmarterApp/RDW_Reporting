package org.opentestsystem.rdw.reporting.common.configuration;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.context.properties.EnableConfigurationProperties;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.junit4.SpringRunner;

import java.util.Map;
import org.opentestsystem.rdw.reporting.common.model.SearchFilterPermissionLevel;
import org.opentestsystem.rdw.reporting.common.model.StudentFilterType;

import static org.assertj.core.api.Assertions.assertThat;
import static org.opentestsystem.rdw.reporting.common.model.SearchFilterPermissionLevel.Admin;
import static org.opentestsystem.rdw.reporting.common.model.SearchFilterPermissionLevel.Disabled;
import static org.opentestsystem.rdw.reporting.common.model.SearchFilterPermissionLevel.Enabled;

/**
 * Test loading of reporting settings from a yaml file
 */
@RunWith(SpringRunner.class)
@SpringBootTest(classes = { ReportingSystemSettingsTest.TestConfiguration.class })
@ActiveProfiles("test-reporting-settings")
public class ReportingSystemSettingsTest {

    @EnableConfigurationProperties(ReportingSystemSettings.class)
    public static class TestConfiguration {}

    @Autowired
    private ReportingSystemSettings settings;

    @Test
    public void itShouldHaveStudentFilters() {
        // sanity check
        assertThat(settings.getState().getCode()).isEqualTo("CA");

        final Map<StudentFilterType, SearchFilterPermissionLevel> studentFilters = settings.getStudentFilters();
        assertThat(studentFilters.get(StudentFilterType.EconomicDisadvantage)).isEqualTo(Disabled);
        assertThat(studentFilters.get(StudentFilterType.EnglishLanguageAcquisitionStatus)).isEqualTo(Admin);
        assertThat(studentFilters.get(StudentFilterType.Ethnicity)).isEqualTo(Enabled);
        assertThat(studentFilters.get(StudentFilterType.Gender)).isEqualTo(Enabled);
        assertThat(studentFilters.get(StudentFilterType.IndividualEducationPlan)).isEqualTo(Admin);
        assertThat(studentFilters.get(StudentFilterType.LimitedEnglishProficiencies)).isEqualTo(Disabled);
        assertThat(studentFilters.get(StudentFilterType.MigrantStatus)).isEqualTo(Admin);
        assertThat(studentFilters.get(StudentFilterType.MilitaryStudentIdentifier)).isEqualTo(Admin);
        assertThat(studentFilters.get(StudentFilterType.PrimaryLanguage)).isEqualTo(Admin);
        assertThat(studentFilters.get(StudentFilterType.Section504)).isEqualTo(Admin);
        assertThat(studentFilters).hasSize(10);
    }
}
