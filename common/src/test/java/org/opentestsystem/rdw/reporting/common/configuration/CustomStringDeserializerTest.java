package org.opentestsystem.rdw.reporting.common.configuration;

import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.assertj.core.api.Assertions.assertThat;


/**
 * To test the json mapping for AggregateReportingPropertiesTenant & ReportingSystemPropertiesImpl
 */
public class CustomStringDeserializerTest {

    private ObjectMapper mapper = new ObjectMapper();

    private String aggregateReportingWithOne =  "{"+
            "    \"assessmentTypes\":["+
            "      \"ica\","+
            "      \"sum\","+
            "      \"iab\""+
            "    ],"+
            "    \"statewideUserAssessmentTypes\": \"sum\","+
            "    \"stateAggregateAssessmentTypes\": \"sum\""+
            "}";

    private String aggregateReportingWithEmpty =  "{"+
            "    \"assessmentTypes\":["+
            "      \"ica\","+
            "      \"sum\","+
            "      \"iab\""+
            "    ],"+
            "    \"statewideUserAssessmentTypes\":[],"+
            "    \"stateAggregateAssessmentTypes\":[]"+
            "}";
    
    private String aggregateReportingFull = "{" +
            "   \"assessmentTypes\":[" +
            "      \"ica\"," +
            "      \"sum\"," +
            "      \"iab\"" +
            "    ]," +
            "    \"statewideUserAssessmentTypes\":[" +
            "      \"sum\"" +
            "    ]," +
            "    \"stateAggregateAssessmentTypes\":[" +
            "      \"sum\"" +
            "    ]" +
            "  }";

    private String reportingSystemSettingWitEmpty = "{" +
            "      \"irisVendorId\": null," +
            "      \"transferAccessEnabled\": null," +
            "      \"reportLanguages\": []," +
            "      \"effectiveReportLanguages\": [" +
            "        \"en\"" +
            "      ]," +
            "      \"interpretiveGuideUrl\": null," +
            "      \"accessDeniedUrl\": null," +
            "      \"uiLanguages\": []," +
            "      \"translationLocation\": null," +
            "      \"userGuideUrl\": null," +
            "      \"schoolYear\": 2019," +
            "      \"minItemDataYear\": null," +
            "      \"percentileDisplayEnabled\": null," +
            "      \"state\": {" +
            "        \"name\": \"California\"," +
            "        \"code\": \"CA\"" +
            "      }," +
            "      \"targetReport\": {" +
            "        \"insufficientDataCutoff\": null," +
            "        \"minNumberOfStudents\": null" +
            "      }," +
            "      \"studentFields\": {}," +
            "      \"analyticsTrackingId\": null" +
            "    }" +
            "  }";

    private String reportingSystemSettingWithOne = "{" +
            "      \"irisVendorId\": null," +
            "      \"transferAccessEnabled\": null," +
            "      \"reportLanguages\": \"en\"," +
            "      \"effectiveReportLanguages\": [" +
            "        \"en\"" +
            "      ]," +
            "      \"interpretiveGuideUrl\": null," +
            "      \"accessDeniedUrl\": null," +
            "      \"uiLanguages\": \"en\"," +
            "      \"translationLocation\": null," +
            "      \"userGuideUrl\": null," +
            "      \"schoolYear\": 2019," +
            "      \"minItemDataYear\": null," +
            "      \"percentileDisplayEnabled\": null," +
            "      \"state\": {" +
            "        \"name\": \"California\"," +
            "        \"code\": \"CA\"" +
            "      }," +
            "      \"targetReport\": {" +
            "        \"insufficientDataCutoff\": null," +
            "        \"minNumberOfStudents\": null" +
            "      }," +
            "      \"studentFields\": {}," +
            "      \"analyticsTrackingId\": null" +
            "    }" +
            "  }";


    private String reportingSystemSettingMix = "{" +
            "      \"irisVendorId\": null," +
            "      \"transferAccessEnabled\": null," +
            "      \"reportLanguages\": \"en\"," +
            "      \"effectiveReportLanguages\": [" +
            "        \"en\"," +
            "        \"ja\"" +
            "      ]," +
            "      \"interpretiveGuideUrl\": null," +
            "      \"accessDeniedUrl\": null," +
            "      \"uiLanguages\": \"en\"," +
            "      \"translationLocation\": null," +
            "      \"userGuideUrl\": null," +
            "      \"schoolYear\": 2019," +
            "      \"minItemDataYear\": null," +
            "      \"percentileDisplayEnabled\": null," +
            "      \"state\": {" +
            "        \"name\": \"California\"," +
            "        \"code\": \"CA\"" +
            "      }," +
            "      \"targetReport\": {" +
            "        \"insufficientDataCutoff\": null," +
            "        \"minNumberOfStudents\": null" +
            "      }," +
            "      \"studentFields\": {}," +
            "      \"analyticsTrackingId\": null" +
            "    }" +
            "  }";

    @Test
    public void isShouldHandleSingleItemsInACollection() throws Exception {

        AggregateReportingPropertiesTenant aggregateReportingPropertiesOne = mapper.readValue(aggregateReportingWithOne, AggregateReportingPropertiesTenant.class);
        assertThat(aggregateReportingPropertiesOne).isNotNull();

        ReportingSystemPropertiesImpl reportingSystemPropertiesOne = mapper.readValue(reportingSystemSettingWithOne, ReportingSystemPropertiesImpl.class);
        assertThat(reportingSystemPropertiesOne).isNotNull();

    }

    @Test
    public void isShouldHandleEmptyItemsInACollection() throws Exception {

        AggregateReportingPropertiesTenant aggregateReportingPropertiesEmpty = mapper.readValue(aggregateReportingWithEmpty, AggregateReportingPropertiesTenant.class);
        assertThat(aggregateReportingPropertiesEmpty).isNotNull();

        ReportingSystemPropertiesImpl reportingSystemPropertiesEmpty = mapper.readValue(reportingSystemSettingWitEmpty, ReportingSystemPropertiesImpl.class);
        assertThat(reportingSystemPropertiesEmpty).isNotNull();

    }

    @Test
    public void isShouldHandleFullAndMixItemsInACollection() throws Exception {

        AggregateReportingPropertiesTenant aggregateReportingPropertiesFull = mapper.readValue(aggregateReportingFull, AggregateReportingPropertiesTenant.class);
        assertThat(aggregateReportingPropertiesFull).isNotNull();

        ReportingSystemPropertiesImpl reportingSystemPropertiesMix = mapper.readValue(reportingSystemSettingMix, ReportingSystemPropertiesImpl.class);
        assertThat(reportingSystemPropertiesMix).isNotNull();
    }

}