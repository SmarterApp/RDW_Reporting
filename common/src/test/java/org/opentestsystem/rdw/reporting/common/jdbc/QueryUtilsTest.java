package org.opentestsystem.rdw.reporting.common.jdbc;


import org.junit.Test;

import static com.google.common.collect.Lists.newArrayList;
import static org.assertj.core.api.AssertionsForInterfaceTypes.assertThat;
import static org.opentestsystem.rdw.reporting.common.jdbc.QueryUtils.padIntToSize;

public class QueryUtilsTest {

    @Test
    public void itShouldPad() {
        assertThat(padIntToSize(newArrayList(), 3)).containsExactly(-300, -301, -302);
        assertThat(padIntToSize(null, 4)).containsExactly(-300, -301, -302, -303);
        assertThat(padIntToSize(newArrayList(1), 4)).containsExactly(1, -301, -302, -303);
        assertThat(padIntToSize(newArrayList(1, 2), 1)).containsExactly(1, 2);
        assertThat(padIntToSize(newArrayList(1, 2), 2)).containsExactly(1, 2);
        assertThat(padIntToSize(newArrayList(1, 2), 3)).containsExactly(1, 2, -302);
    }

    @Test
    public void itShouldNotTruncateTheListIfItIsLongerThanPaddingSize() {
        assertThat(padIntToSize(newArrayList(1, 2, 3, 4, 5), 3)).containsExactly(1, 2, 3, 4, 5);
    }

    @Test(expected = IllegalArgumentException.class)
    public void itShouldThrowExceptionForUnsupportedSize() {
        assertThat(padIntToSize(newArrayList(), 3000));
    }

    @Test(expected = IllegalArgumentException.class)
    public void itShouldThrowExceptionForUnsupportedSizeWithNullInput() {
        assertThat(padIntToSize(null, 3000));
    }
}