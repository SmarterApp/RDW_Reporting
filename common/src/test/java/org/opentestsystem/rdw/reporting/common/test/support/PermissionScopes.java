package org.opentestsystem.rdw.reporting.common.test.support;

import com.google.common.collect.ImmutableMap;
import org.opentestsystem.rdw.security.Permission;
import org.opentestsystem.rdw.security.PermissionScope;

import java.util.Arrays;
import java.util.Map;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import static org.opentestsystem.rdw.reporting.common.security.ReportingRoles.GroupPiiRead;
import static org.opentestsystem.rdw.reporting.common.security.ReportingRoles.IndividualPiiRead;

/**
 * Testing utilities for dealing with permission scopes
 */
public final class PermissionScopes {

    private PermissionScopes() {
    }

    public static Map<String, Permission> permissions(Permission... permissionScopes) {
        return ImmutableMap
                .<String, Permission>builder()
                .putAll(Stream
                        .of(permissionScopes)
                        .collect(Collectors.toMap(Permission::getId, permission -> permission)))
                .build();
    }

    public static Permission groupOf(PermissionScope scope) {
        return new Permission(GroupPiiRead, scope);
    }

    public static Permission individualOf(PermissionScope scope) {
        return new Permission(IndividualPiiRead, scope);
    }

    public static PermissionScope statewide() {
        return PermissionScope.STATEWIDE;
    }

    public static PermissionScope districts(final Long... ids) {
        return new PermissionScope(null, Arrays.asList(ids), null, null);
    }

    public static PermissionScope schools(final Long... ids) {
        return new PermissionScope(null, null, null, Arrays.asList(ids));
    }
}
