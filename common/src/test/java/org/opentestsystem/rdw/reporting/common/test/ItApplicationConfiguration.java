package org.opentestsystem.rdw.reporting.common.test;

import org.opentestsystem.rdw.multitenant.TenantIdResolver;
import org.opentestsystem.rdw.multitenant.TenantKeyResolver;
import org.opentestsystem.rdw.multitenant.TenantProperties;
import org.opentestsystem.rdw.reporting.common.configuration.AggregateReportingPropertiesResolver;
import org.opentestsystem.rdw.reporting.common.configuration.AggregateReportingPropertiesRoot;
import org.opentestsystem.rdw.reporting.common.configuration.ReportingSystemPropertiesImpl;
import org.opentestsystem.rdw.reporting.common.multitenant.ReportingTenantIdResolver;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.EnableConfigurationProperties;
import org.springframework.cloud.context.config.annotation.RefreshScope;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
@EnableConfigurationProperties
public class ItApplicationConfiguration {

    @Bean("reportingSystemPropertiesResolver")
    @ConfigurationProperties("reporting")
    public ReportingSystemPropertiesImpl reportingSystemSettings() {
        //No need for multi-tenant resolver for most integration tests
        //Making mutable version available for ITs that are changing config
        //state dynamically mid test
        return new ReportingSystemPropertiesImpl();
    }

    @Bean
    public ReportingTenantIdResolver tenantIdResolver() {
        return new ReportingTenantIdResolver();
    }

    @Bean
    @ConfigurationProperties("tenantProperties")
    public TenantProperties tenantProperties() {
        return new TenantProperties();
    }

    @Bean
    public TenantKeyResolver tenantKeyResolver(TenantProperties tenantProperties,
                                               TenantIdResolver tenantIdResolver) {
        return new TenantKeyResolver(tenantProperties, tenantIdResolver);
    }

    @Bean
    @ConfigurationProperties("aggregate-reporting")
    AggregateReportingPropertiesRoot aggregateReportingPropertiesRoot() {
        return new AggregateReportingPropertiesRoot();
    }

    @Bean
    AggregateReportingPropertiesResolver aggregateReportingProperties(TenantKeyResolver tenantKeyResolver,
                                                                      AggregateReportingPropertiesRoot aggregateReportingPropertiesRoot) {
        return new AggregateReportingPropertiesResolver(tenantKeyResolver, aggregateReportingPropertiesRoot);
    }

}
