package org.opentestsystem.rdw.reporting.common.model;

import org.junit.Test;

/**
 * This test makes sure that the immutability of report queries doesn't get in
 * the way of the (fairly complex) report query handling. Sure, an integration
 * test in that complex code would be better but it was tricky to inject.
 */
public class AggregateReportQueryTest {

    public static class MyAggregateReportQuery extends AbstractAggregateReportQuery {

        @Override
        public Builder copy() {
            return builder().copy(this);
        }

        @Override
        public ReportQueryType getType() {
            return ReportQueryType.Claim;
        }

        public static Builder builder() {
            return new Builder();
        }

        public static class Builder extends AbstractAggregateReportQuery.Builder<MyAggregateReportQuery, Builder> {

            @Override
            public MyAggregateReportQuery build() {
                final MyAggregateReportQuery reportQuery = new MyAggregateReportQuery();
                super.build(reportQuery);
                return reportQuery;
            }
        }
    }

    @Test
    public void itShouldAllowDimensionTypesToBeAddedAfterCopy() {
        final MyAggregateReportQuery src = MyAggregateReportQuery.builder()
            .dimensionType(DimensionType.Gender)
            .build();

        // before the fix, this would throw an UnsupportedOperationException
        src.copy().dimensionType(DimensionType.Overall).build();
    }

    @Test
    public void itShouldAllowSubgroupsToBeAddedAfterCopy() {
        final StudentFilters aFilter = StudentFilters.builder().build();

        final MyAggregateReportQuery src = MyAggregateReportQuery.builder()
            .subgroup("a", aFilter)
            .build();

        // before the fix, this would throw an UnsupportedOperationException
        final StudentFilters bFilter = StudentFilters.builder().build();
        src.copy().subgroup("b", bFilter).build();
    }
}
