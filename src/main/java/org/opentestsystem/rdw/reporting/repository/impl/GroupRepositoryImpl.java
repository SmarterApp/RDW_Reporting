package org.opentestsystem.rdw.reporting.repository.impl;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import org.opentestsystem.rdw.reporting.model.Group;
import org.opentestsystem.rdw.reporting.repository.GroupRepository;
import org.opentestsystem.rdw.reporting.security.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;

import static com.google.common.base.Preconditions.checkNotNull;

@Repository
public class GroupRepositoryImpl implements GroupRepository {

    private final NamedParameterJdbcTemplate jdbcTemplate;

    @Value("${group.findAll.sql}")
    private String findAllSql;

    @Autowired
    public GroupRepositoryImpl(NamedParameterJdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = checkNotNull(jdbcTemplate);
    }

    @Override
    public List<Group> findAll(final User user) {
        return jdbcTemplate.query(findAllSql,
                new MapSqlParameterSource("user_login", user.getUsername()),
                new GroupRowMapper());
    }

    private static class GroupRowMapper implements RowMapper<Group> {
        @Override
        public Group mapRow(final ResultSet rs, final int rowNum) throws SQLException {
            return Group.builder()
                    .withName(rs.getString("name"))
                    .withId(rs.getLong("id"))
                    .build();
        }
    }

}
