package org.opentestsystem.rdw.reporting.repository.impl.s3;

import com.amazonaws.AmazonClientException;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.model.GetObjectRequest;
import com.amazonaws.services.s3.model.S3Object;
import org.opentestsystem.rdw.reporting.repository.ArtifactRepository;
import org.springframework.stereotype.Repository;

import java.io.IOException;
import java.io.InputStream;
import java.text.MessageFormat;

@Repository
public class S3ArtifactRepository implements ArtifactRepository{
    private AmazonS3 s3Client;
    private S3Properties properties;

    public S3ArtifactRepository(AmazonS3 s3Client, S3Properties properties) {
        this.s3Client = s3Client;
        this.properties = properties;
    }

    @Override
    public InputStream getItemXml(String id) throws IOException {
        return getArtifactFromItemDirectory(id, MessageFormat.format(properties.getItemXml(), id));
    }

    @Override
    public InputStream getArtifactFromItemDirectory(String id, String artifactName) throws IOException {
        return getArtifact(MessageFormat.format(properties.getItemDirectory(), id) + artifactName);
    }

    private InputStream getArtifact(String name) throws IOException {
        try{
            GetObjectRequest request = new GetObjectRequest(properties.getBucket(), name);
            S3Object object = s3Client.getObject(request);

            return object.getObjectContent();
        }
        catch(AmazonClientException e){
            throw new IOException("Unable to get artifact from Amazon S3: " + name, e);
        }
    }
}
