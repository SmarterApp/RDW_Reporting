package org.opentestsystem.rdw.reporting.repository.impl;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import org.opentestsystem.rdw.reporting.model.Student;
import org.opentestsystem.rdw.reporting.repository.StudentRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;

import static com.google.common.base.Preconditions.checkNotNull;

@Repository
public class StudentRepositoryImpl implements StudentRepository {

    private final NamedParameterJdbcTemplate jdbcTemplate;

    @Value("${sql.group.student.findAll}")
    private String findAllByGroupIdSql;

    @Autowired
    StudentRepositoryImpl(final NamedParameterJdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = checkNotNull(jdbcTemplate);
    }

    @Override
    public List<Student> findAllByGroupId(final long groupId) {
        return jdbcTemplate.query(findAllByGroupIdSql,
                new MapSqlParameterSource("student_group_id", groupId),
                new StudentRowMapper());
    }

    private static class StudentRowMapper implements RowMapper<Student> {
        @Override
        public Student mapRow(final ResultSet rs, final int rowNum) throws SQLException {
            return Student.builder()
                    .firstName(rs.getString("first_name"))
                    .lastOrSurname(rs.getString("last_or_surname"))
                    .middleName(rs.getString("middle_name"))
                    .ssid(rs.getString("ssid"))
                    .id(rs.getLong("id"))
                    .build();
        }
    }
}
