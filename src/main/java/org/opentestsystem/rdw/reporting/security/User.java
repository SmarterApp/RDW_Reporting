package org.opentestsystem.rdw.reporting.security;

import org.opentestsystem.rdw.utils.TenancyChain;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import java.util.Collection;

import static com.google.common.collect.Lists.newArrayList;

public class User implements UserDetails {
    private String id;
    private String email;
    private String givenName;
    private TenancyChain tenancyChain;
    private String password;
    private String username;
    private Collection<GrantedAuthority> authorities;
    private boolean accountNonExpired;
    private boolean accountNonLocked;
    private boolean credentialsNonExpired;
    private boolean enabled;


    @Override
    public Collection<? extends GrantedAuthority> getAuthorities() {
        return authorities;
    }

    @Override
    public String getPassword() {
        return password;
    }

    @Override
    public String getUsername() {
        return username;
    }

    @Override
    public boolean isAccountNonExpired() {
        return accountNonExpired;
    }

    @Override
    public boolean isAccountNonLocked() {
        return accountNonLocked;
    }

    @Override
    public boolean isCredentialsNonExpired() {
        return credentialsNonExpired;
    }

    @Override
    public boolean isEnabled() {
        return enabled;
    }

    public static Builder builder() {
        return new Builder();

    }

    public static class Builder {
        private String id;
        private String email;
        private String givenName;
        private TenancyChain tenancyChain;
        private String password;
        private String username;
        private Collection<GrantedAuthority> authorities = newArrayList();
        private boolean accountNonExpired;
        private boolean accountNonLocked;
        private boolean credentialsNonExpired;
        private boolean enabled;

        public User build() {
            final User user = new User();
            user.id = id;
            user.email = email;
            user.givenName = givenName;
            user.tenancyChain = tenancyChain;
            user.password = password;
            user.username = username;
            user.authorities = authorities;
            user.accountNonExpired = accountNonExpired;
            user.accountNonLocked = accountNonLocked;
            user.credentialsNonExpired = credentialsNonExpired;
            user.enabled = enabled;
            return user;
        }

        public Builder id(final String id) {
            this.id = id;
            return this;
        }

        public Builder email(final String email) {
            this.email = email;
            return this;
        }

        public Builder givenName(final String givenName) {
            this.givenName = givenName;
            return this;
        }

        public Builder tenancyChain(final TenancyChain tenancyChain) {
            this.tenancyChain = tenancyChain;
            return this;
        }

        public Builder password(final String password) {
            this.password = password;
            return this;
        }

        public Builder username(final String username) {
            this.username = username;
            return this;
        }

        public Builder authorities(final Collection<GrantedAuthority> authorities) {
            this.authorities = authorities == null ? newArrayList() : newArrayList(authorities);
            return this;
        }

        public Builder accountNonExpired(final boolean accountNonExpired) {
            this.accountNonExpired = accountNonExpired;
            return this;
        }

        public Builder accountNonLocked(final boolean accountNonLocked) {
            this.accountNonLocked = accountNonLocked;
            return this;
        }

        public Builder credentialsNonExpired(final boolean credentialsNonExpired) {
            this.credentialsNonExpired = credentialsNonExpired;
            return this;
        }

        public Builder enabled(final boolean enabled) {
            this.enabled = enabled;
            return this;
        }


    }
}
