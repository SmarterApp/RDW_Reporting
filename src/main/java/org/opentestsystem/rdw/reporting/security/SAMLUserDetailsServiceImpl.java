package org.opentestsystem.rdw.reporting.security;

import com.google.common.collect.Sets;
import org.opentestsystem.rdw.utils.TenancyChain;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.security.saml.SAMLCredential;
import org.springframework.security.saml.userdetails.SAMLUserDetailsService;
import org.springframework.stereotype.Service;

@Service
public class SAMLUserDetailsServiceImpl implements SAMLUserDetailsService {

    public Object loadUserBySAML(SAMLCredential credential) throws UsernameNotFoundException {

        final TenancyChain tenancyChain = TenancyChain.fromString(credential.getAttributeAsString("sbacTenancyChain"));
        // TODO: map sbacTenancyChain to authorities (roles and permissions)
        return User.builder()
                .id(credential.getAttributeAsString("sbacUUID"))
                .email(credential.getAttributeAsString("mail"))
                .givenName(credential.getAttributeAsString("givenName"))
                .tenancyChain(tenancyChain)
                .username(credential.getNameID().getValue())
                .password("[REDACTED]")
                .enabled(true)
                .credentialsNonExpired(true)
                .accountNonExpired(true)
                .accountNonLocked(true)
                .authorities(Sets.newHashSet(new SimpleGrantedAuthority("ROLE_USER")))
                .build();
    }

}