package org.opentestsystem.rdw.reporting.config;

import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Enumeration;

import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


@SuppressWarnings("serial")
public class RequestForwardingServlet extends HttpServlet {

	private String domain;

	public RequestForwardingServlet(String domain) {
		this.domain = domain;
	}

	@Override
	public void doGet(HttpServletRequest request, HttpServletResponse response) {
		forwardRequest("GET", request, response);
	}

	@Override
	public void doPost(HttpServletRequest request, HttpServletResponse response) {
		forwardRequest("POST", request, response);
	}

	private void forwardRequest(String method, HttpServletRequest request, HttpServletResponse response) {
		final boolean hasBody = method.equals("POST");

		try {
			final URL url = new URL(this.domain  // no trailing slash
				+ request.getRequestURI()
				+ (request.getQueryString() != null ? "?" + request.getQueryString() : ""));

			final HttpURLConnection connection = (HttpURLConnection) url.openConnection();

			connection.setRequestMethod(method);

			final Enumeration<String> headers = request.getHeaderNames();
			while (headers.hasMoreElements()) {
				final String header = headers.nextElement();
				final Enumeration<String> values = request.getHeaders(header);
				while (values.hasMoreElements()) {
					final String value = values.nextElement();
					connection.addRequestProperty(header, value);
				}
			}

			//conn.setFollowRedirects(false);  // throws AccessDenied exception
			connection.setUseCaches(false);
			connection.setDoInput(true);
			connection.setDoOutput(hasBody);
			connection.connect();


			final byte[] buffer = new byte[16384];
			while (hasBody) {
				final int read = request.getInputStream().read(buffer);
				if (read <= 0) break;
				connection.getOutputStream().write(buffer, 0, read);
			}

			response.setStatus(connection.getResponseCode());
			for (int i = 0; ; ++i) {
				final String header = connection.getHeaderFieldKey(i);
				if (header == null) break;
				final String value = connection.getHeaderField(i);
				response.setHeader(header, value);
			}

			while (true) {
				final int read = connection.getInputStream().read(buffer);
				if (read <= 0) break;
				response.getOutputStream().write(buffer, 0, read);
			}

			response.setContentType(connection.getContentType());

			final String contentType = connection.getContentType();
			final String urlString = url.toString();
			final String hi = "";
		} catch (Exception e) {
			e.printStackTrace();
			// pass
		}
	}
}