package org.opentestsystem.rdw.reporting.model;

import com.google.common.collect.ImmutableSet;

import java.util.Collection;
import java.util.Set;

/**
 * Used to limit database query results
 */
public class PermissionScope {

	/**
	 * Statewide permission scope flyweight
	 * Since all statewide permission scopes will be identical, we can use the same immutable object instance
	 */
	public static final PermissionScope STATEWIDE = new PermissionScope(true, null, null);

	/**
	 * When true, a permission can be applied to all data for the state
	 */
	private final boolean statewide;

	/**
	 * Holds district entity IDs to which the permission is granted
	 */
	private final Set<Long> districtIds;

	/**
	 * Holds institution entity IDs to which the permission is granted
	 */
	private final Set<Long> institutionIds;

	public PermissionScope(
	        final boolean statewide,
	        final Collection<Long> districtIds,
	        final Collection<Long> institutionIds) {
		this.statewide = statewide;
		this.districtIds = districtIds != null ? ImmutableSet.copyOf(districtIds) : ImmutableSet.of();
		this.institutionIds = institutionIds != null ? ImmutableSet.copyOf(institutionIds) : ImmutableSet.of();
	}

	public boolean isStatewide() {
		return statewide;
	}

	public Set<Long> getDistrictIds() {
		return districtIds;
	}

	public Set<Long> getInstitutionIds() {
		return institutionIds;
	}

	public static Builder builder() {
		return new Builder();
	}

	public static final class Builder {

		private boolean statewide = false;
		private Collection<Long> districtIds;
		private Collection<Long> institutionIds;

		public Builder statewide(boolean statewide) {
			this.statewide = statewide;
			return this;
		}

		public Builder districtIds(Collection<Long> districtIds) {
			this.districtIds = districtIds;
			return this;
		}

		public Builder institutionIds(Collection<Long> institutionIds) {
			this.institutionIds = institutionIds;
			return this;
		}

		public PermissionScope build() {
			return new PermissionScope(statewide, districtIds, institutionIds);
		}
	}

}
