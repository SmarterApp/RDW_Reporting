package org.opentestsystem.rdw.reporting.model;

import org.opentestsystem.rdw.reporting.model.enums.ScoringCriteriaType;

import java.util.Objects;

public class ScoringCriteria {
    // Rubrics and Exemplar have the same properties.  Should they diverge at any point,
    // we should consider different models rather than the same model with a differentiating enum (ScoringCriteriaType).
    private ScoringCriteriaType type;
    private String scorepoint;
    private String name;
    private String template;

    public static Builder builder(){
        return new Builder();
    }

    public ScoringCriteriaType getType() { return type; }
    public String getScorepoint() {
        return scorepoint;
    }
    public String getName() {
        return name;
    }
    public String getTemplate() {
        return template;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        final ScoringCriteria that = (ScoringCriteria) o;

        return Objects.equals(scorepoint, that.scorepoint)
            && Objects.equals(name, that.name)
            && Objects.equals(template, that.template)
            && Objects.equals(type, that.type);
    }

    @Override
    public int hashCode() {
        return Objects.hash(scorepoint, name, template, type);
    }

    public static class Builder {
        private ScoringCriteriaType type;
        private String scorepoint;
        private String name;
        private String template;

        public Builder type(ScoringCriteriaType type) {
            this.type = type;
            return this;
        }

        public Builder scorepoint(String scorepoint) {
            this.scorepoint = scorepoint;
            return this;
        }

        public Builder name(String name) {
            this.name = name;
            return this;
        }

        public Builder template(String val) {
            this.template = val;
            return this;
        }

        public ScoringCriteria build() {
            final ScoringCriteria scoringCriteria = new ScoringCriteria();

            scoringCriteria.type = type;
            scoringCriteria.scorepoint = scorepoint;
            scoringCriteria.name = name;
            scoringCriteria.template = template;

            return scoringCriteria;
        }
    }

}
