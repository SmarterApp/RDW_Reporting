package org.opentestsystem.rdw.reporting.search.user;

import com.google.common.collect.ImmutableMap;
import com.google.common.collect.ImmutableSet;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.reporting.search.group.GroupService;
import org.opentestsystem.rdw.reporting.search.school.SchoolService;
import org.opentestsystem.rdw.reporting.security.User;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.junit4.SpringRunner;

import static com.google.common.collect.Lists.newArrayList;
import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

@RunWith(SpringRunner.class)
@ActiveProfiles("test")
public class DefaultUserContextServiceTest {

    @MockBean
    private SchoolService schoolService;

    @MockBean
    private GroupService groupService;

    @MockBean
    private User user;

    private DefaultUserContextService service;

    @Before
    public void before() {
        when(user.getPermissionsById()).thenReturn(ImmutableMap.of());
        when(schoolService.getSchools(user)).thenReturn(ImmutableSet.of());
        when(groupService.getGroups(user)).thenReturn(ImmutableSet.of());
        service = new DefaultUserContextService(groupService, schoolService);
    }

    @Test
    public void getUserContextCallsSchoolService() throws Exception {
        service.getUserContext(user);
        verify(schoolService, times(1)).getSchools(user);
    }

    @Test
    public void getUserContextCallsGroupService() throws Exception {
        service.getUserContext(user);
        verify(groupService, times(1)).getGroups(user);
    }

}