package org.opentestsystem.rdw.reporting.exam.repository;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.reporting.ITDataSourceConfiguration;
import org.opentestsystem.rdw.reporting.RepositoryIT;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.EmptyResultDataAccessException;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit4.SpringRunner;

import static org.assertj.core.api.Assertions.assertThat;

@RunWith(SpringRunner.class)
@RepositoryIT
@ContextConfiguration(classes = {JdbcAssessmentRepository.class, ITDataSourceConfiguration.class})
@Sql(statements = {
        "INSERT INTO asmt_type (id, code, name) VALUES (-1, 'type1', 'type1');\n",
        "INSERT INTO subject (id, code) VALUES (-1, 'subject1');\n",
        "INSERT INTO grade (id, code, name) VALUES (-1, 'g1', 'grade1');\n",
        "INSERT INTO asmt (id, type_id, natural_id, grade_id, subject_id, school_year, name, label, version, import_id) VALUES (-1, -1, 'a', -1, -1, 2017, 'a', 'a', 'a', -1);"
})
@ActiveProfiles("test")
public class JdbcAssessmentRepositoryIT {

    @Autowired
    private JdbcAssessmentRepository repository;

    @Test(expected = EmptyResultDataAccessException.class)
    public void findTypeIdForIdShouldThrowExceptionForMissingAssessmentId() throws Exception {
        repository.findTypeIdForId(1L);
    }

    @Test
    public void findTypeIdForIdShouldFindCorrectTypeIdForAssessmentId() throws Exception {
        assertThat(repository.findTypeIdForId(-1L)).isEqualTo(-1L);
    }

}