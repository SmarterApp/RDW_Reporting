package org.opentestsystem.rdw.reporting.search.exam.student;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.reporting.TestData;
import org.opentestsystem.rdw.reporting.common.test.ITDataSourceConfiguration;
import org.opentestsystem.rdw.reporting.common.test.RepositoryIT;
import org.opentestsystem.rdw.reporting.security.PermissionScope;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit4.SpringRunner;

import static org.assertj.core.api.Assertions.assertThat;


@RunWith(SpringRunner.class)
@RepositoryIT
@ContextConfiguration(classes = {ITDataSourceConfiguration.class, JdbcStudentExamRepository.class})
@Sql(scripts = {"classpath:integration-test-data.sql"})
@ActiveProfiles("test")
public class JdbcStudentExamRepositoryIT {


    @Autowired
    private JdbcStudentExamRepository repository;

    @Test
    public void findAllForStudentShouldReturnEmptyForMissingStudent() throws Exception {
        assertThat(repository.findAllForStudent(PermissionScope.STATEWIDE, 0L)).isEmpty();
    }

    @Test
    public void findAllForStudentShouldReturnAllExamsForExistingStudent() throws Exception {
        assertThat(repository.findAllForStudent(PermissionScope.STATEWIDE, -1L))
                .usingRecursiveFieldByFieldElementComparator()
                .containsOnlyElementsOf(TestData.STUDENT_EXAMS);
    }

}