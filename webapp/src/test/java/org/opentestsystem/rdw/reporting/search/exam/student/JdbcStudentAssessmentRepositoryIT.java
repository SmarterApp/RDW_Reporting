package org.opentestsystem.rdw.reporting.search.exam.student;

import com.google.common.collect.ImmutableSet;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.reporting.common.test.ITDataSourceConfiguration;
import org.opentestsystem.rdw.reporting.common.test.RepositoryIT;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit4.SpringRunner;

import static org.assertj.core.api.Assertions.assertThat;
import static org.opentestsystem.rdw.reporting.TestData.ASSESSMENTS_BY_ID;


@RunWith(SpringRunner.class)
@RepositoryIT
@ContextConfiguration(classes = {ITDataSourceConfiguration.class, JdbcStudentAssessmentRepository.class})
@Sql(scripts = {"classpath:integration-test-data.sql"})
@ActiveProfiles("test")
public class JdbcStudentAssessmentRepositoryIT {

    @Autowired
    private JdbcStudentAssessmentRepository repository;

    @Test
    public void findAllByIdsShouldFindNoneForNoIds() throws Exception {
        assertThat(repository.findAllByIds(ImmutableSet.of())).isEmpty();
    }

    @Test
    public void findAllByIdsShouldFindNoneForMissingIds() throws Exception {
        assertThat(repository.findAllByIds(ImmutableSet.of(-999L, -888L))).isEmpty();
    }

    @Test
    public void findAllByIdsShouldFindAllForExistingIds() throws Exception {
        assertThat(repository.findAllByIds(ImmutableSet.of(-3L, -2L, 0L)))
                .usingFieldByFieldElementComparator()
                .containsExactlyInAnyOrder(ASSESSMENTS_BY_ID.get(-2L), ASSESSMENTS_BY_ID.get(-3L));
    }

}