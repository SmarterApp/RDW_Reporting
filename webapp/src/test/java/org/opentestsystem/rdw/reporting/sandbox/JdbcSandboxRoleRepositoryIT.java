package org.opentestsystem.rdw.reporting.sandbox;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.reporting.common.test.ITDataSourceConfiguration;
import org.opentestsystem.rdw.reporting.common.test.RepositoryIT;
import org.opentestsystem.rdw.reporting.sandbox.repository.impl.JdbcSandboxRoleRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit4.SpringRunner;

import java.util.List;
import java.util.stream.Collectors;

import static org.assertj.core.api.Assertions.assertThat;

@RunWith(SpringRunner.class)
@RepositoryIT
@ContextConfiguration(classes = {ITDataSourceConfiguration.class, JdbcSandboxRoleRepository.class})
@Sql(scripts = {"classpath:integration-test-data.sql"})
@ActiveProfiles("test")
public class JdbcSandboxRoleRepositoryIT {


    @Autowired
    private JdbcSandboxRoleRepository repository;

    @Test
    public void findAllSandboxRoles() {
        List<SandboxRole> roles = repository.findAll();
        assertThat(roles).isNotEmpty();
        assertThat(roles).hasSize(9);

        List<SandboxRole> districtRoles = roles.stream()
                .filter(role -> role.getId().startsWith("district"))
                .collect(Collectors.toList());

        assertThat(districtRoles).hasSize(1);
        assertThat(districtRoles.get(0).getLabel()).isEqualTo("District Administrator (district1)");

        List<SandboxRole> schoolRoles = roles.stream()
                .filter(role -> role.getId().startsWith("school"))
                .collect(Collectors.toList());

        assertThat(schoolRoles).hasSize(4);
        assertThat(schoolRoles.get(0).getLabel()).isEqualTo("School Administrator (school4)");

        List<SandboxRole> teacherRoles = roles.stream()
                .filter(role -> role.getId().startsWith("teacher"))
                .collect(Collectors.toList());

        assertThat(teacherRoles).hasSize(4);
        assertThat(teacherRoles.get(0).getLabel()).isEqualTo("Teacher (school3 - {g2})");
    }
}