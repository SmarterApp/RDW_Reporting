package org.opentestsystem.rdw.reporting.zuul;

import com.netflix.zuul.context.RequestContext;
import org.junit.Before;
import org.junit.Test;
import org.springframework.mock.web.MockHttpServletRequest;

import static org.assertj.core.api.Assertions.assertThat;

public class RequestContentTypeCleaningFilterTest {

    private RequestContentTypeCleaningFilter filter;
    private RequestContext context;
    private MockHttpServletRequest request;

    @Before
    public void setup() {
        request = new MockHttpServletRequest();
        context = new RequestContext();
        context.setRequest(request);
        RequestContext.testSetCurrentContext(context);

        filter = new RequestContentTypeCleaningFilter();
    }

    @Test
    public void itShouldNotFilterRequestsWithoutContentType() {
        assertThat(filter.shouldFilter()).isFalse();
    }

    @Test
    public void itShouldNotFilterRequestsWithoutASpaceInContentType() {
        request.setContentType("text/plain;charset=utf-8");
        assertThat(filter.shouldFilter()).isFalse();
    }

    @Test
    public void itShouldFilterRequestsWithInvalidContentType() {
        request.setContentType("text/plain; charset=utf-8");
        assertThat(filter.shouldFilter()).isTrue();
    }

    @Test
    public void itShouldCleanRequestsWithInvalidContentType() {
        request.setContentType("text/plain; charset=utf-8");
        filter.run();
        assertThat(context.getRequest().getContentType())
                .isEqualTo("text/plain;charset=utf-8");
    }
}