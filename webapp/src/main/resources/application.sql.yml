sql:
  school_year:
    findAll: >-
      select year from school_year order by year desc;

  exam:
    findAllByStudentId: >-
      select e.id,
        e.type_id,
        e.grade_code,
        e.school_year,
        e.completeness_code,
        e.administration_condition_code,
        e.school_year,
        e.session_id,
        e.completed_at,
        e.scale_score,
        e.scale_score_std_err,
        e.performance_level,
        e.claim1_category,
        e.claim1_scale_score,
        e.claim1_scale_score_std_err,
        e.claim2_category,
        e.claim2_scale_score,
        e.claim2_scale_score_std_err,
        e.claim3_category,
        e.claim3_scale_score,
        e.claim3_scale_score_std_err,
        e.claim4_category,
        e.claim4_scale_score,
        e.claim4_scale_score_std_err,
        e.asmt_id,
        e.available_accommodation_codes,
        a.claim1_score_code,
        a.claim2_score_code,
        a.claim3_score_code,
        a.claim4_score_code,
        a.id as asmt_id,
        a.label as asmt_label,
        a.grade_code as asmt_grade_code,
        a.type_id as asmt_type_id,
        a.subject_id as asmt_subject_id,
        a.school_year as asmt_school_year,
        a.claim1_score_code as asmt_claim1_score_code,
        a.claim2_score_code as asmt_claim2_score_code,
        a.claim3_score_code as asmt_claim3_score_code,
        a.claim4_score_code as asmt_claim4_score_code,
        a.min_score as asmt_min_score,
        a.max_score as asmt_max_score,
        a.cut_point_1 as asmt_cut_point_1,
        a.cut_point_2 as asmt_cut_point_2,
        a.cut_point_3 as asmt_cut_point_3,
        ir.resource as asmt_resource,
        s.id as school_id,
        s.name as school_name
      from exam e
        join student st on st.id = e.student_id
        join asmt a on e.asmt_id=a.id
        join school s on e.school_id=s.id
        join school isch on st.inferred_school_id = isch.id
        left join instructional_resource ir on ir.name = a.name
      where e.student_id=:student_id
        and
        (
          # Individual permissions test
          (
            (1 = :individual_statewide or s.district_group_id in (:individual_district_group_ids) or s.district_id in (:individual_district_ids) or s.school_group_id in (:individual_school_group_ids) or e.school_id in (:individual_school_ids))
            or
            (
              1 = :allow_transfer_access
              and (isch.district_group_id in (:individual_district_group_ids) or isch.district_id in (:individual_district_ids) or isch.school_group_id in (:individual_school_group_ids) or isch.id in (:individual_school_ids))
            )
          )
          or
          # Group permissions test
          (
            exists(
                select 1
                from student_group_membership sgm
                  join student_group sg on sgm.student_group_id = sg.id
                where sgm.student_group_id in (:group_ids)
                      and sgm.student_id = st.id
                      and (sg.subject_id is null or sg.subject_id = a.subject_id)
            )
            and
            (
              (1 = :group_statewide or s.district_group_id in (:group_district_group_ids) or s.district_id in (:group_district_ids) or s.school_group_id in (:group_school_group_ids) or e.school_id in (:group_school_ids))
              or
              (
                1 = :allow_transfer_access
                and (isch.district_group_id in (:group_district_group_ids) or isch.district_id in (:group_district_ids) or isch.school_group_id in (:group_school_group_ids) or isch.id in (:group_school_ids))
              )
            )
          )
        )

    # NOTE that existsForStudentId does not sample the students' inferred schools
    # because a student's inferred school is determined by their latest exam.
    existsForStudentId: >-
      select st.id,
        st.ssid,
        st.first_name,
        st.last_or_surname
      from student st
        join exam e on e.student_id = st.id
        join asmt a on a.id = e.asmt_id
        join school s on e.school_id = s.id
      where st.ssid=:student_ssid
        and
        (
          (1 = :individual_statewide
            or s.district_group_id in (:individual_district_group_ids)
            or s.district_id in (:individual_district_ids)
            or s.school_group_id in (:individual_school_group_ids)
            or e.school_id in (:individual_school_ids))
          or (
            exists(
                select 1
                from student_group_membership sgm
                  join student_group sg on sgm.student_group_id = sg.id
                where sgm.student_group_id in (:group_ids)
                      and sgm.student_id = st.id
                      and (sg.subject_id is null or sg.subject_id = a.subject_id)
            )
            and (1 = :group_statewide or s.district_group_id in (:group_district_group_ids) or s.district_id in (:group_district_ids) or s.school_group_id in (:group_school_group_ids) or e.school_id in (:group_school_ids))
          )
        )
      limit 1

    item:
      findAllForExam: >-
        select
          ei.exam_id,
          ei.item_id,
          ei.score,
          ei.position,
          ei.response
        from exam_item ei
          join exam e on ei.exam_id=e.id
          join student st on st.id = e.student_id
          join asmt a on a.id = e.asmt_id
          join school s on e.school_id=s.id
          join school isch on st.inferred_school_id = isch.id
        where e.id=:exam_id
          and
          (
            # Individual permissions test
            (
              (1 = :individual_statewide or s.district_group_id in (:individual_district_group_ids) or s.district_id in (:individual_district_ids) or s.school_group_id in (:individual_school_group_ids) or e.school_id in (:individual_school_ids))
              or
              (
                1 = :allow_transfer_access
                and (isch.district_group_id in (:individual_district_group_ids) or isch.district_id in (:individual_district_ids) or isch.school_group_id in (:individual_school_group_ids) or isch.id in (:individual_school_ids))
              )
            )
            or
            # Group permissions test
            (
              exists(
                  select 1
                  from student_group_membership sgm
                    join student_group sg on sgm.student_group_id = sg.id
                  where sgm.student_group_id in (:group_ids)
                        and sgm.student_id = st.id
                        and (sg.subject_id is null or sg.subject_id = a.subject_id)
              )
              and
              (
                (1 = :group_statewide or s.district_group_id in (:group_district_group_ids) or s.district_id in (:group_district_ids) or s.school_group_id in (:group_school_group_ids) or e.school_id in (:group_school_ids))
                or
                (
                  1 = :allow_transfer_access
                  and (isch.district_group_id in (:group_district_group_ids) or isch.district_id in (:group_district_ids) or isch.school_group_id in (:group_school_group_ids) or isch.id in (:group_school_ids))
                )
              )
            )
          )

  group:
    findAllForUsername: >-
      select sg.id, sg.name, school.name as school_name, subject_id
      from user_student_group usg
        join student_group sg on sg.id = usg.student_group_id
        join school on school.id = sg.school_id
      where user_login=:user_login
      and sg.id in (:group_ids)

    assessment:
      findAll: >-
          select distinct
            a.id,
            a.label,
            a.grade_code,
            a.type_id,
            a.subject_id,
            a.school_year,
            a.claim1_score_code,
            a.claim2_score_code,
            a.claim3_score_code,
            a.claim4_score_code,
            a.min_score,
            a.max_score,
            a.cut_point_1,
            a.cut_point_2,
            a.cut_point_3,
            ir.resource
          from asmt a
            left join instructional_resource ir on ir.name = a.name
            join exam e on e.asmt_id = a.id
            join student_group_membership sgm on e.student_id = sgm.student_id
            join school s on e.school_id = s.id
            join student st on e.student_id = st.id
            join school isch on st.inferred_school_id = isch.id
          where e.school_year=:school_year
            and a.id = e.asmt_id
            and sgm.student_group_id=:group_id
            and (0=:group_subject_id or a.subject_id=:group_subject_id)
            and (
              (1=:statewide or s.district_group_id in (:district_group_ids) or s.district_id in (:district_ids) or s.school_group_id in (:school_group_ids) or e.school_id in (:school_ids))
              or
              (
                1 = :allow_transfer_access
                and (isch.district_group_id in (:district_group_ids) or isch.district_id in (:district_ids) or isch.school_group_id in (:school_group_ids) or isch.id in (:school_ids))
              )
            )


    exam:
      # NOTE that findLatest does not sample the students' inferred schools
      # because a student's inferred school is determined by their latest exam.
      findLatest: >-
          select
            a.id,
            a.label,
            a.grade_code,
            a.type_id,
            a.subject_id,
            a.school_year,
            a.claim1_score_code,
            a.claim2_score_code,
            a.claim3_score_code,
            a.claim4_score_code,
            a.min_score,
            a.max_score,
            a.cut_point_1,
            a.cut_point_2,
            a.cut_point_3,
            ir.resource
          from exam e
            join student_group_membership sgm on e.student_id=sgm.student_id
            join asmt a on e.asmt_id=a.id
            left join instructional_resource ir on ir.name = a.name
            join school s on e.school_id=s.id
          where e.school_year=:school_year
            and sgm.student_group_id=:group_id
            and (0=:group_subject_id or a.subject_id=:group_subject_id)
            and (1=:statewide or s.district_group_id in (:district_group_ids) or s.district_id in (:district_ids) or s.school_group_id in (:school_group_ids) or e.school_id in (:school_ids))
          order by e.completed_at desc
          limit 1

      findAllForAssessment: >-
          select e.id,
            e.type_id,
            e.grade_code,
            e.iep,
            e.lep,
            e.section504,
            e.economic_disadvantage,
            e.migrant_status,
            e.completeness_code,
            e.administration_condition_code,
            e.school_year,
            e.session_id,
            e.completed_at,
            e.scale_score,
            e.scale_score_std_err,
            e.performance_level,
            a.claim1_score_code,
            e.claim1_category,
            e.claim1_scale_score,
            e.claim1_scale_score_std_err,
            a.claim2_score_code,
            e.claim2_category,
            e.claim2_scale_score,
            e.claim2_scale_score_std_err,
            a.claim3_score_code,
            e.claim3_category,
            e.claim3_scale_score,
            e.claim3_scale_score_std_err,
            a.claim4_score_code,
            e.claim4_category,
            e.claim4_scale_score,
            e.claim4_scale_score_std_err,
            e.available_accommodation_codes,
            st.id as student_id,
            st.ssid as student_ssid,
            st.last_or_surname as student_last_name,
            st.first_name as student_first_name,
            st.gender_code as student_gender_code,
            s.id as school_id,
            s.name as school_name
          from exam e
            join student_group_membership sgm on e.student_id = sgm.student_id
            join student st on e.student_id = st.id
            join asmt a on e.asmt_id = a.id
            join school s on e.school_id = s.id
            join school isch on st.inferred_school_id = isch.id
          where e.asmt_id=:assessment_id
            and e.school_year=:school_year
            and sgm.student_group_id=:group_id
            and (0=:group_subject_id or a.subject_id=:group_subject_id)
            and (
              (1=:statewide or s.district_group_id in (:district_group_ids) or s.district_id in (:district_ids) or s.school_group_id in (:school_group_ids) or e.school_id in (:school_ids))
              or
              (
                1 = :allow_transfer_access
                and (isch.district_group_id in (:district_group_ids) or isch.district_id in (:district_ids) or isch.school_group_id in (:school_group_ids) or isch.id in (:school_ids))
              )
            )

      item:
        findAllExamItemScoresForAssessment:
          select ei.id,
            ei.exam_id,
            ei.item_id,
            ei.score,
            ei.position,
            ei.response
          from exam_item ei
            join exam e on ei.exam_id=e.id
            join student_group_membership sgm on e.student_id=sgm.student_id
            join asmt a on e.asmt_id=a.id
            join school s on e.school_id=s.id
            join student st on e.student_id = st.id
            join school isch on st.inferred_school_id = isch.id
          where e.asmt_id=:assessment_id
            and e.school_year=:school_year
            and sgm.student_group_id=:group_id
            and (0=:group_subject_id or a.subject_id=:group_subject_id)
            and (
              (1=:statewide or s.district_group_id in (:district_group_ids) or s.district_id in (:district_ids) or s.school_group_id in (:school_group_ids) or e.school_id in (:school_ids))
              or
              (
                1 = :allow_transfer_access
                and (isch.district_group_id in (:district_group_ids) or isch.district_id in (:district_ids) or isch.school_group_id in (:school_group_ids) or isch.id in (:school_ids))
              )
            )

  schoolgrade:
    assessment:
      findAll: >-
        select a.id,
          a.label,
          a.grade_code,
          a.type_id,
          a.subject_id,
          a.school_year,
          a.claim1_score_code,
          a.claim2_score_code,
          a.claim3_score_code,
          a.claim4_score_code,
          a.min_score,
          a.max_score,
          a.cut_point_1,
          a.cut_point_2,
          a.cut_point_3,
          ir.resource
        from asmt a
        left join instructional_resource ir on ir.name = a.name
        where exists (
            select e.asmt_id
            from exam e
              join school s on e.school_id = s.id
              join student st on e.student_id = st.id
              join school isch on st.inferred_school_id = isch.id
            where e.school_year=:school_year
            and a.id = e.asmt_id
            and (
              (
                e.school_id=:school_id
                and (1=:statewide or s.district_group_id in (:district_group_ids) or s.district_id in (:district_ids) or s.school_group_id in (:school_group_ids) or e.school_id in (:school_ids))
              )
              or
              (
                1 = :allow_transfer_access
                and isch.id = :school_id
                and (1=:statewide or isch.district_group_id in (:district_group_ids) or isch.district_id in (:district_ids) or isch.school_group_id in (:school_group_ids) or isch.id in (:school_ids))
              )
            )
        )
        and a.grade_id=:grade_id

    exam:
      # NOTE that findLatest does not sample the students' inferred schools
      # because a student's inferred school is determined by their latest exam.
      findLatest: >-
        select
          a.id,
          a.label,
          a.grade_code,
          a.type_id,
          a.subject_id,
          a.school_year,
          a.claim1_score_code,
          a.claim2_score_code,
          a.claim3_score_code,
          a.claim4_score_code,
          a.min_score,
          a.max_score,
          a.cut_point_1,
          a.cut_point_2,
          a.cut_point_3,
          ir.resource
        from exam e
          join asmt a on e.asmt_id=a.id
          left join instructional_resource ir on ir.name = a.name
          join school s on e.school_id=s.id
        where e.school_year=:school_year
        and e.school_id=:school_id
        and a.grade_id=:grade_id
        and (1=:statewide or s.district_group_id in (:district_group_ids) or s.district_id in (:district_ids) or s.school_group_id in (:school_group_ids) or s.id in (:school_ids))
        order by e.completed_at desc
        limit 1

      findAllForAssessment: >-
        select e.id,
          e.type_id,
          e.grade_code,
          e.iep,
          e.lep,
          e.section504,
          e.economic_disadvantage,
          e.migrant_status,
          e.completeness_code,
          e.administration_condition_code,
          e.school_year,
          e.session_id,
          e.completed_at,
          e.scale_score,
          e.scale_score_std_err,
          e.performance_level,
          a.claim1_score_code,
          e.claim1_category,
          e.claim1_scale_score,
          e.claim1_scale_score_std_err,
          a.claim2_score_code,
          e.claim2_category,
          e.claim2_scale_score,
          e.claim2_scale_score_std_err,
          a.claim3_score_code,
          e.claim3_category,
          e.claim3_scale_score,
          e.claim3_scale_score_std_err,
          a.claim4_score_code,
          e.claim4_category,
          e.claim4_scale_score,
          e.claim4_scale_score_std_err,
          e.available_accommodation_codes,
          st.id as student_id,
          st.ssid as student_ssid,
          st.last_or_surname as student_last_name,
          st.first_name as student_first_name,
          st.gender_code as student_gender_code,
          s.id as school_id,
          s.name as school_name
        from exam e
          join student st on e.student_id=st.id
          join asmt a on e.asmt_id=a.id
          join school s on e.school_id=s.id
          join school isch on st.inferred_school_id = isch.id
        where e.asmt_id=:assessment_id
        and a.grade_id=:grade_id
        and e.school_year=:school_year
        and (
          (
            e.school_id=:school_id
            and (1=:statewide or s.district_group_id in (:district_group_ids) or s.district_id in (:district_ids) or s.school_group_id in (:school_group_ids) or e.school_id in (:school_ids))
          )
          or
          (
            1 = :allow_transfer_access
            and isch.id = :school_id
            and (1=:statewide or isch.district_group_id in (:district_group_ids) or isch.district_id in (:district_ids) or isch.school_group_id in (:school_group_ids) or isch.id in (:school_ids))
          )
        )

      item:
        findAllExamItemScoresForAssessment:
          select
            ei.exam_id,
            ei.item_id,
            ei.score,
            ei.position,
            ei.response
          from exam_item ei
            join exam e on ei.exam_id=e.id
            join asmt a on e.asmt_id=a.id
            join school s on e.school_id=s.id
            join student st on st.id=e.student_id
            join school isch on st.inferred_school_id = isch.id
          where e.asmt_id=:assessment_id
          and e.school_year=:school_year
          and a.grade_id=:grade_id
          and (
            (
              e.school_id=:school_id
              and (1=:statewide or s.district_group_id in (:district_group_ids) or s.district_id in (:district_ids) or s.school_group_id in (:school_group_ids) or e.school_id in (:school_ids))
            )
            or
            (
              1 = :allow_transfer_access
              and isch.id = :school_id
              and (1=:statewide or isch.district_group_id in (:district_group_ids) or isch.district_id in (:district_ids) or isch.school_group_id in (:school_group_ids) or isch.id in (:school_ids))
            )
          )

  assessment:
    grade:
      findAllForSchool: >-
        select id, code
        from grade g where exists (
            select a.grade_id
            from exam e
              join asmt a on e.asmt_id=a.id
              join school s on e.school_id=s.id
            where e.school_id=:school_id
            and (1=:statewide or s.district_group_id in (:district_group_ids) or s.district_id in (:district_ids) or s.school_group_id in (:school_group_ids) or e.school_id in (:school_ids))
            and g.id=a.grade_id
        )

    item:
      findAllForAssessment: >-
        select i.id,
          i.natural_id,
          i.position,
          i.difficulty_code,
          i.max_points,
          i.claim_code,
          i.target_code,
          i.target_id,
          i.dok_level_subject_id,
          i.math_practice_code,
          i.allow_calc,
          i.common_core_standard_ids
        from item i
        where i.asmt_id=:assessment_id

      findAllForExam: >-
        select i.id,
          i.natural_id,
          i.position,
          i.difficulty_code,
          i.max_points,
          i.claim_code,
          i.target_code,
          i.target_id,
          i.dok_level_subject_id,
          i.math_practice_code,
          i.allow_calc,
          i.common_core_standard_ids
        from item i
          join exam e on e.asmt_id = i.asmt_id
        where e.id=:exam_id

  student:
    findOneById: >-
      select id,
        ssid,
        first_name,
        last_or_surname
      from student s
      where s.id=:studentId
       and exists (select 1 from exam e where e.student_id = s.id)

  school:
    findAllForNameContainingText: >-
      select name, id
      from school
      where (1=:statewide or district_group_id in (:district_group_ids) or district_id in (:district_ids) or school_group_id in (:school_group_ids) or id in (:school_ids))
      and name like :text
      limit :limit

  organization:
    school:
      findAll: >-
        select s.name,
          s.id,
          s.school_group_id,
          d.id as district_id,
          s.district_group_id,
          d.name as district_name
        from school s
          join district d on s.district_id = d.id
        where (1=:statewide or s.district_group_id in (:district_group_ids) or s.district_id in (:district_ids) or s.school_group_id in (:school_group_ids) or s.id in (:school_ids))

    schoolGroup:
      findAll: >-
        select distinct sg.id,
          sg.name,
          s.district_group_id,
          s.district_id
        from school_group sg
          join school s on s.school_group_id = sg.id
        where (1=:statewide or s.district_group_id in (:district_group_ids) or s.district_id in (:district_ids) or s.school_group_id in (:school_group_ids) or s.id in (:school_ids))

    district:
      findAll: >-
        select distinct d.id,
          d.name,
          s.district_group_id
        from district d
          join school s on s.district_id = d.id
        where (1=:statewide or s.district_group_id in (:district_group_ids) or s.district_id in (:district_ids) or s.school_group_id in (:school_group_ids) or s.id in (:school_ids))

    districtGroup:
      findAll: >-
        select distinct dg.id,
          dg.name
        from district_group dg
          join school s on s.district_group_id = dg.id
        where (1=:statewide or s.district_group_id in (:district_group_ids) or s.district_id in (:district_ids) or s.school_group_id in (:school_group_ids) or s.id in (:school_ids))

  ethnicity:
    findAll: >-
      select id, code
      from ethnicity

    findAllCodes: >-
      select code
      from ethnicity

    findEthnicityCodesByStudentIds: >-
      select student_id, ethnicity_code
      from student_ethnicity
      where student_id in (:student_ids)

    findEthnicityCodesByStudentId: >-
      select e.code
      from student_ethnicity se
        join ethnicity e on se.ethnicity_id=e.id
      where se.student_id=:student_id

  status:
    readTest: >-
      SELECT code FROM asmt_type

  target:
    findOneById: >-
      SELECT id, description FROM target where id=:target_id

  commonCoreStandard:
    findAllByItemId: >-
      select ccs.id, ccs.natural_id, ccs.description
      from common_core_standard ccs
        join item_common_core_standard iccs on iccs.common_core_standard_id = ccs.id
      where iccs.item_id = :item_id
