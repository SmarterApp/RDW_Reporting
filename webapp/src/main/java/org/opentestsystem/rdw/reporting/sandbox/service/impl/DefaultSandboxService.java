package org.opentestsystem.rdw.reporting.sandbox.service.impl;

import org.opentestsystem.rdw.multitenant.TenantProperties;
import org.opentestsystem.rdw.reporting.sandbox.Sandbox;
import org.opentestsystem.rdw.reporting.sandbox.SandboxRole;
import org.opentestsystem.rdw.reporting.sandbox.service.SandboxRoleService;
import org.opentestsystem.rdw.reporting.sandbox.service.SandboxService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.*;
import java.util.stream.Collectors;

@Service
public class DefaultSandboxService implements SandboxService {
    private static final Logger logger = LoggerFactory.getLogger(DefaultSandboxService.class);

    private final TenantProperties tenantProperties;
    private final SandboxRoleService roleService;

    @Autowired
    public DefaultSandboxService(final TenantProperties tenantProperties,
                                 final SandboxRoleService roleService) {
        logger.info("Found {} tenants.", tenantProperties.getTenants().size());
        this.tenantProperties = tenantProperties;
        this.roleService = roleService;
    }

    @Override
    public Set<Sandbox> getSandboxes() {
        final Map<String, List<SandboxRole>> roleMap = this.roleService.findAll();
        return this.tenantProperties.findSandboxes().stream()
                .map(tenant -> Sandbox.builder()
                        .key(tenant.getKey())
                        .label(tenant.getName())
                        .roles(roleMap.get(tenant.getKey()))
                        .build())
                .collect(Collectors.toSet());
    }
}
