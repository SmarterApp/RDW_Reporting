package org.opentestsystem.rdw.reporting.status;

import org.opentestsystem.rdw.common.status.AbstractStatusIndicator;
import org.opentestsystem.rdw.common.status.DiagnosticLevel;
import org.opentestsystem.rdw.common.status.Rating;
import org.opentestsystem.rdw.common.status.Status;
import org.opentestsystem.rdw.reporting.common.report.client.Request;
import org.opentestsystem.rdw.reporting.common.report.client.WkhtmltopdfWebServiceClient;
import org.springframework.stereotype.Component;

import java.nio.charset.Charset;

/**
 * {@link org.opentestsystem.rdw.common.status.StatusIndicator} that provides status of the wkhtmltopdf service.
 */
@Component
public class WkhtmltopdfStatusIndicator extends AbstractStatusIndicator {

    private final WkhtmltopdfWebServiceClient client;
    private final Charset utf8 = Charset.forName("UTF-8");

    public WkhtmltopdfStatusIndicator(final WkhtmltopdfWebServiceClient client) {
        this.client = client;
    }

    @Override
    protected boolean doLevelCheck(final int level) {
        return DiagnosticLevel.ExternalDependencies.isLessThanOrEqualTo(level);
    }

    @Override
    public String name() {
        return "wkhtmltopdf-service";
    }

    @Override
    protected void doStatusCheck(final Status.Builder builder, final int level) {
        final byte[] html = "<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"utf-8\"><title>Status Check</title></head><body></body></html>".getBytes(utf8);
        final byte[] pdf = responseTime(builder, 500, () -> {
            try {
                return client.toPdf(new Request(html));
            } catch (final Exception e) {
                builder.detail("message", e.getMessage());
                return null;
            }
        });
        if (pdf == null) {
            builder.rating(Rating.Failed);
        }
    }
}
