package org.opentestsystem.rdw.reporting.search.exam.student;

import org.opentestsystem.rdw.reporting.exam.AssessmentItem;
import org.opentestsystem.rdw.reporting.exam.ExamItem;
import org.opentestsystem.rdw.reporting.search.assessment.AssessmentItemRepository;
import org.opentestsystem.rdw.reporting.search.exam.GroupExamItemScores;
import org.opentestsystem.rdw.reporting.security.User;
import org.springframework.stereotype.Service;

import javax.validation.constraints.NotNull;
import java.util.List;
import java.util.NoSuchElementException;

/**
 * Default implementation of an ExamItemService.
 */
@Service
class ReportingExamItemService implements ExamItemService {

    private final ExamItemRepository examItemRepository;
    private final AssessmentItemRepository assessmentItemRepository;

    public ReportingExamItemService(final ExamItemRepository examItemRepository,
                                    final AssessmentItemRepository assessmentItemRepository) {
        this.examItemRepository = examItemRepository;
        this.assessmentItemRepository = assessmentItemRepository;
    }

    @Override
    public GroupExamItemScores getExamItems(@NotNull final User user, final long examId) {
        final List<ExamItem> examItems = examItemRepository.findAllByExamId(user.getPermissionsById(), user.getGroupsById().keySet(), examId);
        final List<AssessmentItem> assessmentItems = assessmentItemRepository.findAllForExam(examId);

        if(examItems.isEmpty() || assessmentItems.isEmpty()) {
            throw new NoSuchElementException(String.format("No exam items found for exam ID: %s", examId));
        }

        return new GroupExamItemScores(assessmentItems, examItems);
    }
}
