package org.opentestsystem.rdw.reporting.organization;

import com.google.common.collect.ImmutableSet;
import org.opentestsystem.rdw.reporting.organization.model.District;
import org.opentestsystem.rdw.reporting.organization.model.School;
import org.opentestsystem.rdw.reporting.security.User;
import org.opentestsystem.rdw.security.Permission;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import javax.validation.constraints.NotNull;
import java.util.Set;

import static org.opentestsystem.rdw.reporting.common.security.ReportingRoles.IndividualPiiRead;

@Service()
class DefaultOrganizationService implements OrganizationService {

    private final OrganizationRepository repository;

    @Autowired()
    public DefaultOrganizationService(@NotNull final OrganizationRepository repository) {
        this.repository = repository;
    }

    @Override
    public Set<School> getSchools(@NotNull final User user) {
        final Permission permission = user.getPermissionsById().get(IndividualPiiRead);
        if (permission == null) {
            return ImmutableSet.of();
        }
        return ImmutableSet.copyOf(repository.findAllSchools(permission.getScope()));
    }

    @Override
    public Set<District> getDistricts(final User user) {
        final Permission permission = user.getPermissionsById().get(IndividualPiiRead);
        if (permission == null) {
            return ImmutableSet.of();
        }

        return ImmutableSet.copyOf(repository.findAllDistricts(permission.getScope()));
    }

}
