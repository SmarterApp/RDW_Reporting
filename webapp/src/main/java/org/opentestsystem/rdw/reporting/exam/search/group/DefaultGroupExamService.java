package org.opentestsystem.rdw.reporting.exam.search.group;

import com.google.common.collect.ImmutableList;
import org.opentestsystem.rdw.reporting.exam.Assessment;
import org.opentestsystem.rdw.reporting.exam.Exam;
import org.opentestsystem.rdw.reporting.exam.GroupExam;
import org.opentestsystem.rdw.reporting.security.GroupSecurityContext;
import org.opentestsystem.rdw.reporting.security.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import javax.validation.constraints.NotNull;
import java.util.List;
import java.util.Optional;

@Service
public class DefaultGroupExamService implements GroupExamService {

    private final GroupExamRepository groupExamRepository;

    @Autowired
    public DefaultGroupExamService(@NotNull final GroupExamRepository groupExamRepository) {
        this.groupExamRepository = groupExamRepository;
    }

    public Optional<GroupExam> getLatestAssessment(@NotNull final User user, final long groupId, final long schoolYear) {
        final GroupSecurityContext securityContext = new GroupSecurityContext(user, groupId, "GROUP_PII_READ");
        final GroupExam groupExam = groupExamRepository.findLatest(securityContext, schoolYear);
        if (groupExam == null) {
            return Optional.empty();
        }
        final List<Exam> exams = groupExamRepository.findAllForAssessment(securityContext, groupExam.getAssessment().getId(), schoolYear);
        return Optional.of(new GroupExam(groupExam.getAssessment(), exams));
    }

    public List<Assessment> getAllAssessments(@NotNull final User user, final long groupId, final long schoolYear) {
        final GroupSecurityContext securityContext = new GroupSecurityContext(user, groupId, "GROUP_PII_READ");
        return ImmutableList.copyOf(groupExamRepository.findAll(securityContext, schoolYear));
    }

    public List<Exam> getExams(@NotNull final User user, final long groupId, final long assessmentId, final long schoolYear) {
        final GroupSecurityContext securityContext = new GroupSecurityContext(user, groupId, "GROUP_PII_READ");
        return ImmutableList.copyOf(groupExamRepository.findAllForAssessment(securityContext, assessmentId, schoolYear));
    }

}
