package org.opentestsystem.rdw.reporting.security.session;

import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.session.data.redis.config.ConfigureRedisAction;

/**
 * This class allows spring-redis to work in a secured redis environment
 */
@Configuration
@ConditionalOnProperty(name = "spring.session.store-type", havingValue = "redis")
public class SecuredRedisConfiguration {

    /**
     * This bean informs spring-redis to not configure session expiration and deletion keyspace events.
     * In a secured environment, these events must be configured manually by a redis admin.
     * <p>
     * Without this instruction, spring-redis will try to configure redis to dispatch these events and cause a startup
     * exception.
     *
     * @return ConfigureRedisAction.NO_OP
     */
    @Bean
    public static ConfigureRedisAction configureRedisAction() {
        return ConfigureRedisAction.NO_OP;
    }

}
