package org.opentestsystem.rdw.reporting.instructionalresource;

import com.google.common.collect.MultimapBuilder;
import com.google.common.collect.Multimaps;
import com.google.common.collect.Ordering;
import com.google.common.collect.SortedSetMultimap;
import org.opentestsystem.rdw.reporting.instructionalresource.InstructionalResource.OrganizationLevel;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Arrays;
import java.util.Map;
import java.util.SortedSet;

/**
 * This service uses a repository to retrieve Instructional Resources.
 */
@Service
class DefaultInstructionalResourceService implements InstructionalResourceService {
    static final Ordering<InstructionalResource> IROrdering = Ordering
            .explicit(Arrays.asList(OrganizationLevel.values()))
            .onResultOf(InstructionalResource::getOrganizationLevel);

    private final InstructionalResourceRepository repository;

    @Autowired
    public DefaultInstructionalResourceService(final InstructionalResourceRepository repository) {
        this.repository = repository;
    }

    @Override
    public Map<Integer, SortedSet<InstructionalResource>> findByAssessmentAndSchool(final long assessmentId, final long schoolId) {
        final SortedSetMultimap<Integer, InstructionalResource> multimap = MultimapBuilder.hashKeys()
                .treeSetValues(IROrdering)
                .build();
        repository.findByAssessmentAndSchool(assessmentId, schoolId)
                .forEach(instructionalResource -> multimap.put(instructionalResource.getPerformanceLevel(), instructionalResource));
        return Multimaps.asMap(multimap);
    }
}
