package org.opentestsystem.rdw.reporting.instructionalresource;

import com.google.common.collect.Ordering;
import org.opentestsystem.rdw.reporting.configuration.ApplicationProperties;
import org.opentestsystem.rdw.reporting.instructionalresource.InstructionalResource.OrganizationLevel;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

import static org.opentestsystem.rdw.reporting.instructionalresource.InstructionalResource.OrganizationLevel.State;

/**
 * This service uses a repository to retrieve Instructional Resources.
 */
@Service
class DefaultInstructionalResourceService implements InstructionalResourceService {
    private static final Ordering<InstructionalResource> IROrdering = Ordering
            .explicit(Arrays.asList(OrganizationLevel.values()))
            .onResultOf(InstructionalResource::getOrganizationLevel)
            .compound(Ordering.natural()
                    .onResultOf(InstructionalResource::getPerformanceLevel));

    private final InstructionalResourceRepository repository;
    private final ApplicationProperties applicationProperties;

    @Autowired
    public DefaultInstructionalResourceService(final InstructionalResourceRepository repository, final ApplicationProperties applicationProperties) {
        this.repository = repository;
        this.applicationProperties = applicationProperties;
    }

    @Override
    public List<InstructionalResource> findByAssessmentAndSchool(final long assessmentId, final long schoolId) {
        return IROrdering.sortedCopy(
                repository.findByAssessmentAndSchool(assessmentId, schoolId).stream()
                        .map(instructionalResource -> setStateName(instructionalResource))
                        .collect(Collectors.toList())
        );
    }

    private InstructionalResource setStateName(final InstructionalResource resource) {
        return State.equals(resource.getOrganizationLevel())
                ? InstructionalResource.builder().copy(resource).organizationName(applicationProperties.getState().getName()).build()
                : resource;
    }
}
