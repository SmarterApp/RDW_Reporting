package org.opentestsystem.rdw.reporting.report.student;

import org.opentestsystem.rdw.reporting.common.report.ExamReportAssessmentType;
import org.opentestsystem.rdw.reporting.common.report.PdfOptions;
import org.springframework.core.MethodParameter;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.support.WebDataBinderFactory;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.method.support.HandlerMethodArgumentResolver;
import org.springframework.web.method.support.ModelAndViewContainer;

import java.util.Map;

import static org.opentestsystem.rdw.reporting.web.support.WebRequests.getPathVariables;

class StudentExamReportPdfRequestArgumentResolver implements HandlerMethodArgumentResolver {

    @Override
    public boolean supportsParameter(final MethodParameter parameter) {
        return parameter.getParameterType().equals(StudentExamReportPdfRequest.class);
    }

    @Override
    public Object resolveArgument(
            final MethodParameter parameter,
            final ModelAndViewContainer mavContainer,
            final NativeWebRequest request,
            final WebDataBinderFactory binderFactory) throws Exception {

        final Map<String, String> pathVariables = getPathVariables(request);
        return StudentExamReportPdfRequest.builder()
                .assessmentType(ExamReportAssessmentType.valueOf(request.getParameter("assessmentType")))
                .schoolYear(Integer.valueOf(request.getParameter("schoolYear")))
                .language(StringUtils.parseLocaleString(request.getParameter("language")))
                .options(new PdfOptions(Boolean.valueOf(request.getParameter("grayscale"))))
                .studentId(Long.valueOf(pathVariables.get("studentId")))
                .build();
    }

}