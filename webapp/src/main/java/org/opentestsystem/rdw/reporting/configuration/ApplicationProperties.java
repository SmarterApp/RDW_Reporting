package org.opentestsystem.rdw.reporting.configuration;

import org.springframework.boot.context.properties.ConfigurationProperties;

import java.util.ArrayList;
import java.util.List;

/**
 *  Reporting Web Application Properties
 */
@ConfigurationProperties(prefix = "app")
public class ApplicationProperties {

    private IrisProperties iris = new IrisProperties();
    private AnalyticsProperties analytics = new AnalyticsProperties();
    private ReportServiceProperties reportservice = new ReportServiceProperties();
    private String adminWebappUrl;
    private ExternalLinksProperties externalLinks = new ExternalLinksProperties();
    private int minItemDataYear;
    private List<String> uiLanguages = new ArrayList<>();
    private List<String> reportLanguages = new ArrayList<>();

    /**
     * @return Iris configuration properties
     */
    public IrisProperties getIris() {
        return iris;
    }

    /**
     * @return Google Analytics properties
     */
    public AnalyticsProperties getAnalytics() {
        return analytics;
    }

    /**
     * @return Report processor properties
     */
    public ReportServiceProperties getReportservice() {
        return reportservice;
    }

    /**
     * @return The reporting admin url
     */
    public String getAdminWebappUrl() {
        return adminWebappUrl;
    }

    public void setAdminWebappUrl(final String adminWebappUrl) {
        this.adminWebappUrl = adminWebappUrl;
    }

    /**
     * @return External link properties
     */
    public ExternalLinksProperties getExternalLinks() {
        return externalLinks;
    }

    /**
     * @return The minimum year with data
     */
    public int getMinItemDataYear() {
        return minItemDataYear;
    }

    public void setMinItemDataYear(final int minItemDataYear) {
        this.minItemDataYear = minItemDataYear;
    }

    /**
     * @return The available webapp UI languages in addition to English ("en")
     */
    public List<String> getUiLanguages() {
        return uiLanguages;
    }

    /**
     * @return The available report generation languages in addition to English
     */
    public List<String> getReportLanguages() {
        return reportLanguages;
    }

    public static class IrisProperties {
        private String url;
        private String vendorId;

        /**
         * @return The iris server URL
         */
        public String getUrl() {
            return url;
        }

        public void setUrl(final String url) {
            this.url = url;
        }

        /**
         * @return The iris vendor id
         */
        public String getVendorId() {
            return vendorId;
        }

        public void setVendorId(final String vendorId) {
            this.vendorId = vendorId;
        }
    }

    public static class AnalyticsProperties {
        private String trackingId;

        /**
         * @return The Google Analytics tracking id
         */
        public String getTrackingId() {
            return trackingId;
        }

        public void setTrackingId(final String trackingId) {
            this.trackingId = trackingId;
        }
    }

    public static class ReportServiceProperties {
        private String url;

        /**
         * @return The report processor url
         */
        public String getUrl() {
            return url;
        }

        public void setUrl(final String url) {
            this.url = url;
        }
    }

    public static class ExternalLinksProperties {
        private String interpretiveGuide;
        private String userGuide;

        /**
         * @return The interpretive guide url
         */
        public String getInterpretiveGuide() {
            return interpretiveGuide;
        }

        public void setInterpretiveGuide(final String interpretiveGuide) {
            this.interpretiveGuide = interpretiveGuide;
        }

        /**
         * @return The user guide url
         */
        public String getUserGuide() {
            return userGuide;
        }

        public void setUserGuide(final String userGuide) {
            this.userGuide = userGuide;
        }
    }
}
