package org.opentestsystem.rdw.reporting.sandbox;

import org.opentestsystem.rdw.multitenant.TenantProperties;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.HashSet;
import java.util.Set;

@Service
public class DefaultSandboxService implements SandboxService {
    private static final Logger logger = LoggerFactory.getLogger(DefaultSandboxService.class);

    private final TenantProperties tenantProperties;

    @Autowired
    public DefaultSandboxService(TenantProperties tenantProperties) {
        logger.info("Found {} tenants.", tenantProperties.getTenants().size());
        this.tenantProperties = tenantProperties;
    }

    @Override
    public Set<Sandbox> getSandboxes() {
        return getMockSandboxSet();
    }

    /**
     * @return temp collection of sandboxes that is required for sandbox login
     */
    public static Set<Sandbox> getMockSandboxSet() {
        Set<SandboxRole> caSandboxRoles = new HashSet<>();
        SandboxRole caSandboxRole_thg4 = SandboxRole.builder()
                .id("teacher_harborside_g4")
                .label("Teacher - Harborside - Grade 4")
                .build();
        caSandboxRoles.add(caSandboxRole_thg4);
        SandboxRole caSandboxRole_thg5 = SandboxRole.builder()
                .id("teacher_harborside_g5")
                .label("Teacher - Harborside - Grade 5")
                .build();
        caSandboxRoles.add(caSandboxRole_thg5);
        SandboxRole caSandboxRole_thg6 = SandboxRole.builder()
                .id("teacher_harborside_g5")
                .label("Teacher - Harborside - Grade 6")
                .build();
        caSandboxRoles.add(caSandboxRole_thg6);
        SandboxRole caSandboxRole_da_sw = SandboxRole.builder()
                .id("district_admin_sweetwater")
                .label("District Administrator - Sweetwater")
                .build();
        caSandboxRoles.add(caSandboxRole_da_sw);
        SandboxRole caSandboxRole_da_h = SandboxRole.builder()
                .id("district_admin_harborside")
                .label("District Administrator - Harborside")
                .build();
        caSandboxRoles.add(caSandboxRole_da_h);

        Set<Sandbox> sandboxes = new HashSet<>();
        Sandbox sandboxCa = Sandbox.builder()
                .key("ca_19091")
                .label("California Sandbox")
                .roles(caSandboxRoles)
                .build();
        sandboxes.add(sandboxCa);


        Set<SandboxRole> miSandboxRoles = new HashSet<>();
        SandboxRole miSandboxRole_tg6 = SandboxRole.builder()
                .id("teacher_rosebank_g6")
                .label("Teacher - Rosebank - Grade 6")
                .build();
        miSandboxRoles.add(miSandboxRole_tg6);
        SandboxRole miSandboxRole_tg5 = SandboxRole.builder()
                .id("teacher_rosebank_g7")
                .label("Teacher - Rosebank - Grade 7")
                .build();
        miSandboxRoles.add(miSandboxRole_tg5);
        SandboxRole miSandboxRole_tg8 = SandboxRole.builder()
                .id("teacher_rosebank_g8")
                .label("Teacher - Rosebank - Grade 8")
                .build();
        miSandboxRoles.add(miSandboxRole_tg8);
        SandboxRole miSandboxRole_da_d = SandboxRole.builder()
                .id("district_admin_detroit")
                .label("District Administrator - Detroit")
                .build();
        miSandboxRoles.add(miSandboxRole_da_d);
        SandboxRole miSandboxRole_da_l = SandboxRole.builder()
                .id("district_admin_landsing")
                .label("District Administrator - Landsing")
                .build();
        miSandboxRoles.add(miSandboxRole_da_l);
        SandboxRole miSandboxRole_da_gr = SandboxRole.builder()
                .id("school_admin_grand_rapids")
                .label("District Administrator -  Grand Rapids")
                .build();
        miSandboxRoles.add(miSandboxRole_da_gr);
        Sandbox sandboxMi = Sandbox.builder()
                .key("mi_42582")
                .label("Michigan Sandbox")
                .roles(miSandboxRoles)
                .build();
        sandboxes.add(sandboxMi);

        return sandboxes;
    }
}
