package org.opentestsystem.rdw.reporting.search.exam.student;

import org.opentestsystem.rdw.reporting.common.model.Student;
import org.opentestsystem.rdw.reporting.security.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import javax.validation.constraints.NotNull;
import java.util.List;
import java.util.NoSuchElementException;

@Service
class DefaultStudentExamService implements StudentExamService {

    private final StudentRepository studentRepository;
    private final StudentExamRepository examRepository;

    @Autowired
    DefaultStudentExamService(
            final StudentRepository studentRepository,
            final StudentExamRepository examRepository) {
        this.studentRepository = studentRepository;
        this.examRepository = examRepository;
    }

    @Override
    public StudentExamHistory getExams(@NotNull final User user, final long studentId) {

        final Student student = studentRepository.findOneById(studentId);
        if (student == null) {
            throw new NoSuchElementException(String.format("No student with ID: %s", studentId));
        }

        // TODO: access the proper role based on changes to accommodate both PII and PII_GROUP
        final List<StudentHistoryExamWrapper> exams = examRepository.findAllForStudent(
                user.getPermissionsById().get("GROUP_PII_READ").getScope(),
                student.getId()
        );

        return new StudentExamHistory(student, exams);
    }

    @Override
    public Student findStudentWithExams(@NotNull final User user, final String studentSsid) {
        // TODO: access the proper role based on changes to accommodate both PII and PII_GROUP
        final Student student = examRepository.findStudentWithExams(
                user.getPermissionsById().get("GROUP_PII_READ").getScope(),
                studentSsid
        );

        if (student == null) {
            throw new NoSuchElementException(String.format("No student with SSID: %s", studentSsid));
        }

        return student;
    }

}
