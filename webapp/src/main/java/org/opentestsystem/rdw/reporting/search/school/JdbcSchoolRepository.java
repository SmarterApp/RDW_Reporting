package org.opentestsystem.rdw.reporting.search.school;

import com.google.common.collect.ImmutableMap;
import org.opentestsystem.rdw.reporting.exam.Organization;
import org.opentestsystem.rdw.reporting.security.PermissionScope;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;

import javax.validation.constraints.NotNull;
import java.util.List;

import static org.opentestsystem.rdw.reporting.jdbc.QueryUtils.createMatcher;
import static org.opentestsystem.rdw.reporting.jdbc.QueryUtils.getSecurityParameters;

@Repository("schoolGradeJdbcSchoolRepository")
class JdbcSchoolRepository implements SchoolRepository {

    private final NamedParameterJdbcTemplate template;

    @Value("${sql.school.findAllForNameContainingText}")
    private String findAllForNameContainingTextQuery;

    @Value("${app.search.schoolsByName.limit}")
    private int findAllForNameContainingTextLimit;

    @Autowired
    JdbcSchoolRepository(final NamedParameterJdbcTemplate template) {
        this.template = template;
    }

    @Override
    public List<Organization> findAllForNameContainingText(
            @NotNull final PermissionScope permissionScope,
            @NotNull final String text) {
        return template.query(
                findAllForNameContainingTextQuery,
                ImmutableMap.<String, Object>builder()
                        .putAll(getSecurityParameters(permissionScope))
                        .put("text", createMatcher(text))
                        .put("limit", findAllForNameContainingTextLimit)
                        .build(),
                (row, index) -> new Organization(
                        row.getLong("id"),
                        row.getString("name")
                )
        );
    }
}
