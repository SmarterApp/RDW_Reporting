package org.opentestsystem.rdw.reporting.web;

import org.opentestsystem.rdw.reporting.common.configuration.ReportingSystemProperties;
import org.opentestsystem.rdw.reporting.common.security.User;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.autoconfigure.web.ErrorController;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import static org.apache.commons.lang3.StringUtils.isBlank;

@Controller
public class ViewController implements ErrorController {

    private static final String Index = "forward:/index.html";
    private final ReportingSystemProperties reportingSystemProperties;

    public ViewController(
        @Qualifier("reportingSystemPropertiesResolver") final ReportingSystemProperties reportingSystemProperties) {

        this.reportingSystemProperties = reportingSystemProperties;
    }

    /**
     * Public routes
     *
     * TODO add /landing here and remove it and access denied from the static html page resources
     */
    @RequestMapping(value = {
            "/error",
            "/sandbox-login"
    })
    public String sandboxLogin() {
        return Index;
    }

    @RequestMapping("/access-denied")
    public String accessDenied() {
        final String accessDeniedUrl = this.reportingSystemProperties.getAccessDeniedUrl();
        if (!isBlank(accessDeniedUrl)) {
            return accessDeniedUrl;
        }
        return Index;
    }

    /**
     * Protected routes
     */
    @RequestMapping("/{path:^(?!api|assets|iris|error|.*\\..*).+}/**")
    public String forward(@AuthenticationPrincipal final User user) {
        return index(user);
    }

    @RequestMapping("/")
    public String index(@AuthenticationPrincipal final User user) {
        final String landingPageUrl = this.reportingSystemProperties.getLandingPageUrl();
        if (user == null && !isBlank(landingPageUrl)) {
            return landingPageUrl;
        }
        return Index;
    }

    @Override
    public String getErrorPath() {
        return "/error";
    }

}
