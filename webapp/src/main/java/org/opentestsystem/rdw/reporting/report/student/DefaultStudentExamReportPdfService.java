package org.opentestsystem.rdw.reporting.report.student;

import org.opentestsystem.rdw.reporting.common.report.AbstractExamReport;
import org.opentestsystem.rdw.reporting.common.report.ExamReportAssessmentType;
import org.opentestsystem.rdw.reporting.common.report.ExamReportMessage;
import org.opentestsystem.rdw.reporting.common.report.ExamReportRepository;
import org.opentestsystem.rdw.reporting.common.report.iab.IabReportRepository;
import org.opentestsystem.rdw.reporting.common.report.ica.IcaReportRepository;
import org.opentestsystem.rdw.reporting.security.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import javax.validation.constraints.NotNull;
import java.util.NoSuchElementException;

@Service
class DefaultStudentExamReportPdfService implements StudentExamReportPdfService {

    private final IabReportRepository iabReportRepository;
    private final IcaReportRepository icaReportRepository;

    @Autowired
    DefaultStudentExamReportPdfService(
            final IabReportRepository iabReportRepository,
            final IcaReportRepository icaReportRepository) {
        this.iabReportRepository = iabReportRepository;
        this.icaReportRepository = icaReportRepository;
    }

    @Override
    public ExamReportMessage getExamReport(@NotNull final User user, @NotNull final StudentExamReportPdfRequest request) {

        final ExamReportRepository repository = request.getAssessmentType() == ExamReportAssessmentType.IAB
                ? iabReportRepository
                : icaReportRepository;

        final AbstractExamReport report = repository
                .findOneByStudentIdAndSchoolYear(
                        user.getPermissionsById(),
                        user.getGroupsById().keySet(),
                        request.getStudentId(),
                        request.getSchoolYear(),
                        (int) request.getSubject().id());

        if (report == null) {
            throw new NoSuchElementException("No exams found for report");
        }

        return new ExamReportMessage(report, request);
    }

}
