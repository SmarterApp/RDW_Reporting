package org.opentestsystem.rdw.reporting.search.exam.group;

import com.google.common.collect.ImmutableList;
import org.opentestsystem.rdw.reporting.exam.Assessment;
import org.opentestsystem.rdw.reporting.exam.Exam;
import org.opentestsystem.rdw.reporting.exam.GroupAssessment;
import org.opentestsystem.rdw.reporting.security.GroupSecurityContext;
import org.opentestsystem.rdw.reporting.security.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import javax.validation.constraints.NotNull;
import java.util.List;
import java.util.Optional;

@Service
public class DefaultGroupAssessmentService implements GroupAssessmentService {

    private final GroupAssessmentRepository repository;
    private final GroupExamService examService;

    @Autowired
    public DefaultGroupAssessmentService(
            @NotNull final GroupAssessmentRepository repository,
            @NotNull final GroupExamService examService) {
        this.repository = repository;
        this.examService = examService;
    }

    public Optional<GroupAssessment> getLatestAssessment(@NotNull final User user, final long groupId, final long schoolYear) {
        final GroupSecurityContext securityContext = new GroupSecurityContext(user, groupId, "GROUP_PII_READ");
        final Assessment assessment = repository.findLatest(securityContext, schoolYear);
        if (assessment == null) {
            return Optional.empty();
        }
        final List<Exam> exams = examService.getExams(user, groupId, assessment.getId(), schoolYear);
        return Optional.of(new GroupAssessment(assessment, exams));
    }

    public List<Assessment> getAllAssessments(@NotNull final User user, final long groupId, final long schoolYear) {
        final GroupSecurityContext securityContext = new GroupSecurityContext(user, groupId, "GROUP_PII_READ");
        return ImmutableList.copyOf(repository.findAll(securityContext, schoolYear));
    }


}
