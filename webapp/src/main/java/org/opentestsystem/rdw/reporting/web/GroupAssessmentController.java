package org.opentestsystem.rdw.reporting.web;

import org.opentestsystem.rdw.reporting.assessment.Assessment;
import org.opentestsystem.rdw.reporting.assessment.GroupAssessmentService;
import org.opentestsystem.rdw.reporting.exam.Exam;
import org.opentestsystem.rdw.reporting.exam.GroupExam;
import org.opentestsystem.rdw.reporting.security.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import javax.validation.constraints.NotNull;
import java.util.List;
import java.util.NoSuchElementException;

@RestController
public class GroupAssessmentController {

    private final GroupAssessmentService service;

    @Autowired
    public GroupAssessmentController(@NotNull final GroupAssessmentService service) {
        this.service = service;
    }

    @GetMapping("/api/groups/{groupId}/latestassessment")
    public GroupExam getLatestGroupAssessment(
            @AuthenticationPrincipal final User user,
            @PathVariable final long groupId,
            @RequestParam("schoolYear") final long schoolYear) {

        return service.getLatestAssessment(user, groupId, schoolYear)
                .orElseThrow(NoSuchElementException::new);
    }

    @GetMapping("/api/groups/{groupId}/assessments")
    public List<Assessment> getGroupAssessments(
            @AuthenticationPrincipal final User user,
            @PathVariable final long groupId,
            @RequestParam("schoolYear") final long schoolYear) {

        return service.getAllAssessments(user, groupId, schoolYear);
    }

    @GetMapping("/api/groups/{groupId}/assessments/{assessmentId}/exams")
    public List<Exam> getGroupIabs(
            @AuthenticationPrincipal final User user,
            @PathVariable final long groupId,
            @PathVariable final long assessmentId,
            @RequestParam("schoolYear") final long schoolYear) {

        return service.getExams(user, groupId, assessmentId, schoolYear);
    }

}
