package org.opentestsystem.rdw.reporting.security;

import org.opentestsystem.rdw.reporting.common.security.User;
import org.springframework.security.core.Authentication;
import org.springframework.security.web.authentication.logout.LogoutSuccessHandler;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;

class DefaultLogoutSuccessHandler implements LogoutSuccessHandler {

    private final String anonymousLogoutSuccessUrl;

    DefaultLogoutSuccessHandler(final String anonymousLogoutSuccessUrl) {
        this.anonymousLogoutSuccessUrl = anonymousLogoutSuccessUrl;
    }

    @Override
    public void onLogoutSuccess(
            final HttpServletRequest request,
            final HttpServletResponse response,
            final Authentication authentication) throws IOException {

        response.setStatus(HttpServletResponse.SC_OK);

        // gracefully handles logout when the user is not authenticated
        // either because they never logged in or their session expired
        if (authentication == null || !(authentication.getPrincipal() instanceof User)) {
            response.sendRedirect(anonymousLogoutSuccessUrl);
            return;
        }

        final User user = (User) authentication.getPrincipal();
        response.sendRedirect(user.getTenant().getLogoutSuccessUrl());
    }

}
