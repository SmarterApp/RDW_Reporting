package org.opentestsystem.rdw.reporting;

import org.opentestsystem.rdw.reporting.common.report.processor.WkhtmltopdfWebServiceHtmlToPdfProcessor;
import org.opentestsystem.rdw.reporting.web.NotFoundIndexTemplate;
import org.opentestsystem.rdw.security.client.permissionservice.PermissionWebServiceClient;
import org.opentestsystem.rdw.security.service.ComponentPermissionService;
import org.opentestsystem.rdw.security.service.PermissionService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.context.embedded.EmbeddedServletContainerCustomizer;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.client.RestTemplate;

import java.util.Map;

import static com.google.common.collect.Maps.newHashMap;

@Configuration
public class ApplicationConfiguration {

    @Bean
    public PermissionWebServiceClient permissionWebServiceClient(
            @Value("${permissionservice.endpoint}") final String endpoint) {
        return new PermissionWebServiceClient(new RestTemplate(), endpoint);
    }

    @Bean
    public PermissionService defaultPermissionService(
            final PermissionWebServiceClient client,
            @Value("${permissionservice.component}") final String component) {
        return new ComponentPermissionService(client, component);
    }

    @Bean
    @ConfigurationProperties(prefix = "app.wkhtmltopdf.options")
    public Map<String, Object> wkhtmltopdfOptions() {
        return newHashMap();
    }

    @Autowired
    public void configure(final WkhtmltopdfWebServiceHtmlToPdfProcessor processor) {
        processor.setOptions(wkhtmltopdfOptions());
    }

    @Bean
    public EmbeddedServletContainerCustomizer notFoundCustomizer() {
        return new NotFoundIndexTemplate();
    }

}

