package org.opentestsystem.rdw.reporting.report;

import org.opentestsystem.rdw.reporting.common.model.Report;
import org.opentestsystem.rdw.reporting.common.report.GroupExamReportRequest;
import org.opentestsystem.rdw.reporting.common.report.SchoolGradeExamReportRequest;
import org.opentestsystem.rdw.reporting.security.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.List;

@RestController
public class ExamReportController {

    private final ExamReportService service;

    @Autowired
    ExamReportController(final ExamReportService service) {
        this.service = service;
    }

    @GetMapping("/api/reports")
    public List<Report> getReports(@AuthenticationPrincipal final User user) {
        return service.getReports(user);
    }

    @GetMapping("/api/reports/{reportId}")
    public void getReport(
            @AuthenticationPrincipal final User user,
            @PathVariable final long reportId,
            final HttpServletResponse response) throws IOException {

        service.streamReport(user, reportId, response.getOutputStream());
    }

    @PostMapping("/api/schools/{schoolId}/assessmentGrades/{gradeId}/reports")
    @ResponseStatus(HttpStatus.CREATED)
    public Report createReport(
            @AuthenticationPrincipal final User user,
            @RequestBody final SchoolGradeExamReportRequest request) {

        return service.createReport(user, request);
    }

    @PostMapping("/api/groups/{groupId}/reports")
    @ResponseStatus(HttpStatus.CREATED)
    public Report createReport(
            @AuthenticationPrincipal final User user,
            @RequestBody final GroupExamReportRequest request) {

        return service.createReport(user, request);
    }

}
