package org.opentestsystem.rdw.reporting.security.sandbox;

import org.opentestsystem.rdw.reporting.sandbox.SandboxRepository;
import org.opentestsystem.rdw.reporting.sandbox.SandboxRoleRepository;
import org.opentestsystem.rdw.reporting.security.authority.AuthorityService;
import org.opentestsystem.rdw.security.service.PermissionService;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationManager;

/**
 * Required beans:
 * {@link AuthenticationManager}
 * {@link PermissionService}
 * {@link SandboxRoleRepository}
 */
@Configuration
public class SandboxSecurityConfiguration {

    @Bean
    public SandboxAuthenticationFilter sandboxAuthenticationFilter(
            final AuthenticationManager authenticationManager) {
        final SandboxAuthenticationFilter filter = new SandboxAuthenticationFilter("/sandbox/login");

        // required by AbstractAuthenticationProcessingFilter
        // provided by the SAML WebSecurityConfigurationAdapter
        filter.setAuthenticationManager(authenticationManager);
        return filter;
    }

    @Bean
    public SandboxUserDetailsService sandboxUserDetailsService(
            final AuthorityService authorityService,
            final SandboxRepository sandboxRepository,
            final SandboxRoleRepository sandboxRoleRepository,
            final SandboxUserGroupRepository groupRepository) {
        return new SandboxUserDetailsService(
                authorityService,
                sandboxRepository,
                sandboxRoleRepository,
                groupRepository
        );
    }

    @Bean
    public SandboxAuthenticationProvider sandboxAuthenticationProvider(
            final SandboxUserDetailsService userDetailsService,
            final SandboxRoleRepository sandboxRoleRepository) {
        return new SandboxAuthenticationProvider(
                userDetailsService,
                sandboxRoleRepository
        );
    }

}
