package org.opentestsystem.rdw.reporting.security.sandbox;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.core.annotation.Order;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;

@Configuration
@Order(99) // less than default 100 so saml config is picked up last and wins out
public class SandboxSecurityConfiguration extends WebSecurityConfigurerAdapter {

    @Bean
    public SandboxAuthenticationFilter sandboxAuthenticationFilter(final AuthenticationManager authenticationManager) {
        final SandboxAuthenticationFilter filter = new SandboxAuthenticationFilter("/sandbox-login");

        // required by AbstractAuthenticationProcessingFilter
        // provided by WebSecurityConfigurationAdapter
        filter.setAuthenticationManager(authenticationManager);

        filter.setFilterProcessesUrl("/sandbox-login");
        return filter;
    }

    @Bean
    public SandboxUserDetailsService sandboxUserDetailsService() {
        return new SandboxUserDetailsService();
    }

    @Bean
    public SandboxAuthenticationProvider sandboxAuthenticationProvider(final SandboxUserDetailsService userDetailsService) {
        return new SandboxAuthenticationProvider(userDetailsService);
    }

}
