package org.opentestsystem.rdw.reporting.exam;

/**
 * Represents the context in which the student has taken the exam
 */
public class StudentContext {

    private long schoolId;
    private long gradeId;
    private boolean ideaIndicator;
    private boolean iep;
    private boolean lep;
    private boolean section504;
    private boolean economicDisadvantage;
    private boolean migrantStatus;
    private String englishProficiencyLevel;
    private String t3ProgramType;
    private String languageCode;
    private String primaryDisabilityType;

    private StudentContext() {
    }

    public static Builder builder() {
        return new Builder();
    }

    /**
     * @return the entity ID of the school responsible for administering the exam
     */
    public long getSchoolId() {
        return schoolId;
    }

    /**
     * @return the grade entity ID of the student at the time of the exam
     */
    public long getGradeId() {
        return gradeId;
    }

    /**
     * @return TODO - add description
     */
    public boolean isIdeaIndicator() {
        return ideaIndicator;
    }

    /**
     * @return TODO - add description
     */
    public boolean isIep() {
        return iep;
    }

    /**
     * @return TODO - add description
     */
    public boolean isLep() {
        return lep;
    }

    /**
     * @return indicates whether or not the student was a beneficiary of section 504 housing at the time of the exam
     */
    public boolean isSection504() {
        return section504;
    }

    /**
     * @return indicates whether or not the student was considered economically disadvantaged at the time of the exam
     */
    public boolean isEconomicDisadvantage() {
        return economicDisadvantage;
    }

    /**
     * @return indicates whether or not the student was considered a migrant at the time of the exam
     */
    public boolean isMigrantStatus() {
        return migrantStatus;
    }

    /**
     * @return code describing the student's english proficiency level at the time of the exam
     */
    public String getEnglishProficiencyLevel() {
        return englishProficiencyLevel;
    }

    /**
     * @return TODO - add description
     */
    public String getT3ProgramType() {
        return t3ProgramType;
    }

    /**
     * @return the code for the language in which the exam was taken
     */
    public String getLanguageCode() {
        return languageCode;
    }

    /**
     * @return the code for the primary disability experienced by the student at the time of the exam
     */
    public String getPrimaryDisabilityType() {
        return primaryDisabilityType;
    }

    public static class Builder {

        private long schoolId;
        private long gradeId;
        private boolean ideaIndicator;
        private boolean iep;
        private boolean lep;
        private boolean section504;
        private boolean economicDisadvantage;
        private boolean migrantStatus;
        private String englishProficiencyLevel;
        private String t3ProgramType;
        private String languageCode;
        private String primaryDisabilityType;

        public Builder schoolId(final long schoolId) {
            this.schoolId = schoolId;
            return this;
        }

        public Builder gradeId(final long gradeId) {
            this.gradeId = gradeId;
            return this;
        }

        public Builder ideaIndicator(final boolean ideaIndicator) {
            this.ideaIndicator = ideaIndicator;
            return this;
        }

        public Builder iep(final boolean iep) {
            this.iep = iep;
            return this;
        }

        public Builder lep(final boolean lep) {
            this.lep = lep;
            return this;
        }

        public Builder section504(final boolean section504) {
            this.section504 = section504;
            return this;
        }

        public Builder economicDisadvantage(final boolean economicDisadvantage) {
            this.economicDisadvantage = economicDisadvantage;
            return this;
        }

        public Builder migrantStatus(final boolean migrantStatus) {
            this.migrantStatus = migrantStatus;
            return this;
        }

        public Builder englishProficiencyLevel(final String englishProficiencyLevel) {
            this.englishProficiencyLevel = englishProficiencyLevel;
            return this;
        }

        public Builder t3ProgramType(final String t3ProgramType) {
            this.t3ProgramType = t3ProgramType;
            return this;
        }

        public Builder languageCode(final String languageCode) {
            this.languageCode = languageCode;
            return this;
        }

        public Builder primaryDisabilityType(final String primaryDisabilityType) {
            this.primaryDisabilityType = primaryDisabilityType;
            return this;
        }

        public StudentContext build() {
            final StudentContext context = new StudentContext();
            context.schoolId = schoolId;
            context.gradeId = gradeId;
            context.ideaIndicator = ideaIndicator;
            context.iep = iep;
            context.lep = lep;
            context.section504 = section504;
            context.economicDisadvantage = economicDisadvantage;
            context.migrantStatus = migrantStatus;
            context.englishProficiencyLevel = englishProficiencyLevel;
            context.t3ProgramType = t3ProgramType;
            context.languageCode = languageCode;
            context.primaryDisabilityType = primaryDisabilityType;
            return context;
        }

    }

}
