package org.opentestsystem.rdw.reporting.processor.configuration;

import org.opentestsystem.rdw.reporting.processor.service.WkhtmltopdfWebServiceHtmlToPdfProcessor;
import org.opentestsystem.rdw.reporting.processor.stream.CollateStudentReportsSink;
import org.opentestsystem.rdw.reporting.processor.stream.ExportExamsSink;
import org.opentestsystem.rdw.reporting.processor.stream.ExportExamsSource;
import org.opentestsystem.rdw.reporting.processor.stream.FetchStudentsProcessor;
import org.opentestsystem.rdw.reporting.processor.stream.FetchStudentsSource;
import org.opentestsystem.rdw.reporting.processor.stream.GenerateStudentsReportProcessor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.EnableConfigurationProperties;
import org.springframework.cloud.stream.annotation.EnableBinding;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.retry.backoff.ExponentialBackOffPolicy;
import org.springframework.retry.policy.SimpleRetryPolicy;
import org.springframework.retry.support.RetryTemplate;

import java.util.Map;

import static com.google.common.collect.Maps.newHashMap;

@Configuration
@EnableConfigurationProperties({
        ReportGenerationProperties.class,
        ReportGenerationRetryProperties.class
})
@EnableBinding({
        ExportExamsSource.class,
        ExportExamsSink.class,
        FetchStudentsSource.class,
        FetchStudentsProcessor.class,
        GenerateStudentsReportProcessor.class,
        CollateStudentReportsSink.class
})
public class ReportProcessorConfiguration {

    @Autowired
    public void configure(final WkhtmltopdfWebServiceHtmlToPdfProcessor processor) {
        processor.setOptions(wkhtmltopdfOptions());
    }

    @Bean
    public RetryTemplate retryTemplate(final ReportGenerationRetryProperties retryProperties) {
        final ExponentialBackOffPolicy backOffPolicy = new ExponentialBackOffPolicy();
        backOffPolicy.setInitialInterval(retryProperties.getInitialInterval());
        backOffPolicy.setMultiplier(retryProperties.getMultiplier());

        //Retry after 1s, 2s, 4s, 8s, ... 128s, total max retry time of 255s
        final SimpleRetryPolicy retryPolicy = new SimpleRetryPolicy(retryProperties.getMaxRetries());

        final RetryTemplate retryTemplate = new RetryTemplate();
        retryTemplate.setBackOffPolicy(backOffPolicy);
        retryTemplate.setRetryPolicy(retryPolicy);

        return new RetryTemplate();
    }

    @Bean
    @ConfigurationProperties(prefix = "app.wkhtmltopdf.options")
    public Map<String, Object> wkhtmltopdfOptions() {
        return newHashMap();
    }

}
