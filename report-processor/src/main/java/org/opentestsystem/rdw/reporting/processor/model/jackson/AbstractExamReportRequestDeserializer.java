package org.opentestsystem.rdw.reporting.processor.model.jackson;

import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.deser.std.StdDeserializer;
import org.opentestsystem.rdw.reporting.processor.model.AbstractExamReportRequest;
import org.opentestsystem.rdw.reporting.processor.model.ReportType;

import java.io.IOException;

/**
 * This deserializer is responsible for deserializing AbstractExamReportRequest instances
 * into concrete sub-classes based upon the serialized contents.
 */
public class AbstractExamReportRequestDeserializer extends StdDeserializer<AbstractExamReportRequest> {

    public AbstractExamReportRequestDeserializer() {
        super(AbstractExamReportRequest.class);
    }

    @Override
    public AbstractExamReportRequest deserialize(final JsonParser parser, final DeserializationContext context) throws IOException {
        final ObjectMapper mapper = (ObjectMapper) parser.getCodec();
        final JsonNode jsonNode = mapper.readTree(parser);
        final JsonNode reportTypeNode = jsonNode.get("reportType");
        final ReportType reportType = ReportType.valueOf(reportTypeNode.asText());
        return mapper.readValue(jsonNode.toString(), reportType.getReportClass());
    }
}
