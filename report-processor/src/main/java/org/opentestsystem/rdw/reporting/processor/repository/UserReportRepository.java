package org.opentestsystem.rdw.reporting.processor.repository;

import org.opentestsystem.rdw.reporting.processor.model.UserReport;

import java.util.Collection;
import java.util.List;

/**
 * Implementations of this interface are responsible for persisting UserReport instances.
 */
public interface UserReportRepository {

    /**
     * Insert a new UserReport record.
     * NOTE: A new {@link UserReport#id} will be generated and returned in the response UserReport
     *
     * @param report A report record
     * @return The inserted report record
     */
    UserReport create(UserReport report);

    /**
     * Save an updated UserReport record.
     * NOTE:
     * Must have a valid {@link UserReport#id}
     * @param report A report record
     */
    UserReport update(UserReport report);

    /**
     * Find reports for a user, optionally filtered by report id.
     *
     * @param user      The user
     * @param reportIds Optional report ids, empty collection returns all reports for the user
     * @return The reports
     */
    List<UserReport> findByUserAndIds(String user, Collection<Long> reportIds);

    /**
     * Find a report by id.
     *
     * @param reportId A report id
     * @return The UserReport or null
     */
    UserReport findById(long reportId);

    /**
     * Find reports created older than a specified number of days
     *
     * @param numberOfDays The number of days
     * @return The reports
     */
    List<UserReport> findAllOlderThanNumberOfDays(int numberOfDays);

    /**
     * Increment the chunk completion count for the given report
     * and return the updated UserReport instance.
     *
     * @param report A report
     * @return The report with updated chunk completion count
     */
    UserReport completeChunk(UserReport report);

    /**
     * Delete reports with the specified ids
     *
     * @param ids The ids of the reports we wish to delete
     */
    void deleteIds(Collection<Long> ids);

    /**
     * Deletes reports with the provided user and ID
     *
     * @param user The user
     * @param id The user report ID
     * @throws java.util.NoSuchElementException  if no record is found matching this user/ID combination
     */
    void deleteByUserAndId(String user, long id);
}
