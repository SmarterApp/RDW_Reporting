package org.opentestsystem.rdw.reporting.processor.service;

import org.opentestsystem.rdw.reporting.processor.model.UserReport;

import java.util.Collection;
import java.util.List;
import java.util.Optional;

/**
 * Implementations of this interface are responsible for creating and retrieving Reports.
 */
public interface ReportService {

    /**
     * Insert a new UserReport record.
     *
     * @param report A report
     * @return The inserted UserReport with an initialized {@link UserReport#getId()}
     */
    UserReport create(UserReport report);

    /**
     * Find all Reports for a given user, optionally filtered by UserReport id.
     *
     * @param user      The user
     * @param reportIds Optional report id filter, empty returns all reports for the user
     * @return  The requested reports
     */
    List<UserReport> findAllByUserAndId(String user, Collection<Long> reportIds);

    /**
     * Find all Reports created a number of days ago
     *
     * @param numberOfDays The number of days
     * @return  The requested reports
     */
    List<UserReport> findAllOlderThanNumberOfDays(int numberOfDays);

    /**
     * Retrieve a report by id.
     *
     * @param reportId  The report id
     * @return The report, if it exists
     */
    Optional<UserReport> findOneById(long reportId);

    /**
     * Save an updated UserReport.
     * NOTE: The {@link UserReport#completeChunkCount} property is not updated by this method.
     * @see #completeChunk(UserReport)
     *
     * @param report A report
     * @return The saved report
     */
    UserReport update(final UserReport report);

    /**
     * Deletes a collection of reports specified by their ids
     * @param ids The ids of the reports to be removed
     */
    void delete(Collection<Long> ids);

    /**
     * Increment the chunk completion count for the given report
     * and return the updated UserReport instance.
     *
     * @param report A report
     * @return  The report with updated chunk completion count
     */
    UserReport completeChunk(final UserReport report);

}
