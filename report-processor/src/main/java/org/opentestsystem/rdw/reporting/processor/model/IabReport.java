package org.opentestsystem.rdw.reporting.processor.model;

import org.opentestsystem.rdw.reporting.common.model.Assessment;
import org.opentestsystem.rdw.reporting.common.model.ExamWithPercentile;

import java.util.Collection;
import java.util.Map;

public class IabReport extends AbstractExamReport {

    private Map<Assessment, Collection<ExamWithPercentile>> examsByAssessment;

    private IabReport() {
    }

    @Override
    public Integer getSchoolYear() {
        if (examsByAssessment == null) {
            return null;
        }

        for (Collection<ExamWithPercentile> exams : examsByAssessment.values()) {
            if (exams != null && !exams.isEmpty()) {
                return exams.iterator().next().getSchoolYear();
            }
        }

        return null;
    }

    public Builder copy() {
        return builder().copy(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    public Map<Assessment, Collection<ExamWithPercentile>> getExamsByAssessment() {
        return examsByAssessment;
    }

    public static class Builder extends AbstractExamReport.Builder<IabReport, Builder> {

        private Map<Assessment, Collection<ExamWithPercentile>> examsByAssessment;

        public Builder examsByAssessment(final Map<Assessment, Collection<ExamWithPercentile>> examsByAssessment) {
            this.examsByAssessment = examsByAssessment;
            return this;
        }

        public Builder copy(final IabReport report) {
            super.copy(report);
            examsByAssessment(report.examsByAssessment);
            return this;
        }

        public IabReport build() {
            final IabReport report = super.build(new IabReport());
            report.examsByAssessment = examsByAssessment;
            return report;
        }
    }

}
