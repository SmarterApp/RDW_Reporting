package org.opentestsystem.rdw.reporting.processor.util;

import org.opentestsystem.rdw.reporting.common.repository.AssessmentTypeRepository;
import org.opentestsystem.rdw.reporting.common.repository.SubjectRepository;
import org.opentestsystem.rdw.reporting.processor.model.ExamQueryParams;
import org.springframework.stereotype.Component;

import java.util.HashMap;
import java.util.Map;

/**
 * Creates sql parameters using entity repositories to map entity codes to IDs
 */
@Component
public class QueryParameterMapper {

    private final AssessmentTypeRepository assessmentTypeRepository;
    private final SubjectRepository subjectRepository;

    QueryParameterMapper(final AssessmentTypeRepository assessmentTypeRepository,
                         final SubjectRepository subjectRepository) {
        this.assessmentTypeRepository = assessmentTypeRepository;
        this.subjectRepository = subjectRepository;
    }

    /**
     * Creates the query parameters for an {@link ExamQueryParams} instance.
     *
     * @param queryParameters The query parameters
     * @return The SQL query parameters
     */
    public Map<String, Object> toParameters(final ExamQueryParams queryParameters) {
        final Map<String, Object> parameters = new HashMap<>();
        parameters.put("subject_id", subjectRepository.findAllIdsByCode().get(queryParameters.getSubjectCode()));
        parameters.put("assessment_type", assessmentTypeRepository.findAllIdsByCode().get(queryParameters.getAssessmentTypeCode()));
        parameters.put("school_id", queryParameters.getSchoolId());
        parameters.put("grade_id", queryParameters.getGradeId());
        parameters.put("group_id", queryParameters.getGroupId());
        parameters.put("school_year", queryParameters.getSchoolYear());
        parameters.put("student_id", queryParameters.getStudentId());
        parameters.put("disable_transfer_access", queryParameters.isDisableTransferAccess());
        return parameters;
    }

}
