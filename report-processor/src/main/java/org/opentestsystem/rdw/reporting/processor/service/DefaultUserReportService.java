package org.opentestsystem.rdw.reporting.processor.service;

import org.opentestsystem.rdw.reporting.processor.model.UserReport;
import org.opentestsystem.rdw.reporting.processor.repository.UserReportRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Collection;
import java.util.List;
import java.util.Optional;

/**
 * Default implementation of a UserReportService.
 */
@Service
public class DefaultUserReportService implements UserReportService {

    private final UserReportRepository repository;

    @Autowired
    public DefaultUserReportService(final UserReportRepository userReportRepository) {
        this.repository = userReportRepository;
    }

    @Override
    public UserReport create(final UserReport report) {
        return repository.create(report);
    }

    @Override
    public List<UserReport> findAllByUserAndId(final String user, final Collection<Long> reportIds) {
        return repository.findByUserAndIds(user, reportIds);
    }

    @Override
    public List<UserReport> findAllOlderThanNumberOfDays(final int numberOfDays) {
        return repository.findAllOlderThanNumberOfDays(numberOfDays);
    }

    @Override
    public Optional<UserReport> findOneById(final long reportId) {
        return Optional.ofNullable(repository.findById(reportId));
    }

    @Override
    public UserReport update(final UserReport report) {
        return repository.update(report);
    }

    @Override
    public void delete(final Collection<Long> ids) {
        if (!ids.isEmpty()) repository.deleteIds(ids);
    }

    @Override
    public void delete(final String user, final long id) {
        repository.deleteByUserAndId(user, id);
    }

    @Override
    public UserReport completeChunk(final UserReport report) {
        return repository.completeChunk(report);
    }

}