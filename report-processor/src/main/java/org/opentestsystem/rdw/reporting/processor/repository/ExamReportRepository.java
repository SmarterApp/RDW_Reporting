package org.opentestsystem.rdw.reporting.processor.repository;

import org.opentestsystem.rdw.common.model.Subject;
import org.opentestsystem.rdw.reporting.common.report.UserPermissions;
import org.opentestsystem.rdw.security.Permission;
import org.opentestsystem.rdw.reporting.processor.model.AbstractExamReport;
import org.opentestsystem.rdw.reporting.processor.model.ExamQueryParams;

import javax.validation.constraints.NotNull;
import java.util.Collection;
import java.util.Map;
import java.util.Set;

public interface ExamReportRepository<T extends AbstractExamReport> {

    /**
     * Find an exam by student id, school year, and subject.
     * TODO Switch this to an implementation similar to multi-student reports.
     *
     * @param permissions       The user's permissions
     * @param studentId         The student id
     * @param schoolYear        The school year
     * @param subjectId         The subject id
     * @return The exam
     */
    T findOneByStudentIdAndSchoolYear(@NotNull Map<String, Permission> permissions,
                                      Set<Long> groupIds,
                                      long studentId,
                                      int schoolYear,
                                      int subjectId);

    /**
     * Find all exams for students by school id and school year.
     *
     * @param userPermissions   The user permissions
     * @param studentIds        The student ids
     * @param examQueryParams   The request filter
     * @return  Exams for each student id, mapped by subject
     */
    Map<Long, Map<Subject, T>> findAllForStudentsByExamFilter(@NotNull UserPermissions userPermissions,
                                                              Collection<Long> studentIds,
                                                              ExamQueryParams examQueryParams);
}
