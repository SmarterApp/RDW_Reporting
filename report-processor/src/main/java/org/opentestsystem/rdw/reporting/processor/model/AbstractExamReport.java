package org.opentestsystem.rdw.reporting.processor.model;

import org.opentestsystem.rdw.reporting.common.model.Student;
import org.opentestsystem.rdw.reporting.common.model.SubjectDefinition;

public abstract class AbstractExamReport {

    protected String assessmentType;
    protected String subject;
    protected SubjectDefinition subjectDefinition;
    protected Student student;
    protected StudentEnrollment studentEnrollment;

    public String getAssessmentType() {
        return assessmentType;
    }

    public String getSubject() {
        return subject;
    }

    public SubjectDefinition getSubjectDefinition() {
        return subjectDefinition;
    }

    public Student getStudent() {
        return student;
    }

    public StudentEnrollment getStudentEnrollment() {
        return studentEnrollment;
    }

    @SuppressWarnings({"unchecked"})
    public static class Builder<A extends AbstractExamReport, B extends Builder<A, B>> {

        private String assessmentType;
        private String subject;
        private SubjectDefinition subjectDefinition;
        private Student student;
        private StudentEnrollment studentEnrollment;

        public B assessmentType(final String assessmentType) {
            this.assessmentType = assessmentType;
            return (B) this;
        }

        public B subject(final String subject) {
            this.subject = subject;
            return (B) this;
        }

        public B subjectDefinition(final SubjectDefinition subjectDefinition) {
            this.subjectDefinition = subjectDefinition;
            return (B) this;
        }

        public B student(final Student student) {
            this.student = student;
            return (B) this;
        }

        public B studentEnrollment(final StudentEnrollment studentEnrollment) {
            this.studentEnrollment = studentEnrollment;
            return (B) this;
        }

        protected B copy(final A source) {
            assessmentType(source.assessmentType);
            subject(source.subject);
            subjectDefinition(source.subjectDefinition);
            student(source.student);
            studentEnrollment(source.studentEnrollment);
            return (B) this;
        }

        protected A build(final A report) {
            report.assessmentType = assessmentType;
            report.subject = subject;
            report.subjectDefinition = subjectDefinition;
            report.student = student;
            report.studentEnrollment = studentEnrollment;
            return report;
        }

    }

}
