package org.opentestsystem.rdw.reporting.processor.web.converter;

import com.fasterxml.jackson.databind.ObjectMapper;
import org.opentestsystem.rdw.reporting.common.model.AggregateRow;
import org.opentestsystem.rdw.reporting.common.model.BasicAggregateReportQuery;
import org.opentestsystem.rdw.reporting.processor.model.AbstractExamReportRequest;
import org.opentestsystem.rdw.reporting.processor.model.ReportType;
import org.opentestsystem.rdw.reporting.processor.web.ReportContentResource;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.http.MediaType;

import java.util.List;

import static org.springframework.http.MediaType.APPLICATION_JSON;

/**
 * Represents common functionality for converting {@link BasicAggregateReportQuery} report result into a CSV format
 */
abstract class BasicAggregateReportCsvHandler<R extends AggregateRow, Q extends BasicAggregateReportQuery>
        extends AggregateReportCsvHandler<Q, R> {

    @Autowired
    public BasicAggregateReportCsvHandler(final MessageSource messageSource,
                                          final ObjectMapper objectMapper) {
        super(messageSource, objectMapper);
    }

    @Override
    public boolean accept(final ReportContentResource resource, final MediaType requestedMediaType) {
        final AbstractExamReportRequest request = resource.getReport().getReportRequest();
        return !APPLICATION_JSON.isCompatibleWith(requestedMediaType) &&
                request.getReportType() == ReportType.AggregateReportRequest;
    }

    @Override
    protected List<String> getFirstRowAttributes(final Q query) {
        final List<String> attributes = super.getFirstRowAttributes(query);

        attributes.addAll(getFiltersAsAttributes(query.getStudentFilters()));
        return attributes;
    }
}
