package org.opentestsystem.rdw.reporting.processor.repository;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.opentestsystem.rdw.reporting.common.model.ReportQuery;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import java.io.IOException;

import static org.apache.commons.lang3.StringUtils.isBlank;

/**
 * Responsible for serializing and deserializing report queries safely
 */
@Component
public class ReportQueryMapper {
    private final static Logger logger = LoggerFactory.getLogger(ReportQueryMapper.class);
    private final ObjectMapper mapper;

    ReportQueryMapper(final ObjectMapper mapper) {
        this.mapper = mapper;
    }

    public String safeSerialize(final Object query) {
        if (query == null) {
            return null;
        }
        try {
            return mapper.writeValueAsString(query);
        } catch (final JsonProcessingException exception) {
            logger.error("Unable to serialize report query", exception);
            return null;
        }
    }

    public ReportQuery safeDeserialize(final String value) {
        if (isBlank(value)) {
            return null;
        }
        try {
            return mapper.readValue(value, ReportQuery.class);
        } catch (final IOException exception) {
            logger.error("Unable to deserialize report query", exception);
            return null;
        }
    }

}
