package org.opentestsystem.rdw.reporting.processor.service;

import com.google.common.collect.ImmutableMap;
import org.opentestsystem.rdw.reporting.common.report.PrintOptions;
import org.opentestsystem.rdw.reporting.processor.model.Request;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.io.IOException;
import java.io.InputStream;
import java.util.Map;

/**
 * This class invokes openlabs wkhtmltopdf REST API endpoint to convert HTML to PDF
 */
@Service
public class WkhtmltopdfWebServiceHtmlToPdfProcessor implements HtmlToPdfProcessor {

    private static final String GRAYSCALE_OPTION = "grayscale";
    private final WkhtmltopdfWebServiceClient client;
    private Map<String, Object> options;

    @Autowired
    WkhtmltopdfWebServiceHtmlToPdfProcessor(final WkhtmltopdfWebServiceClient client) {
        this.client = client;
    }

    /**
     * @return The pdf display options passed to the web service
     */
    public Map<String, Object> getOptions() {
        return options;
    }

    public void setOptions(final Map<String, Object> options) {
        this.options = options != null ? ImmutableMap.copyOf(options) : null;
    }

    @Override
    public InputStream process(final byte[] html, final PrintOptions printOptions) throws IOException {
        return client.toPdf(new Request(html, computeOptions(printOptions)));
    }

    private Map<String, Object> computeOptions(final PrintOptions printOptions) {
        final ImmutableMap.Builder<String, Object> options = ImmutableMap.builder();
        options.putAll(getOptions());
        if (printOptions != null && printOptions.isGrayscale()) {
            options.put(GRAYSCALE_OPTION, "");
        }
        return options.build();
    }

}
