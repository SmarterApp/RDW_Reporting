package org.opentestsystem.rdw.reporting.processor.thymeleaf;

import com.google.common.collect.ImmutableSet;
import org.thymeleaf.context.IExpressionContext;
import org.thymeleaf.expression.IExpressionObjectFactory;

import java.util.Set;

/**
 * This factory is responsible for instantiating and registering custom evaluation
 * handlers in our Thymeleaf engine.
 */
class ReportingExpressionFactory implements IExpressionObjectFactory {

    private static final String INSTANTS_EVALUATION_VARIABLE_NAME = "instants";
    private static final Set<String> ALL_VARIABLES = ImmutableSet.of(INSTANTS_EVALUATION_VARIABLE_NAME);

    @Override
    public Set<String> getAllExpressionObjectNames() {
        return ALL_VARIABLES;
    }

    @Override
    public Object buildObject(final IExpressionContext context, final String expressionObjectName) {
        if (INSTANTS_EVALUATION_VARIABLE_NAME.equalsIgnoreCase(expressionObjectName)) {
            return new InstantFormatter(context.getLocale());
        }
        return null;
    }

    @Override
    public boolean isCacheable(final String expressionObjectName) {
        return expressionObjectName != null &&
                ALL_VARIABLES.contains(expressionObjectName);
    }
}
