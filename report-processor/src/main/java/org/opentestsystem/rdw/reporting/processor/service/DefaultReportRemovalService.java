package org.opentestsystem.rdw.reporting.processor.service;

import org.opentestsystem.rdw.reporting.processor.model.Report;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

/**
 * This service cleans up old user reports from both the archive and the database.<br/>
 *
 * It does not have a stereotype annotation because it is instantiated conditionally in
 * {@link org.opentestsystem.rdw.reporting.processor.configuration.RemoveStaleReportsConfiguration}.<br/>
 */
public class DefaultReportRemovalService implements ReportRemovalService {
    private static final Logger logger = LoggerFactory.getLogger(DefaultReportRemovalService.class);

    private final ReportService reportService;
    private final ReportContentService reportContentService;

    public DefaultReportRemovalService(final ReportService reportService, final ReportContentService reportContentService) {
        this.reportService = reportService;
        this.reportContentService = reportContentService;
    }

    @Override
    public void deleteOldReports(final int maxReportLifetimeDays) {
        final List<Report> reports = reportService.findAllOlderThanNumberOfDays(maxReportLifetimeDays);
        logger.info("Deleting {} reports older than {} days.", reports.size(), maxReportLifetimeDays);
        final Set<Report> successfulDeletes = reportContentService.deleteContents(reports);
        final Set<Long> ids = successfulDeletes.stream().map(Report::getId).collect(Collectors.toSet());
        reportService.delete(ids);
    }
}
