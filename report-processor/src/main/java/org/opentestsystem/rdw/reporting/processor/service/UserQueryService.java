package org.opentestsystem.rdw.reporting.processor.service;

import org.opentestsystem.rdw.reporting.common.model.ReportQuery;
import org.opentestsystem.rdw.reporting.common.web.security.User;
import org.opentestsystem.rdw.reporting.processor.model.UserQuery;
import org.springframework.security.access.prepost.PreAuthorize;

import javax.validation.constraints.NotNull;
import java.util.List;
import java.util.Optional;

/**
 * Service responsible for managing user saved queries
 */
@PreAuthorize("hasAnyAuthority('PERM_INDIVIDUAL_PII_READ', 'PERM_GROUP_PII_READ', 'PERM_CUSTOM_AGGREGATE_READ')")
public interface UserQueryService {

    /**
     * Gets all of the user's saved queries
     *
     * @param user The user
     * @return all of the user's saved queries
     */
    List<UserQuery> get(@NotNull User user);

    /**
     * Gets user query by ID
     *
     * @param user The user
     * @param id The query ID
     * @return the user query matching the ID
     */
    Optional<UserQuery> get(@NotNull User user, long id);

    /**
     * Saves a user query
     *
     * @param user The user
     * @param query The query to save
     * @return
     */
    UserQuery create(@NotNull User user, @NotNull ReportQuery query);

    /**
     * Updates a user query
     *
     * @param user The user
     * @param query The query update
     * @return The udpated query
     */
    UserQuery update(@NotNull User user, @NotNull UserQuery query);

    /**
     * Deletes a user query
     *
     * @param user The user
     * @param id The query ID
     */
    void delete(@NotNull User user, long id);

}
