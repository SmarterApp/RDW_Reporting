package org.opentestsystem.rdw.reporting.processor.service;

import org.opentestsystem.rdw.reporting.common.model.ReportQuery;
import org.opentestsystem.rdw.reporting.common.web.security.User;
import org.opentestsystem.rdw.reporting.processor.model.UserQuery;
import org.opentestsystem.rdw.reporting.processor.repository.UserQueryRepository;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;

/**
 * The default repository-backed user query service implementation
 */
@Service
class DefaultUserQueryService implements UserQueryService {

    private final UserQueryRepository repository;

    DefaultUserQueryService(final UserQueryRepository repository) {
        this.repository = repository;
    }

    @Override
    public List<UserQuery> get(final User user) {
        return repository.findAllByUser(user.getUsername());
    }

    @Override
    public Optional<UserQuery> get(final User user, final long id) {
        return Optional.ofNullable(
                repository.findByUserAndId(user.getUsername(), id)
        );
    }

    @Override
    public UserQuery create(final User user, final ReportQuery query) {
        return repository.create(
                UserQuery.builder()
                        .user(user.getUsername())
                        .query(query)
                        .build()
        );
    }

    @Override
    public UserQuery update(final User user, final UserQuery query) {
        return repository.update(
                query.copy()
                        .user(user.getUsername())
                        .build()
        );
    }

    @Override
    public void delete(final User user, final long id) {
        repository.findByUserAndId(user.getUsername(), id);
    }
}
