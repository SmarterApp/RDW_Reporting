sqlbuilder:
  templates:
      # ------------   -----------------------------------------------------------------------------
      findAllExamsByStudentIdsAndQueryParams:
        clauses:
          select:  >-
              e.id,
              e.session_id,
              e.type_id,
              e.school_year,
              e.grade_code,
              e.completeness_code,
              e.administration_condition_code,
              e.school_year,
              e.completed_at,
              e.scale_score,
              e.scale_score_std_err,
              e.performance_level,
              e.available_accommodation_codes,
              a.id as asmt_id,
              a.type_id as asmt_type_id,
              a.label as asmt_label,
              a.subject_id as asmt_subject_id,
              a.school_year as asmt_school_year,
              a.grade_code as asmt_grade_code,
              a.min_score as asmt_min_score,
              a.cut_point_1 as asmt_cut_point_1,
              a.cut_point_2 as asmt_cut_point_2,
              a.cut_point_3 as asmt_cut_point_3,
              a.max_score as asmt_max_score,
              st.id as student_id,
              st.ssid as student_ssid,
              st.first_name as student_first_name,
              st.last_or_surname as student_last_name,
              st.gender_code as student_gender_code,
              s.id as school_id,
              s.name as school_name,
              s.district_id as school_district_id,
              s.district_group_id as school_district_group_id,
              s.school_group_id,
              d.name as district_name

          from: >-
              exam e

          join: >-
              join asmt a on e.asmt_id=a.id
              join student st on e.student_id=st.id
              join school s on e.school_id=s.id
              join district d on s.district_id=d.id
              join school isch on st.inferred_school_id = isch.id

          where: >-
              e.student_id in (:student_ids)
              and (:school_year is null or e.school_year=:school_year)
              and (:subject_id is null or a.subject_id=:subject_id)
              and (:grade_id is null or a.grade_id=:grade_id)
              and ${sql.reportProcessor.snippet.schoolScopePermission}

          orderBy: >-
              e.completed_at desc

      # ------------  ---------------------------------------------------------------------------
        addons:
            unknownScopePermission:
              clauses:
                where:  >-
                  ${sql.reportProcessor.snippet.unknownScopePermission}

      # ------------  -------------------------------------------------------------------
            individualScopePermission:
              clauses:
                where:  >-
                   ${sql.reportProcessor.snippet.individualScopePermission}

            groupScopePermission:
              clauses:
                join:  >-
                   join student_group_membership sgm on st.id = sgm.student_id
                   join student_group sg on sgm.student_group_id = sg.id
                     and (sg.subject_id is null or a.subject_id = sg.subject_id)

                where:
                  sg.id=:group_id

      # ------------   -----------------------------------------------------------
            iab:
              clauses:
                where: >-
                    a.type_id=2

      # ------------  -----------------------------------------------------------
            ica:
              clauses:
                select:
                    a.claim1_score_code,
                    e.claim1_category,
                    e.claim1_scale_score,
                    e.claim1_scale_score_std_err,
                    a.claim2_score_code,
                    e.claim2_category,
                    e.claim2_scale_score,
                    e.claim2_scale_score_std_err,
                    a.claim3_score_code,
                    e.claim3_category,
                    e.claim3_scale_score,
                    e.claim3_scale_score_std_err,
                    a.claim4_score_code,
                    e.claim4_category,
                    e.claim4_scale_score,
                    e.claim4_scale_score_std_err,
                    a.claim1_score_code as asmt_claim1_score_code,
                    a.claim2_score_code as asmt_claim2_score_code,
                    a.claim3_score_code as asmt_claim3_score_code,
                    a.claim4_score_code as asmt_claim4_score_code
                where: >-
                    a.type_id=1