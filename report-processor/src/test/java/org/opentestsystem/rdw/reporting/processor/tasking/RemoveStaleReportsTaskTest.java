package org.opentestsystem.rdw.reporting.processor.tasking;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.ArgumentCaptor;
import org.mockito.runners.MockitoJUnitRunner;
import org.opentestsystem.rdw.reporting.processor.service.ReportRemovalService;
import org.springframework.scheduling.TaskScheduler;

import java.util.Date;

import static org.mockito.Mockito.any;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;

@RunWith(MockitoJUnitRunner.class)
public class RemoveStaleReportsTaskTest {

    private RemoveStaleReportsTask removeStaleReportsTask;
    private ReportRemovalService reportRemovalService;
    private TaskScheduler taskScheduler;

    @Before
    public void createTask() {
        taskScheduler = mock(TaskScheduler.class);
        reportRemovalService = mock(ReportRemovalService.class);

        removeStaleReportsTask = new RemoveStaleReportsTask(reportRemovalService, taskScheduler, 23, 11);
    }

    @Test
    public void itShouldRemoveStaleReports() throws InterruptedException {
        removeStaleReportsTask.removeStaleReports();

        final ArgumentCaptor<Runnable> runnableCaptor = ArgumentCaptor.forClass(Runnable.class);
        verify(taskScheduler).schedule(runnableCaptor.capture(), any(Date.class));
        runnableCaptor.getValue().run();
        verify(reportRemovalService).deleteOldReports(23);
    }

}
