package org.opentestsystem.rdw.reporting.processor;

import com.google.common.collect.ImmutableMap;
import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.common.model.AssessmentType;
import org.opentestsystem.rdw.multitenant.TenantContextHolder;
import org.opentestsystem.rdw.reporting.common.i18n.TranslationConfiguration;
import org.opentestsystem.rdw.reporting.common.model.Assessment;
import org.opentestsystem.rdw.reporting.common.model.Exam;
import org.opentestsystem.rdw.reporting.common.model.ScaleScore;
import org.opentestsystem.rdw.reporting.common.model.School;
import org.opentestsystem.rdw.reporting.common.model.Student;
import org.opentestsystem.rdw.reporting.common.model.StudentContext;
import org.opentestsystem.rdw.reporting.common.model.StudentPrintableReportQuery;
import org.opentestsystem.rdw.reporting.common.model.SubjectDefinition;
import org.opentestsystem.rdw.reporting.common.model.Trait;
import org.opentestsystem.rdw.reporting.common.model.TraitScore;
import org.opentestsystem.rdw.reporting.common.test.support.Instants;
import org.opentestsystem.rdw.reporting.processor.model.AbstractExamReport;
import org.opentestsystem.rdw.reporting.processor.model.IcaSummativeReport;
import org.opentestsystem.rdw.reporting.processor.model.StudentEnrollment;
import org.opentestsystem.rdw.reporting.processor.service.ReportViewSupport;
import org.opentestsystem.rdw.reporting.processor.service.TemplateProcessor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.Import;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.junit4.SpringRunner;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Locale;
import java.util.Map;

import static com.google.common.collect.Lists.newArrayList;
import static com.google.common.collect.Sets.newHashSet;

/**
 * Test for rendering the reference template with context data.
 *
 * TODO - get webapp en.json loading properly?
 * The translation configuration doesn't do enough because the JsonResourceTranslationProvider
 * only gets the en.json from common, it doesn't get the one in webapp/src/main/webapp/src/assets.
 * TODO - get accommodation_translation loading?
 */
@RunWith(SpringRunner.class)
@ActiveProfiles({"reference-template"})  // set datasource and tenant
@Ignore("Local dev only; probably won't work in CI/CD")
@SpringBootTest
@Import(TranslationConfiguration.class)  // creates MessageSource for Thymeleaf
public class ReferenceTemplateIT {

    @Autowired
    private TemplateProcessor processor;
    @Autowired
    private ReportViewSupport support;

    @Before
    public void setTenantId() {
        // need to set the tenant (match id in application-reference-template.yml)
        // so the JdbcTranslationProvider doesn't short-circuit ...
        TenantContextHolder.setTenantId("CA");
    }

    @Test
    public void testBasics() throws IOException {
        // Note: model mimics how the body template is included in the batch report.
        final Map<String, Object> model = ImmutableMap.of(
            "report", summativeReport(),
            "request", request(),
            "support", support);

        final byte[] bytes = processor.process("reference", model, Locale.ENGLISH);

        final File output = File.createTempFile("reference.", ".html", new File("/tmp"));
        try (final FileOutputStream data = new FileOutputStream(output)) {
            data.write(bytes);
        }
        System.out.println("Output written to " + output.getAbsolutePath());
    }

    private StudentPrintableReportQuery request() {
        // TODO - data and stuff
        return StudentPrintableReportQuery.builder().build();
    }

    // generates a realistic ELA SUMMATIVE report
    private AbstractExamReport summativeReport() {
        final Student student = Student.builder()
            .id(123)
            .ssid("7762094")
            .firstName("Bob")
            .lastName("Smith")
            .genderCode("Male")
            .ethnicityCodes(newHashSet("White", "Asian"))
            .build();

        return IcaSummativeReport.builder()
            .subject("ELA")
            .assessmentType(AssessmentType.SUMMATIVE.code())
            .subjectDefinition(SubjectDefinition.builder()
                .subjectCode("ELA")
                .asmtTypeCode(AssessmentType.SUMMATIVE.code())
                .performanceLevelCount(4)
                .performanceLevelStandardCutoff(3)
                .claimScorePerformanceLevelCount(3)
                .targetReport(true)
                .printedReport(true)
                .traitReport(true)
                .scorableClaims(newArrayList("SOCK_R", "2-W", "SOCK_LS", "4-CR"))
                .traits(newArrayList(
                    Trait.builder().purpose("ARGU").category("CON").maxScore(2).build(),
                    Trait.builder().purpose("ARGU").category("EVI").maxScore(4).build(),
                    Trait.builder().purpose("ARGU").category("ORG").maxScore(4).build(),
                    Trait.builder().purpose("EXPL").category("CON").maxScore(2).build(),
                    Trait.builder().purpose("EXPL").category("EVI").maxScore(4).build(),
                    Trait.builder().purpose("EXPL").category("ORG").maxScore(4).build()
                ))
                .build())
            .student(student)
            .studentEnrollment(StudentEnrollment.builder()
                .gradeCode("11")
                .schoolName("UC High School")
                .districtName("San Diego Unified")
                .stateCode("CA")
                .build())
            .assessment(Assessment.builder()
                .id(4325)
                .label("Grade 11 ELA")
                .name("SBAC-SUM-FIXED-G11E-COMBINED-2020")
                .gradeCode("11")
                .type(AssessmentType.SUMMATIVE)
                .subjectCode("ELA")
                .schoolYear(2020)
                .cutPoints(newArrayList(2493, 2583, 2682))
                .claimCodes(newArrayList("SOCK_R", "2-W", "SOCK_LS", "4-CR"))
                .werItem(true)
                .targetReportEnabled(true)
                .printedReportEnabled(true)
                .traitReportEnabled(true)
                .build())
            .exam(Exam.builder()
                .scaleScore(ScaleScore.builder().value(2700).standardError(134.0).level(4).build())
                .claimScaleScores(newArrayList(
                    ScaleScore.builder().value(2502).standardError(70.0).level(2).build(),
                    ScaleScore.builder().value(2790).standardError(28.0).level(3).build(),
                    ScaleScore.builder().value(2772).standardError(89.0).level(3).build()))
                .traitScores(newArrayList(
                    TraitScore.builder().score(1).maxScore(2).purpose("ARGU").category("CON").build(),
                    TraitScore.builder().score(3).maxScore(4).purpose("ARGU").category("EVI").build(),
                    TraitScore.builder().score(2).maxScore(4).purpose("ARGU").category("ORG").build()))
                .accommodationCodes(newArrayList("NEA_Calc"))
                .sessionId("Not Available")
                .dateTime(Instants.from("2019-03-14"))
                .schoolYear(2020)
                .gradeCode("11")
                .completenessCode("Complete")
                .administrativeConditionCode("NS")
                .student(student)
                .studentContext(StudentContext.builder()
                    .economicDisadvantage(true)
                    .iep(false)
                    .lep(false)
                    .section504(false)
                    .migrantStatus(true)
                    .elasCode("EL")
                    .languageCode("fre")
                    .build())
                .school(School.builder().name("UC High School").naturalId("12345670098765").build())
                .transfer(false)
                .build())
            .build();
    }
}
