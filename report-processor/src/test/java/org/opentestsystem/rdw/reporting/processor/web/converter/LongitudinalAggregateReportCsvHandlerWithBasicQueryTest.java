package org.opentestsystem.rdw.reporting.processor.web.converter;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.google.common.collect.ImmutableSet;
import org.junit.runner.RunWith;
import org.mockito.junit.MockitoJUnitRunner;
import org.opentestsystem.rdw.common.model.Subject;
import org.opentestsystem.rdw.reporting.common.model.AbstractAggregateReportQuery;
import org.opentestsystem.rdw.reporting.common.model.Dimension;
import org.opentestsystem.rdw.reporting.common.model.LongitudinalReportQuery;
import org.opentestsystem.rdw.reporting.common.model.LongitudinalRow;
import org.opentestsystem.rdw.reporting.common.model.Measures;
import org.opentestsystem.rdw.reporting.common.model.Organization;
import org.springframework.context.MessageSource;

import static org.opentestsystem.rdw.common.model.AssessmentType.SUMMATIVE;
import static org.opentestsystem.rdw.common.model.Subject.MATH;
import static org.opentestsystem.rdw.reporting.common.model.DimensionType.Gender;
import static org.opentestsystem.rdw.reporting.common.model.DimensionType.Overall;

@RunWith(MockitoJUnitRunner.class)
public class LongitudinalAggregateReportCsvHandlerWithBasicQueryTest extends AbstractAggregateReportCsvHandlerWithBasicQueryTest<LongitudinalRow> {

    @Override
    protected LongitudinalRow reportRow(final Organization organization) {
        return super.reportRowBuilder(LongitudinalRow.builder(), organization)
                .dimension(Dimension.builder().type(Overall).build())
                .cohortMeasures(Measures.builder().build())
                .build();
    }

    @Override
    protected LongitudinalAggregateReportCsvHandler createHandlerUnderTest(final MessageSource messageSource, final ObjectMapper objectMapper) {
        return new LongitudinalAggregateReportCsvHandler(messageSource, objectMapper);
    }

    @Override
    protected AbstractAggregateReportQuery.Builder getQueryBuilder() {
        return LongitudinalReportQuery.builder()
                .assessmentTypeCode(SUMMATIVE.code())
                .subjectCodes(ImmutableSet.of(MATH.code().toLowerCase(), Subject.ELA.code().toUpperCase()))
                .toSchoolYear(2018)
                .assessmentGradeCodes(ImmutableSet.of("01", "02", "03", "04", "05"))
                .includeState(true)
                .includeAllDistricts(false)
                .dimensionTypes(ImmutableSet.of(Gender))
                .districtIds(ImmutableSet.of(1L))
                .schoolIds(ImmutableSet.of(1L));
    }

    @Override
    protected int getHeadersCount() {
        return 24;
    }
}